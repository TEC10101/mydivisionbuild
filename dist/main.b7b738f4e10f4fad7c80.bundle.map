{"version":3,"sources":["webpack:///main.b7b738f4e10f4fad7c80.bundle.js","webpack:///./~/lodash/index.js","webpack:///./~/lodash/lodash.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/assets/styles/app.scss","webpack:///./src/app/common/converters.ts","webpack:///./src/app/common/models/common.ts","webpack:///./src/app/common/pipes/prettynumber.ts","webpack:///./src/app/common/pipes/ucfirst_pipe.ts","webpack:///./src/app/common/utils.ts","webpack:///./src/app/components/attributes/attribute-restrict.pipe.ts","webpack:///./src/app/components/attributes/attribute.component.html","webpack:///./src/app/components/attributes/attribute.component.scss","webpack:///./src/app/components/attributes/attribute.component.ts","webpack:///./src/app/components/attributes/attribute.pipe.ts","webpack:///./src/app/components/attributes/attributes.component.scss","webpack:///./src/app/components/attributes/attributes.component.ts","webpack:///./src/app/components/attributes/attributes.model.ts","webpack:///./src/app/components/auth/auth-callback.component.ts","webpack:///./src/app/components/auth/auth.component.html","webpack:///./src/app/components/auth/auth.component.ts","webpack:///./src/app/components/auto-resize-input/auto-resize-input.component.scss","webpack:///./src/app/components/auto-resize-input/auto-resize-input.component.ts","webpack:///./src/app/components/build-stats-banner/build-stats-banner.component.html","webpack:///./src/app/components/build-stats-banner/build-stats-banner.component.scss","webpack:///./src/app/components/build-stats-banner/build-stats-banner.component.ts","webpack:///./src/app/components/inventory/inventory-item-image/inventory-item-image.component.html","webpack:///./src/app/components/inventory/inventory-item-image/inventory-item-image.component.scss","webpack:///./src/app/components/inventory/inventory-item-image/inventory-item-image.component.ts","webpack:///./src/app/components/inventory/inventory-item-row/inventory-item-row.component.html","webpack:///./src/app/components/inventory/inventory-item-row/inventory-item-row.component.scss","webpack:///./src/app/components/inventory/inventory-item-row/inventory-item-row.component.ts","webpack:///./src/app/components/inventory/inventory-item/inventory-item.component.html","webpack:///./src/app/components/inventory/inventory-item/inventory-item.component.scss","webpack:///./src/app/components/inventory/inventory-item/inventory-item.component.ts","webpack:///./src/app/components/inventory/inventory-items/inventory-items.component.html","webpack:///./src/app/components/inventory/inventory-items/inventory-items.component.scss","webpack:///./src/app/components/inventory/inventory-items/inventory-items.component.ts","webpack:///./src/app/components/inventory/inventory.component.html","webpack:///./src/app/components/inventory/inventory.component.scss","webpack:///./src/app/components/inventory/inventory.component.ts","webpack:///./src/app/components/inventory/inventory.model.ts","webpack:///./src/app/components/item-overview/gear.model.ts","webpack:///./src/app/components/item-overview/item-overview.component.html","webpack:///./src/app/components/item-overview/item-overview.component.scss","webpack:///./src/app/components/item-overview/item-overview.component.ts","webpack:///./src/app/components/modslots/modslot.component.scss","webpack:///./src/app/components/modslots/modslot.component.ts","webpack:///./src/app/components/modslots/modslots.component.html","webpack:///./src/app/components/modslots/modslots.component.scss","webpack:///./src/app/components/modslots/modslots.component.ts","webpack:///./src/app/components/modslots/modslots.model.ts","webpack:///./src/app/components/stats-display/single-stat-display.scss","webpack:///./src/app/components/stats-display/stats-display.component.scss","webpack:///./src/app/components/stats-display/stats-display.ts","webpack:///./src/app/components/talents/talent.component.html","webpack:///./src/app/components/talents/talent.component.scss","webpack:///./src/app/components/talents/talents.component.html","webpack:///./src/app/components/talents/talents.component.ts","webpack:///./src/app/components/weapon-stats/weapon-stats.component.html","webpack:///./src/app/components/weapon-stats/weapon-stats.component.scss","webpack:///./src/app/components/weapon-stats/weapon-stats.component.ts","webpack:///./src/app/directives/editor.ts","webpack:///./src/app/index.ts","webpack:///./src/app/my-division-build-app.html","webpack:///./src/app/services/attributes.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/bootstrap.service.ts","webpack:///./src/app/services/build-stats.service.ts","webpack:///./src/app/services/core.ts","webpack:///./src/app/services/editor-service.ts","webpack:///./src/app/services/inventory.service.ts","webpack:///./src/app/services/item.service.ts","webpack:///./src/app/services/login-strategies/index.ts","webpack:///./src/app/services/login-strategies/psn-strategy.ts","webpack:///./src/app/services/login-strategies/strategy.ts","webpack:///./src/app/services/modslots.service.ts","webpack:///./src/main.browser.ts","webpack:///./src/platform/browser/directives.ts","webpack:///./src/platform/browser/index.ts","webpack:///./src/platform/browser/pipes.ts","webpack:///./src/platform/browser/providers.ts","webpack:///./src/platform/environment.ts"],"names":["webpackJsonp","31","module","exports","__webpack_require__","412","__WEBPACK_AMD_DEFINE_RESULT__","global","addMapEntry","map","pair","set","addSetEntry","value","add","apply","func","thisArg","args","length","call","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFind","collection","eachFunc","retKey","key","baseFindIndex","fromRight","fromIndex","indexOfNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseReduce","baseSortBy","comparer","sort","current","undefined","baseTimes","n","baseToPairs","object","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","Object","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","other","isHostObject","toString","e","iteratorToArray","iterator","data","next","done","push","mapToArray","size","forEach","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGt","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","getAllKeysIn","baseProperty","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBaseWrapper","wrapper","fn","root","Ctor","isBind","arguments","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","charAt","trailing","join","createCompounder","callback","words","deburr","replace","reApos","thisBinding","prototype","createCurryWrapper","arity","getHolder","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","isFlattenableIteratee","createPadding","chars","charsLength","createPartialWrapper","createRange","toNumber","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","split","createToPairs","mapTag","setTag","createWrapper","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","arrayBufferTag","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getSymbolsIn","realNames","otherFunc","isKeyable","toPairs","getNative","isNative","nativeGetPrototype","getOwnPropertySymbols","objectToString","transforms","hasPath","hasFunc","isLength","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","reIsUint","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","toSource","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","pairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","find","findLast","baseEachRight","flatMap","flatMapDeep","flatMapDepth","forEachRight","orderBy","reduce","reduceRight","reject","sample","sampleSize","rand","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","clearTimeout","cancel","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","pattern","reIsNative","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","toFinite","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","transform","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","reComboMark","endsWith","target","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","times","toPath","uniqueId","prefix","id","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","Date","Error","arrayProto","stringProto","Buffer","moduleExports","Reflect","Symbol","enumerate","ceil","floor","getPrototypeOf","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","thisGlobal","497","core_1","router_deprecated_1","inventory_component_1","bootstrap_service_1","build_stats_banner_component_1","auth_component_1","App","_bootstrapService","_this","loaded","boot","subscribe","service","freeze","__decorate","Component","selector","pipes","styles","directives","BuildStatsBannerComponent","AuthComponent","encapsulation","ViewEncapsulation","None","providers","RouteConfig","component","InventoryRootComponent","__metadata","BootstrapService","523","115","InputConverter","converter","metadata","StringConverter","BooleanConverter","NumberConverter","definition","getOwnPropertyDescriptor","defineProperty","enumerable","configurable","24","AttributeInheritance","NATIVE","EXTRA","WeaponSlot","Primary","Secondary","Sidearm","AttributeKind","OFFENSIVE","DEFENSIVE","UTILITY","AttributeType","MAJOR","MINOR","MAIN","SKILL","ItemType","BodyArmor","Mask","KneePads","BackPack","Gloves","Holster","Pistol","AR","SMG","LMG","Shotgun","Sniper","GEAR_TYPES","WEAPON_TYPES","AttributeRange","Gender","MALE","FEMALE","GearRarity","HIGH_END","SUPERIOR","SPECIALIZED","GEAR_SET","GearSupport","ValueFormat","PERCENT","NUMBER","WEAPON","NONE","GearStats","Affects","normalize","CRIT_HIT_CHANCE","CRIT_HIT_DAMAGE","WEAPON_DAMAGE","ASSAULT_RIFLE_DAMAGE","SHOTGUN_DAMAGE","LMG_DAMAGE","PISTOL_DAMAGE","SNIPER_DAMAGE","ARMOR","HEALTH","SKILL_POWER","FIREARMS","STAMINA","ELECTRONICS","ACCURACY","HIP_ACCURACY","MAGAZINE_SIZE","HEADSHOT_DAMAGE","RELOAD","RPM","228","PrettyNumberPipe","toLocaleString","Pipe","353","lang_1","invalid_pipe_argument_exception_1","UcFirstPipe","str","isBlank","InvalidPipeArgumentException","58","element","numberRange","i","SPECIAL_CHARS_REGEXP","asObservable","subject","obs","Observable_1","Observable","x","idx","498","AttributeRestrictPipe","_a","selection","ids","attr","pure","540","524","354","common_1","attributes_model_1","attribute_pipe_1","attributes_service_1","common_2","auto_resize_input_component_1","editor_1","attribute_restrict_pipe_1","utils_1","item_service_1","converters_1","AttributeComponent","_attributesService","restrict","added","EventEmitter","removed","attributeName","_attributesById","maxlength","ngOnInit","meta","provider","attributesProvider","getFor","belongsTo","attributeType","_subscription","_attributes","attribute","onAttributeChange","_restrictAttributeId","attrs","attributes","_commitAttributeChange","restrictAttributeId","isWeaponType","selectedAttribute","attributeFormat","format","onAddAttribute","emit","onRemoveAttribute","onAttributeInputChanged","ngOnDestroy","unsubscribe","Input","Attribute","Output","AttributePipe","NgFor","AutoResizeInputComponent","EditorDirective","NgSwitch","NgSwitchWhen","NgSwitchDefault","AttributesService","355","WEAPON_THRESHOLD","WEAPON_BASE","toFixed","525","499","attribute_component_1","AttributesComponent","_elementRef","canAdd","major","minor","skill","event","_dispatchEvent","onAddAttributeType","nativeElement","dispatchEvent","CustomEvent","detail","Boolean","templateUrl","ElementRef","500","501","auth_service_ts_1","AuthCallbackComponent","_loginService","_routeParams","loginStrategy","strategy","authFor","AuthService","RouteParams","361","502","auth_service_1","login","res","console","log","error","526","100","editor_service_1","AutoResizeInput","stopInput","ev","preventDefault","stopPropagation","HostListener","Directive","elementRef","ngControl","ngZone","_editorService","resizeIncrement","inputType","prepend","editing","onChange","onTouched","valueAccessor","_editorSubscription","allowEditing","ngModel","nodeName","placeholderContentName","writeValue","registerOnChange","registerOnTouched","onClicked","state","inputElement_1","autoResizeInput","self_1","run","focus","select","resize","onInputChanged","substr","onInputFocused","onInputBlurred","onInputKeydown","getElementWidth","offsetWidth","setElementWidth","width","style","ViewChild","Number","FORM_DIRECTIVES","NgControl","NgZone","EditorService","541","527","503","build_stats_service_1","inventory_service_1","prettynumber_1","_buildStatsService","_inventoryService","weaponSelected","weapon","_onWeaponSelected","_selectedWeapon","_calc","caculateDps","firearms","health","stamina","skillpower","electronics","inventory","save","reset","owns","onBuildNameChanged","onToggleEditor","toggle","BuildStatsService","InventoryService","542","528","356","modslots_service_1","InventoryItemImageComponent","_modSlotService","_itemService","item","imageResolve","icon","primary","rarity","secondary","slotTypes","getTypes","mods","m","ModSlotService","ItemsService","543","529","504","inventory_item_image_component_1","InventoryItemRowComponent","createForWeapon","dps","isWeapon","544","530","505","InventoryItemComponent","_itemsService","itemType","talentIconStyle","talent","talentImageResolve","hasStat","stats","_weaponDefaultState","talents","_talents","score","damage","_gearDefaultState","gear","armor","545","531","506","inventory_item_row_component_1","item_overview_component_ts_1","InventoryItemsComponent","_router","_itemType","back","navigate","retrieve","items","onModSlotChanged","ItemOverviewComponent","Router","546","532","357","inventory_item_component_1","inventory_items_component_1","auth_callback_component_1","InventoryComponent","load","RouterOutlet","useAsDefault","358","InventoryItemType","Weapon","Gear","InventoryWeapons","InventoryGear","Inventory","weapons","507","DUMMY_GEAR","GEAR_SCORES","scores","547","533","359","ucfirst_pipe_1","stats_display_1","attributes_component_1","modslots_component_1","talents_component_1","weapon_stats_component_1","rarities","selectedItemType","_updateDescriptor","_ensureWeaponBonus","weaponTypeNames","v","k","label","getDescriptorFor","descriptor","_commitChanges","weaponTypeName","translateToName","weaponHasBonus","bonus","defaultWeaponBonusFor","onRarityChanged","isGear","isHighEnd","talentChoices","onWeaponStatsChanged","statName","onWeaponBonusChanged","onWeaponTypeChanged","onArmorValueChanged","onGearScoreChanged","level","StatsDisplay","ModSlotsComponent","TalentsComponent","WeaponStatsComponent","534","508","Rx_1","ModSlotComponent","_el","weaponModItems","inheritPrimaryAttributeId","_slotTypesById","_primaryAttributes","BehaviorSubject","_secondaryAttributes","_primaryObservable","_secondaryObservable","onSlotTypeChanged","slot","_selectedSlotType","slotName","slotRarity","weaponModItemsFor","itemId","onWeaponSlotItemChanged","refreshAttributeProviders","imageFor","weaponModItem","weaponModItemName","inheritAttribute","getAttributesProvider","kind","getAttributeSetFor","attributeSet","548","535","509","modslot_component_1","_ngZone","_hasNative","hasNative","canAddSlots","slots","onAddSlot","_canHaveExtra","canHaveExtra","onAddWeaponModSlot","onAddGearModSlot","modSlotTypes","tree","modSlotType","branch","_addSlot","weaponModItemChoices","choices","defaultModSlotType","canAddSlot","_defaultModSlotAttributeSet","onRemoveSlot","510","ModSlotType","_id","_rarity","_slotKind","slotKind","ModSlotKind","PERFORMANCE","MUZZLE","UNDERBARREL","OPTICS","MAGAZINE","resolveMainAttribute","GEAR_MOD_SLOT_TYPES","WEAPON_MOD_SLOT_TYPES","536","537","511","SingleStatDisplay","change","onStatValueChanged","NgClass","stat","onStateValueChanged","549","538","550","512","TEMPLATE_INPUT_PERCENT_MARKER","TEMPLATE_INPUT_NUMBER_MARKER","TEMPLATE_INPUT_MARKER_REXP","INPUT_FORMAT_MARKER","TALENT_INPUT_FORMAT","o","TALENT_INPUT_TEMPLATE","TalentComponent","_loader","toComponent","TalentTemplateComponent","onTalentValueChanged","ngAfterViewInit","renderDescription","_previousTalentId","_componentRef","destroy","text","part","loadNextToLocation","_descriptionContainerRef","then","ref","onTalentChanged","onTalentUnlockedChanged","unlocked","read","ViewContainerRef","DynamicComponentLoader","551","539","513","_editing","rpm","magazineSize","84","_renderer","isEditorComponent","_onEditorStateChanged","inEditMode","showElement","setElementClass","Renderer","514","__export","p","APP_DIRECTIVES","APP_PROVIDERS","DIVISION_PROVIDERS","552","150","http_1","_http","_gearAttributes","_weaponAttributes","defaultFilterProvider","gearType","supports","skillFilterProvider","init","_loadGearAttributes","_loadWeaponAttributes","basePath","json","err","_weaponAttributesFor","_gearAttributesFor","weaponAttributes","providerName","filterProvider","Injectable","Http","116","index_1","strategy_1","AuthStrategies","AuthType","PSN","_strategies","authType","AUTH_PROVIDERS","LOGIN_STRATEGY_PROVIDERS","provide","useFactory","psn","strategies","deps","PSNIdentityStrategy","360","Subject_1","Subject","toLoad","empty","updateWeapon","117","gearDescriptors","_gearDescriptors","weaponDescriptors","_weaponDescriptors","InventoryCalculator","__param","Inject","forwardRef","_inventory","_primaryWeapon","_secondaryWeapon","_primary","WeaponStatsCalculator","_secondary","fromElectronics","fromMods","calculateAffectsValueFromMods","fromAttributes","calculateAffectsValueFromAttributes","base","_reduce","fireArmsFromMods","staminaFor","fromGear","weaponDamage","affects","calculateTotalAffectsValue","talentAffects","calculateAffectsValueFromTalents","modsAffects","attributesAffects","descriptorForType","forType","talentsThatAffects","_attributesThatAffects","limitToGear","attributesThatAffects","total","mod","all","calc","_weapon","_inventoryCalc","reloadSpeed","damagePerBullet","accuracy","critChanceFromGear","critChanceFromWeaponMods","critChanceFromWeaponTalents","calculateAffectsFromWeaponTalents","inheritedWeaponCritChance","calculateAffectsFromWeaponBonus","critChance","critDamageFromGear","critDamageFromWeaponMods","critDamageFromWeaponTalents","critDamage","headShotBonus","oneIsNoneExtraBullets","adjustedMagSize","totalDamage","totalHeadShotDamage","totalCritDamage","critHeadShotDamage","cycleTime","finalDPS","_weaponBaseStats","reloadEmpty","magazine","weaponInfo","weaponDescriptor","_flatDamageBonus","_scalingFactor","damagePercentage","_weaponDamagePercent","_otherWeaponDamageMultipliers","_accuracy","_sniperAccuracy","aimSpreadMin","aimSpreadMax","spreadMax","spreadSizeModBonus","spreadMaxModBonus","timeToMinAccuracy","timeToMaxAccuracy","family","weaponStatsFor","scaling","515","118","_current","generatorOrNext","complete","on","off","70","inventory_model_1","util_1","rxjs_1","STORAGE_KEY","itemsService","_weaponSelected","_api","storage","localStorage","getItem","_inventories","JSON","parse","_stats","_isWeaponSlot","_inventoryItemSlot","retrieveWeapon","dashCaseToCamelCase","getValue","stringify","url","headers","Headers","Content-Type","RequestOptions","request","put","post","resp","uri","setItem","gender","_defaultInventoryState","33","gear_model_1","WEAPON_TYPES_TO_LABEL","ItemStore","_items","defaultDescriptorProcessor","DescriptorCollection","GearDescriptorCollection","_super","__extends","WeaponDescriptorCollection","familyStats","weaponStats","_bodyArmor","_mask","_backPack","_gloves","_kneePads","_holster","_weaponDescriptorCollection","_gearDescriptorCollection","_assaultRifle","_smg","_lmg","_shotgun","_sniper","_weaponTalents","_basePath","_imagePath","_loadItems","_loadWeaponTalents","_loadWeapons","gearAttributes","_collectDescriptors","types","shift","weaponType","manifest","superior","named","supportedTalents","compatibility","process","subjectName","_imageUrl","_gearImageResolve","icons","isGearSet","gearSetName","divisionItem","_weaponImageResolve","info","229","IdentityStrategy","_callBackMethodName","params","_authCallback","loc","location","protocol","host","_completeLogin","opener","close","_info","_saveKey","_save","516","SEN_BASE_URL","SERVICE_ENTITY","STATE","REDIRECT_URL","CLIENT_ID","PSN_SCOPE","CLIENT_SECRET","DUID","OAUTH_URL","PSNIdentityStrategyImpl","_processedCallback","_pending","config","code","authCode","access_token","_resolveAuthToken","oauth","_window","closed","grant_type","client_id","client_secret","redirect_uri","scope","duid","timestamp","getTime","_pendingResults","_url","open","517","psn_strategy_1","useClass","151","modslots_model_1","ModSlotAttributeSet","_attributeService","_weaponModItems","_loadWeaponMods","slotType","identifier","belongsToWeapon","getWeaponAttributeSetFor","getGearAttributeSetFor","found","isPerformance","getTypesForWeapon","weaponFamily","0","main","initialHmrState","platform_browser_dynamic_1","bootstrap","app_1","browser_1","PROVIDERS","environment_1","ENV_PROVIDERS","DIRECTIVES","PIPES","catch","document","addEventListener","518","APPLICATION_DIRECTIVES","ROUTER_DIRECTIVES","PLATFORM_DIRECTIVES","multi","useValue","519","520","APPLICATION_PIPES","PLATFORM_PIPES","521","APPLICATION_PROVIDERS","FORM_PROVIDERS","HTTP_PROVIDERS","ROUTER_PROVIDERS","LocationStrategy","HashLocationStrategy","522","enableProdMode"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAASC,EAAQC,EAASC,GCHhCF,EAAAC,QAAAC,EAAA,MDSMC,IACA,SAASH,EAAQC,EAASC,GAE/B,GAAIE,IEZL,SAAAJ,EAAAK,IAQC,WAqYD,QAAAC,aAAAC,EAAAC,GAGA,MADAD,GAAAE,IAAAD,EAAA,GAAAA,EAAA,IACAD,EAWA,QAAAG,aAAAD,EAAAE,GAEA,MADAF,GAAAG,IAAAD,GACAF,EAaA,QAAAI,OAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAC,MACA,QAAAA,GACA,aAAAH,GAAAI,KAAAH,EACA,cAAAD,GAAAI,KAAAH,EAAAC,EAAA,GACA,cAAAF,GAAAI,KAAAH,EAAAC,EAAA,GAAAA,EAAA,GACA,cAAAF,GAAAI,KAAAH,EAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAAF,GAAAD,MAAAE,EAAAC,GAaA,QAAAG,iBAAAC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GAAAC,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAH,GAAAE,EAAAZ,EAAAW,EAAAX,GAAAS,GAEA,MAAAG,GAYA,QAAAE,WAAAL,EAAAE,GAIA,IAHA,GAAAE,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GACAK,EAAAF,EAAAI,KAAAJ,MAAA,IAIA,MAAAA,GAYA,QAAAM,gBAAAN,EAAAE,GAGA,IAFA,GAAAL,GAAAG,EAAAH,OAEAA,KACAK,EAAAF,EAAAH,KAAAG,MAAA,IAIA,MAAAA,GAaA,QAAAO,YAAAP,EAAAQ,GAIA,IAHA,GAAAJ,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GACA,IAAAW,EAAAR,EAAAI,KAAAJ,GACA,QAGA,UAYA,QAAAS,aAAAT,EAAAQ,GAMA,IALA,GAAAJ,GAAA,GACAP,EAAAG,EAAAH,OACAa,EAAA,EACAC,OAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAI,GAAAjB,EAAAa,EAAAJ,KACAW,EAAAD,KAAAnB,GAGA,MAAAoB,GAYA,QAAAC,eAAAZ,EAAAT,GACA,QAAAS,EAAAH,QAAAgB,YAAAb,EAAAT,EAAA,MAYA,QAAAuB,mBAAAd,EAAAT,EAAAwB,GAIA,IAHA,GAAAX,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GACA,GAAAkB,EAAAxB,EAAAS,EAAAI,IACA,QAGA,UAYA,QAAAY,UAAAhB,EAAAE,GAKA,IAJA,GAAAE,GAAA,GACAP,EAAAG,EAAAH,OACAc,EAAAM,MAAApB,KAEAO,EAAAP,GACAc,EAAAP,GAAAF,EAAAF,EAAAI,KAAAJ,EAEA,OAAAW,GAWA,QAAAO,WAAAlB,EAAAmB,GAKA,IAJA,GAAAf,GAAA,GACAP,EAAAsB,EAAAtB,OACAuB,EAAApB,EAAAH,SAEAO,EAAAP,GACAG,EAAAoB,EAAAhB,GAAAe,EAAAf,EAEA,OAAAJ,GAeA,QAAAqB,aAAArB,EAAAE,EAAAC,EAAAmB,GACA,GAAAlB,GAAA,GACAP,EAAAG,EAAAH,MAKA,KAHAyB,GAAAzB,IACAM,EAAAH,IAAAI,MAEAA,EAAAP,GACAM,EAAAD,EAAAC,EAAAH,EAAAI,KAAAJ,EAEA,OAAAG,GAeA,QAAAoB,kBAAAvB,EAAAE,EAAAC,EAAAmB,GACA,GAAAzB,GAAAG,EAAAH,MAIA,KAHAyB,GAAAzB,IACAM,EAAAH,IAAAH,IAEAA,KACAM,EAAAD,EAAAC,EAAAH,EAAAH,KAAAG,EAEA,OAAAG,GAaA,QAAAqB,WAAAxB,EAAAQ,GAIA,IAHA,GAAAJ,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GACA,GAAAW,EAAAR,EAAAI,KAAAJ,GACA,QAGA,UAgBA,QAAAyB,UAAAC,EAAAlB,EAAAmB,EAAAC,GACA,GAAAjB,EAOA,OANAgB,GAAAD,EAAA,SAAAnC,EAAAsC,EAAAH,GACA,MAAAlB,GAAAjB,EAAAsC,EAAAH,IACAf,EAAAiB,EAAAC,EAAAtC,GACA,GAFA,SAKAoB,EAaA,QAAAmB,eAAA9B,EAAAQ,EAAAuB,GAIA,IAHA,GAAAlC,GAAAG,EAAAH,OACAO,EAAA2B,EAAAlC,EAAA,GAEAkC,EAAA3B,QAAAP,GACA,GAAAW,EAAAR,EAAAI,KAAAJ,GACA,MAAAI,EAGA,UAYA,QAAAS,aAAAb,EAAAT,EAAAyC,GACA,GAAAzC,MACA,MAAA0C,YAAAjC,EAAAgC,EAKA,KAHA,GAAA5B,GAAA4B,EAAA,EACAnC,EAAAG,EAAAH,SAEAO,EAAAP,GACA,GAAAG,EAAAI,KAAAb,EACA,MAAAa,EAGA,UAaA,QAAA8B,iBAAAlC,EAAAT,EAAAyC,EAAAjB,GAIA,IAHA,GAAAX,GAAA4B,EAAA,EACAnC,EAAAG,EAAAH,SAEAO,EAAAP,GACA,GAAAkB,EAAAf,EAAAI,GAAAb,GACA,MAAAa,EAGA,UAYA,QAAA+B,UAAAnC,EAAAE,GACA,GAAAL,GAAAG,IAAAH,OAAA,CACA,OAAAA,GAAAuC,QAAApC,EAAAE,GAAAL,EAAAwC,EAgBA,QAAAC,YAAAZ,EAAAxB,EAAAC,EAAAmB,EAAAK,GAMA,MALAA,GAAAD,EAAA,SAAAnC,EAAAa,EAAAsB,GACAvB,EAAAmB,GACAA,GAAA,EAAA/B,GACAW,EAAAC,EAAAZ,EAAAa,EAAAsB,KAEAvB,EAaA,QAAAoC,YAAAvC,EAAAwC,GACA,GAAA3C,GAAAG,EAAAH,MAGA,KADAG,EAAAyC,KAAAD,GACA3C,KACAG,EAAAH,GAAAG,EAAAH,GAAAN,KAEA,OAAAS,GAYA,QAAAoC,SAAApC,EAAAE,GAKA,IAJA,GAAAS,GACAP,EAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GAAA,CACA,GAAA6C,GAAAxC,EAAAF,EAAAI,GACAsC,KAAAC,IACAhC,MAAAgC,EAAAD,EAAA/B,EAAA+B,GAGA,MAAA/B,GAYA,QAAAiC,WAAAC,EAAA3C,GAIA,IAHA,GAAAE,GAAA,GACAO,EAAAM,MAAA4B,KAEAzC,EAAAyC,GACAlC,EAAAP,GAAAF,EAAAE,EAEA,OAAAO,GAYA,QAAAmC,aAAAC,EAAAC,GACA,MAAAhC,UAAAgC,EAAA,SAAAnB,GACA,OAAAA,EAAAkB,EAAAlB,MAWA,QAAAoB,WAAAvD,GACA,gBAAAH,GACA,MAAAG,GAAAH,IAcA,QAAA2D,YAAAH,EAAAC,GACA,MAAAhC,UAAAgC,EAAA,SAAAnB,GACA,MAAAkB,GAAAlB,KAYA,QAAAsB,UAAAC,EAAAvB,GACA,MAAAuB,GAAAC,IAAAxB,GAYA,QAAAyB,iBAAAC,EAAAC,GAIA,IAHA,GAAApD,GAAA,GACAP,EAAA0D,EAAA1D,SAEAO,EAAAP,GAAAgB,YAAA2C,EAAAD,EAAAnD,GAAA,QACA,MAAAA,GAYA,QAAAqD,eAAAF,EAAAC,GAGA,IAFA,GAAApD,GAAAmD,EAAA1D,OAEAO,KAAAS,YAAA2C,EAAAD,EAAAnD,GAAA,QACA,MAAAA,GAUA,QAAAsD,aAAAnE,GACA,MAAAA,MAAAoE,gBAAApE,EAAA,KAWA,QAAAqE,cAAA5D,EAAA6D,GAIA,IAHA,GAAAhE,GAAAG,EAAAH,OACAc,EAAA,EAEAd,KACAG,EAAAH,KAAAgE,GACAlD,GAGA,OAAAA,GAUA,QAAAmD,cAAAC,GACA,MAAAC,IAAAD,GAUA,QAAAE,gBAAAC,GACA,MAAAC,IAAAD,GAUA,QAAAE,kBAAAF,GACA,WAAAG,GAAAH,GAYA,QAAAjC,YAAAjC,EAAAgC,EAAAD,GAIA,IAHA,GAAAlC,GAAAG,EAAAH,OACAO,EAAA4B,GAAAD,EAAA,MAEAA,EAAA3B,QAAAP,GAAA,CACA,GAAAyE,GAAAtE,EAAAI,EACA,IAAAkE,MACA,MAAAlE,GAGA,SAUA,QAAAmE,cAAAhF,GAGA,GAAAoB,IAAA,CACA,UAAApB,GAAA,kBAAAA,GAAAiF,SACA,IACA7D,KAAApB,EAAA,IACO,MAAAkF,IAEP,MAAA9D,GAUA,QAAA+D,iBAAAC,GAIA,IAHA,GAAAC,GACAjE,OAEAiE,EAAAD,EAAAE,QAAAC,MACAnE,EAAAoE,KAAAH,EAAArF,MAEA,OAAAoB,GAUA,QAAAqE,YAAA7F,GACA,GAAAiB,GAAA,GACAO,EAAAM,MAAA9B,EAAA8F,KAKA,OAHA9F,GAAA+F,QAAA,SAAA3F,EAAAsC,GACAlB,IAAAP,IAAAyB,EAAAtC,KAEAoB,EAYA,QAAAwE,gBAAAnF,EAAA6D,GAMA,IALA,GAAAzD,GAAA,GACAP,EAAAG,EAAAH,OACAa,EAAA,EACAC,OAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAb,KAAAsE,GAAAtE,IAAA6F,IACApF,EAAAI,GAAAgF,EACAzE,EAAAD,KAAAN,GAGA,MAAAO,GAUA,QAAA0E,YAAAhG,GACA,GAAAe,GAAA,GACAO,EAAAM,MAAA5B,EAAA4F,KAKA,OAHA5F,GAAA6F,QAAA,SAAA3F,GACAoB,IAAAP,GAAAb,IAEAoB,EAUA,QAAA2E,YAAAjG,GACA,GAAAe,GAAA,GACAO,EAAAM,MAAA5B,EAAA4F,KAKA,OAHA5F,GAAA6F,QAAA,SAAA3F,GACAoB,IAAAP,IAAAb,OAEAoB,EAUA,QAAA4E,YAAAC,GACA,IAAAA,IAAAC,GAAAC,KAAAF,GACA,MAAAA,GAAA3F,MAGA,KADA,GAAAc,GAAAgF,GAAAC,UAAA,EACAD,GAAAD,KAAAF,IACA7E,GAEA,OAAAA,GAUA,QAAAkF,eAAAL,GACA,MAAAA,GAAAM,MAAAH,IAUA,QAAAI,kBAAA7B,GACA,MAAA8B,IAAA9B,GAyCA,QAAA+B,cAAAC,GA0NA,QAAAC,QAAA5G,GACA,GAAA6G,aAAA7G,KAAA8G,GAAA9G,kBAAA+G,cAAA,CACA,GAAA/G,YAAAgH,eACA,MAAAhH,EAEA,IAAAiH,GAAA1G,KAAAP,EAAA,eACA,MAAAkH,cAAAlH,GAGA,UAAAgH,eAAAhH,GAQA,QAAAmH,eAWA,QAAAH,eAAAhH,EAAAoH,GACAC,KAAAC,YAAAtH,EACAqH,KAAAE,eACAF,KAAAG,YAAAJ,EACAC,KAAAI,UAAA,EACAJ,KAAAK,WAAAtE,EAgFA,QAAA2D,aAAA/G,GACAqH,KAAAC,YAAAtH,EACAqH,KAAAE,eACAF,KAAAM,QAAA,EACAN,KAAAO,cAAA,EACAP,KAAAQ,iBACAR,KAAAS,cAAAC,EACAV,KAAAW,aAWA,QAAAC,aACA,GAAA7G,GAAA,GAAA2F,aAAAM,KAAAC,YAOA,OANAlG,GAAAmG,YAAAW,UAAAb,KAAAE,aACAnG,EAAAuG,QAAAN,KAAAM,QACAvG,EAAAwG,aAAAP,KAAAO,aACAxG,EAAAyG,cAAAK,UAAAb,KAAAQ,eACAzG,EAAA0G,cAAAT,KAAAS,cACA1G,EAAA4G,UAAAE,UAAAb,KAAAW,WACA5G,EAWA,QAAA+G,eACA,GAAAd,KAAAO,aAAA,CACA,GAAAxG,GAAA,GAAA2F,aAAAM,KACAjG,GAAAuG,QAAA,GACAvG,EAAAwG,cAAA,MAEAxG,GAAAiG,KAAAe,QACAhH,EAAAuG,SAAA,EAEA,OAAAvG,GAWA,QAAAiH,aACA,GAAA5H,GAAA4G,KAAAC,YAAAtH,QACAsI,EAAAjB,KAAAM,QACAY,EAAAzB,GAAArG,GACA+H,EAAA,EAAAF,EACAG,EAAAF,EAAA9H,EAAAH,OAAA,EACAoI,EAAAC,QAAA,EAAAF,EAAApB,KAAAW,WACAY,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,IACAvI,EAAAuI,EAAAD,EACA/H,EAAA2H,EAAAK,EAAAD,EAAA,EACAE,EAAAzB,KAAAQ,cACAkB,EAAAD,EAAAxI,OACAa,EAAA,EACA6H,EAAAC,GAAA3I,EAAA+G,KAAAS,cAEA,KAAAS,GAAAW,EAAAT,GACAA,GAAAnI,GAAA0I,GAAA1I,EACA,MAAA6I,kBAAA1I,EAAA4G,KAAAE,YAEA,IAAAnG,KAEAgI,GACA,KAAA9I,KAAA0I,EAAA7H,GAAA,CACAN,GAAAyH,CAKA,KAHA,GAAAe,GAAA,GACArJ,EAAAS,EAAAI,KAEAwI,EAAAN,GAAA,CACA,GAAA1D,GAAAyD,EAAAO,GACA1I,EAAA0E,EAAA1E,SACA2I,EAAAjE,EAAAiE,KACAC,EAAA5I,EAAAX,EAEA,IAAAsJ,GAAAE,EACAxJ,EAAAuJ,MACW,KAAAA,EAAA,CACX,GAAAD,GAAAG,EACA,QAAAL,EAEA,MAAAA,IAIAhI,EAAAD,KAAAnB,EAEA,MAAAoB,GAgBA,QAAAsI,MAAAC,GACA,GAAA9I,GAAA,GACAP,EAAAqJ,IAAArJ,OAAA,CAGA,KADA+G,KAAAuC,UACA/I,EAAAP,GAAA,CACA,GAAAuJ,GAAAF,EAAA9I,EACAwG,MAAAvH,IAAA+J,EAAA,GAAAA,EAAA,KAWA,QAAAC,aACAzC,KAAA0C,SAAAC,MAAA,SAaA,QAAAC,YAAA3H,GACA,MAAA+E,MAAAvD,IAAAxB,UAAA+E,MAAA0C,SAAAzH,GAYA,QAAA4H,SAAA5H,GACA,GAAA+C,GAAAgC,KAAA0C,QACA,IAAAC,GAAA,CACA,GAAA5I,GAAAiE,EAAA/C,EACA,OAAAlB,KAAA+I,EAAA/G,EAAAhC,EAEA,MAAA6F,IAAA1G,KAAA8E,EAAA/C,GAAA+C,EAAA/C,GAAAc,EAYA,QAAAgH,SAAA9H,GACA,GAAA+C,GAAAgC,KAAA0C,QACA,OAAAC,IAAA3E,EAAA/C,KAAAc,EAAA6D,GAAA1G,KAAA8E,EAAA/C,GAaA,QAAA+H,SAAA/H,EAAAtC,GACA,GAAAqF,GAAAgC,KAAA0C,QAEA,OADA1E,GAAA/C,GAAA0H,IAAAhK,IAAAoD,EAAA+G,EAAAnK,EACAqH,KAmBA,QAAAiD,WAAAX,GACA,GAAA9I,GAAA,GACAP,EAAAqJ,IAAArJ,OAAA,CAGA,KADA+G,KAAAuC,UACA/I,EAAAP,GAAA,CACA,GAAAuJ,GAAAF,EAAA9I,EACAwG,MAAAvH,IAAA+J,EAAA,GAAAA,EAAA,KAWA,QAAAU,kBACAlD,KAAA0C,YAYA,QAAAS,iBAAAlI,GACA,GAAA+C,GAAAgC,KAAA0C,SACAlJ,EAAA4J,aAAApF,EAAA/C,EAEA,MAAAzB,EACA,QAEA,IAAAwF,GAAAhB,EAAA/E,OAAA,CAMA,OALAO,IAAAwF,EACAhB,EAAAqF,MAEAC,GAAApK,KAAA8E,EAAAxE,EAAA,IAEA,EAYA,QAAA+J,cAAAtI,GACA,GAAA+C,GAAAgC,KAAA0C,SACAlJ,EAAA4J,aAAApF,EAAA/C,EAEA,UAAAzB,EAAAuC,EAAAiC,EAAAxE,GAAA,GAYA,QAAAgK,cAAAvI,GACA,MAAAmI,cAAApD,KAAA0C,SAAAzH,GAAA,GAaA,QAAAwI,cAAAxI,EAAAtC,GACA,GAAAqF,GAAAgC,KAAA0C,SACAlJ,EAAA4J,aAAApF,EAAA/C,EAOA,OALA,GAAAzB,EACAwE,EAAAG,MAAAlD,EAAAtC,IAEAqF,EAAAxE,GAAA,GAAAb,EAEAqH,KAmBA,QAAA0D,UAAApB,GACA,GAAA9I,GAAA,GACAP,EAAAqJ,IAAArJ,OAAA,CAGA,KADA+G,KAAAuC,UACA/I,EAAAP,GAAA,CACA,GAAAuJ,GAAAF,EAAA9I,EACAwG,MAAAvH,IAAA+J,EAAA,GAAAA,EAAA,KAWA,QAAAmB,iBACA3D,KAAA0C,UACAkB,KAAA,GAAAvB,MACA9J,IAAA,IAAAsL,IAAAZ,WACArE,OAAA,GAAAyD,OAaA,QAAAyB,gBAAA7I,GACA,MAAA8I,YAAA/D,KAAA/E,GAAA,OAAAA,GAYA,QAAA+I,aAAA/I,GACA,MAAA8I,YAAA/D,KAAA/E,GAAAgJ,IAAAhJ,GAYA,QAAAiJ,aAAAjJ,GACA,MAAA8I,YAAA/D,KAAA/E,GAAAwB,IAAAxB,GAaA,QAAAkJ,aAAAlJ,EAAAtC,GAEA,MADAoL,YAAA/D,KAAA/E,GAAAxC,IAAAwC,EAAAtC,GACAqH,KAoBA,QAAAoE,UAAA7J,GACA,GAAAf,GAAA,GACAP,EAAAsB,IAAAtB,OAAA,CAGA,KADA+G,KAAA0C,SAAA,GAAAgB,YACAlK,EAAAP,GACA+G,KAAApH,IAAA2B,EAAAf,IAcA,QAAA6K,aAAA1L,GAEA,MADAqH,MAAA0C,SAAAjK,IAAAE,EAAAmK,GACA9C,KAYA,QAAAsE,aAAA3L,GACA,MAAAqH,MAAA0C,SAAAjG,IAAA9D,GAgBA,QAAA4L,OAAAjC,GACAtC,KAAA0C,SAAA,GAAAO,WAAAX,GAUA,QAAAkC,cACAxE,KAAA0C,SAAA,GAAAO,WAYA,QAAAwB,aAAAxJ,GACA,MAAA+E,MAAA0C,SAAA,OAAAzH,GAYA,QAAAyJ,UAAAzJ,GACA,MAAA+E,MAAA0C,SAAAuB,IAAAhJ,GAYA,QAAA0J,UAAA1J,GACA,MAAA+E,MAAA0C,SAAAjG,IAAAxB,GAaA,QAAA2J,UAAA3J,EAAAtC,GACA,GAAA6D,GAAAwD,KAAA0C,QAKA,OAJAlG,aAAAyG,YAAAzG,EAAAkG,SAAAzJ,QAAA4I,IACArF,EAAAwD,KAAA0C,SAAA,GAAAgB,UAAAlH,EAAAkG,WAEAlG,EAAA/D,IAAAwC,EAAAtC,GACAqH,KAsBA,QAAA6E,kBAAAC,EAAAC,EAAA9J,EAAAkB,GACA,MAAA2I,KAAA/I,GACAiJ,GAAAF,EAAAG,GAAAhK,MAAA2E,GAAA1G,KAAAiD,EAAAlB,GACA8J,EAEAD,EAYA,QAAAI,kBAAA/I,EAAAlB,EAAAtC,IACAA,IAAAoD,GAAAiJ,GAAA7I,EAAAlB,GAAAtC,MACA,gBAAAsC,IAAAtC,IAAAoD,GAAAd,IAAAkB,MACAA,EAAAlB,GAAAtC,GAcA,QAAAwM,aAAAhJ,EAAAlB,EAAAtC,GACA,GAAAmM,GAAA3I,EAAAlB,EACA2E,IAAA1G,KAAAiD,EAAAlB,IAAA+J,GAAAF,EAAAnM,KACAA,IAAAoD,GAAAd,IAAAkB,MACAA,EAAAlB,GAAAtC,GAYA,QAAAyK,cAAAhK,EAAA6B,GAEA,IADA,GAAAhC,GAAAG,EAAAH,OACAA,KACA,GAAA+L,GAAA5L,EAAAH,GAAA,GAAAgC,GACA,MAAAhC,EAGA,UAcA,QAAAmM,gBAAAtK,EAAAzB,EAAAC,EAAAC,GAIA,MAHA8L,IAAAvK,EAAA,SAAAnC,EAAAsC,EAAAH,GACAzB,EAAAE,EAAAZ,EAAAW,EAAAX,GAAAmC,KAEAvB,EAYA,QAAA+L,YAAAnJ,EAAAoJ,GACA,MAAApJ,IAAAqJ,WAAAD,EAAAE,KAAAF,GAAApJ,GAWA,QAAAuJ,QAAAvJ,EAAAwJ,GAMA,IALA,GAAAnM,GAAA,GACAoM,EAAA,MAAAzJ,EACAlD,EAAA0M,EAAA1M,OACAc,EAAAM,MAAApB,KAEAO,EAAAP,GACAc,EAAAP,GAAAoM,EAAA7J,EAAAkI,IAAA9H,EAAAwJ,EAAAnM,GAEA,OAAAO,GAYA,QAAA8L,WAAAC,EAAAC,EAAAC,GASA,MARAF,SACAE,IAAAjK,IACA+J,EAAAE,GAAAF,IAAAE,GAEAD,IAAAhK,IACA+J,KAAAC,EAAAD,EAAAC,IAGAD,EAiBA,QAAAG,WAAAtN,EAAAuN,EAAAC,EAAAC,EAAAnL,EAAAkB,EAAAkK,GACA,GAAAtM,EAIA,IAHAqM,IACArM,EAAAoC,EAAAiK,EAAAzN,EAAAsC,EAAAkB,EAAAkK,GAAAD,EAAAzN,IAEAoB,IAAAgC,EACA,MAAAhC,EAEA,KAAAuM,SAAA3N,GACA,MAAAA,EAEA,IAAAuI,GAAAzB,GAAA9G,EACA,IAAAuI,GAEA,GADAnH,EAAAwM,eAAA5N,IACAuN,EACA,MAAArF,WAAAlI,EAAAoB,OAEO,CACP,GAAAyM,GAAAC,OAAA9N,GACA+N,EAAAF,GAAAG,GAAAH,GAAAI,CAEA,IAAAC,GAAAlO,GACA,MAAAmO,aAAAnO,EAAAuN,EAEA,IAAAM,GAAAO,GAAAP,GAAAQ,GAAAN,IAAAvK,EAAA,CACA,GAAAwB,aAAAhF,GACA,MAAAwD,GAAAxD,IAGA,IADAoB,EAAAkN,gBAAAP,KAA8C/N,IAC9CuN,EACA,MAAAgB,aAAAvO,EAAA2M,WAAAvL,EAAApB,QAES,CACT,IAAAwO,GAAAX,GACA,MAAArK,GAAAxD,IAEAoB,GAAAqN,eAAAzO,EAAA6N,EAAAP,UAAAC,IAIAG,MAAA,GAAA9B,OACA,IAAA8C,GAAAhB,EAAApC,IAAAtL,EACA,IAAA0O,EACA,MAAAA,EAIA,IAFAhB,EAAA5N,IAAAE,EAAAoB,IAEAmH,EACA,GAAA9E,GAAA+J,EAAAmB,WAAA3O,GAAA8M,KAAA9M,EAUA,OAPAc,WAAA2C,GAAAzD,EAAA,SAAA4O,EAAAtM,GACAmB,IACAnB,EAAAsM,EACAA,EAAA5O,EAAAsC,IAEAkK,YAAApL,EAAAkB,EAAAgL,UAAAsB,EAAArB,EAAAC,EAAAC,EAAAnL,EAAAtC,EAAA0N,MAEAtM,EAUA,QAAAyN,cAAAjC,GACA,GAAAnJ,GAAAqJ,KAAAF,GACAtM,EAAAmD,EAAAnD,MAEA,iBAAAkD,GACA,SAAAA,EACA,OAAAlD,CAGA,KADA,GAAAO,GAAAP,EACAO,KAAA,CACA,GAAAyB,GAAAmB,EAAA5C,GACAI,EAAA2L,EAAAtK,GACAtC,EAAAwD,EAAAlB,EAEA,IAAAtC,IAAAoD,KACAd,IAAA8B,QAAAZ,MAAAvC,EAAAjB,GACA,SAGA,UAYA,QAAA8O,YAAAC,GACA,MAAApB,UAAAoB,GAAAC,GAAAD,MAaA,QAAAE,WAAA9O,EAAA+O,EAAA7O,GACA,qBAAAF,GACA,SAAAgP,IAAAC,EAEA,OAAAC,IAAA,WAAoClP,EAAAD,MAAAkD,EAAA/C,IAA+B6O,GAcnE,QAAAI,gBAAA7O,EAAAmB,EAAAjB,EAAAa,GACA,GAAAX,GAAA,GACA0O,EAAAlO,cACAmO,GAAA,EACAlP,EAAAG,EAAAH,OACAc,KACAqO,EAAA7N,EAAAtB,MAEA,KAAAA,EACA,MAAAc,EAEAT,KACAiB,EAAAH,SAAAG,EAAA8B,UAAA/C,KAEAa,GACA+N,EAAAhO,kBACAiO,GAAA,GAEA5N,EAAAtB,QAAA4I,IACAqG,EAAA3L,SACA4L,GAAA,EACA5N,EAAA,GAAA6J,UAAA7J,GAEAwH,GACA,OAAAvI,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,GACA0I,EAAA5I,IAAAX,IAGA,IADAA,EAAAwB,GAAA,IAAAxB,IAAA,EACAwP,GAAAjG,MAAA,CAEA,IADA,GAAAmG,GAAAD,EACAC,KACA,GAAA9N,EAAA8N,KAAAnG,EACA,QAAAH,EAGAhI,GAAAoE,KAAAxF,OAEAuP,GAAA3N,EAAA2H,EAAA/H,IACAJ,EAAAoE,KAAAxF,GAGA,MAAAoB,GAgCA,QAAAuO,WAAAxN,EAAAlB,GACA,GAAAG,IAAA,CAKA,OAJAsL,IAAAvK,EAAA,SAAAnC,EAAAa,EAAAsB,GAEA,MADAf,KAAAH,EAAAjB,EAAAa,EAAAsB,KAGAf,EAaA,QAAAwO,cAAAnP,EAAAE,EAAAa,GAIA,IAHA,GAAAX,GAAA,GACAP,EAAAG,EAAAH,SAEAO,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,GACAsC,EAAAxC,EAAAX,EAEA,UAAAmD,IAAAoG,IAAAnG,EACAD,QAAA0M,SAAA1M,GACA3B,EAAA2B,EAAAoG,IAEA,GAAAA,GAAApG,EACA/B,EAAApB,EAGA,MAAAoB,GAaA,QAAA0O,UAAArP,EAAAT,EAAA4I,EAAAC,GACA,GAAAvI,GAAAG,EAAAH,MAWA,KATAsI,EAAAmH,UAAAnH,GACA,EAAAA,IACAA,KAAAtI,EAAA,EAAAA,EAAAsI,GAEAC,MAAAzF,GAAAyF,EAAAvI,IAAAyP,UAAAlH,GACA,EAAAA,IACAA,GAAAvI,GAEAuI,EAAAD,EAAAC,EAAA,EAAAmH,SAAAnH,GACAA,EAAAD,GACAnI,EAAAmI,KAAA5I,CAEA,OAAAS,GAWA,QAAAwP,YAAA9N,EAAAlB,GACA,GAAAG,KAMA,OALAsL,IAAAvK,EAAA,SAAAnC,EAAAa,EAAAsB,GACAlB,EAAAjB,EAAAa,EAAAsB,IACAf,EAAAoE,KAAAxF,KAGAoB,EAcA,QAAA8O,aAAAzP,EAAA0P,EAAAlP,EAAAmP,EAAAhP,GACA,GAAAP,GAAA,GACAP,EAAAG,EAAAH,MAKA,KAHAW,MAAAoP,eACAjP,YAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAsP,GAAA,GAAAlP,EAAAjB,GACAmQ,EAAA,EAEAD,YAAAlQ,EAAAmQ,EAAA,EAAAlP,EAAAmP,EAAAhP,GAEAO,UAAAP,EAAApB,GAESoQ,IACThP,IAAAd,QAAAN,GAGA,MAAAoB,GAoCA,QAAAkP,YAAA9M,EAAA7C,GACA,MAAA6C,IAAA+M,GAAA/M,EAAA7C,EAAAmM,MAWA,QAAA0D,iBAAAhN,EAAA7C,GACA,MAAA6C,IAAAiN,GAAAjN,EAAA7C,EAAAmM,MAYA,QAAA4D,eAAAlN,EAAAC,GACA,MAAAvC,aAAAuC,EAAA,SAAAnB,GACA,MAAAqO,YAAAnN,EAAAlB,MAYA,QAAAsO,SAAApN,EAAAqN,GACAA,EAAAC,MAAAD,EAAArN,IAAAqN,GAAAE,SAAAF,EAKA,KAHA,GAAAhQ,GAAA,EACAP,EAAAuQ,EAAAvQ,OAEA,MAAAkD,GAAAlD,EAAAO,GACA2C,IAAAwN,MAAAH,EAAAhQ,MAEA,OAAAA,OAAAP,EAAAkD,EAAAJ,EAcA,QAAA6N,gBAAAzN,EAAA0N,EAAAC,GACA,GAAA/P,GAAA8P,EAAA1N,EACA,OAAAsD,IAAAtD,GAAApC,EAAAO,UAAAP,EAAA+P,EAAA3N,IAYA,QAAA4N,QAAApR,EAAA+E,GACA,MAAA/E,GAAA+E,EAWA,QAAAsM,SAAA7N,EAAAlB,GAIA,MAAA2E,IAAA1G,KAAAiD,EAAAlB,IACA,gBAAAkB,IAAAlB,IAAAkB,IAAA,OAAA8N,aAAA9N,GAWA,QAAA+N,WAAA/N,EAAAlB,GACA,MAAAA,KAAA8B,QAAAZ,GAYA,QAAAgO,aAAArE,EAAAvE,EAAAC,GACA,MAAAsE,IAAAlE,GAAAL,EAAAC,IAAAsE,EAAAsE,GAAA7I,EAAAC,GAaA,QAAA6I,kBAAAC,EAAAhR,EAAAa,GASA,IARA,GAAA+N,GAAA/N,EAAAD,kBAAAF,cACAf,EAAAqR,EAAA,GAAArR,OACAsR,EAAAD,EAAArR,OACAuR,EAAAD,EACAE,EAAApQ,MAAAkQ,GACAG,EAAAC,IACA5Q,KAEAyQ,KAAA,CACA,GAAApR,GAAAkR,EAAAE,EACAA,IAAAlR,IACAF,EAAAgB,SAAAhB,EAAAiD,UAAA/C,KAEAoR,EAAA9I,GAAAxI,EAAAH,OAAAyR,GACAD,EAAAD,IAAArQ,IAAAb,GAAAL,GAAA,KAAAG,EAAAH,QAAA,KACA,GAAAmL,UAAAoG,GAAApR,GACA2C,EAEA3C,EAAAkR,EAAA,EAEA,IAAA9Q,GAAA,GACAoR,EAAAH,EAAA,EAEA1I,GACA,OAAAvI,EAAAP,GAAAc,EAAAd,OAAAyR,GAAA,CACA,GAAA/R,GAAAS,EAAAI,GACA0I,EAAA5I,IAAAX,IAGA,IADAA,EAAAwB,GAAA,IAAAxB,IAAA,IACAiS,EACArO,SAAAqO,EAAA1I,GACAgG,EAAAnO,EAAAmI,EAAA/H,IACA,CAEA,IADAqQ,EAAAD,IACAC,GAAA,CACA,GAAAhO,GAAAiO,EAAAD,EACA,MAAAhO,EACAD,SAAAC,EAAA0F,GACAgG,EAAAoC,EAAAE,GAAAtI,EAAA/H,IAEA,QAAA4H,GAGA6I,GACAA,EAAAzM,KAAA+D,GAEAnI,EAAAoE,KAAAxF,IAGA,MAAAoB,GAcA,QAAA8Q,cAAA1O,EAAA9C,EAAAC,EAAAC,GAIA,MAHA0P,YAAA9M,EAAA,SAAAxD,EAAAsC,EAAAkB,GACA9C,EAAAE,EAAAD,EAAAX,GAAAsC,EAAAkB,KAEA5C,EAaA,QAAAuR,YAAA3O,EAAAqN,EAAAxQ,GACAyQ,MAAAD,EAAArN,KACAqN,EAAAE,SAAAF,GACArN,EAAA4O,OAAA5O,EAAAqN,GACAA,EAAAwB,KAAAxB,GAEA,IAAA1Q,GAAA,MAAAqD,MAAAwN,MAAAH,GACA,cAAA1Q,EAAAiD,EAAAlD,MAAAC,EAAAqD,EAAAnD,GAkBA,QAAAiS,aAAAtS,EAAA+E,EAAA0I,EAAA8E,EAAA7E,GACA,MAAA1N,KAAA+E,GACA,EAEA,MAAA/E,GAAA,MAAA+E,IAAA4I,SAAA3N,KAAA6G,aAAA9B,GACA/E,OAAA+E,MAEAyN,gBAAAxS,EAAA+E,EAAAuN,YAAA7E,EAAA8E,EAAA7E,GAkBA,QAAA8E,iBAAAhP,EAAAuB,EAAA0N,EAAAhF,EAAA8E,EAAA7E,GACA,GAAAgF,GAAA5L,GAAAtD,GACAmP,EAAA7L,GAAA/B,GACA6N,EAAAC,EACAC,EAAAD,CAEAH,KACAE,EAAA9E,OAAAtK,GACAoP,KAAAvE,EAAAD,EAAAwE,GAEAD,IACAG,EAAAhF,OAAA/I,GACA+N,KAAAzE,EAAAD,EAAA0E,EAEA,IAAAC,GAAAH,GAAAxE,IAAApJ,aAAAxB,GACAwP,EAAAF,GAAA1E,IAAApJ,aAAAD,GACAkO,EAAAL,GAAAE,CAEA,IAAAG,IAAAF,EAEA,MADArF,OAAA,GAAA9B,QACA8G,GAAAQ,aAAA1P,GACA2P,YAAA3P,EAAAuB,EAAA0N,EAAAhF,EAAA8E,EAAA7E,GACA0F,WAAA5P,EAAAuB,EAAA6N,EAAAH,EAAAhF,EAAA8E,EAAA7E,EAEA,MAAA6E,EAAAc,GAAA,CACA,GAAAC,GAAAP,GAAA9L,GAAA1G,KAAAiD,EAAA,eACA+P,EAAAP,GAAA/L,GAAA1G,KAAAwE,EAAA,cAEA,IAAAuO,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAA9P,EAAAxD,QAAAwD,EACAiQ,EAAAF,EAAAxO,EAAA/E,QAAA+E,CAGA,OADA2I,OAAA,GAAA9B,QACA6G,EAAAe,EAAAC,EAAAhG,EAAA8E,EAAA7E,IAGA,MAAAuF,IAGAvF,MAAA,GAAA9B,QACA8H,aAAAlQ,EAAAuB,EAAA0N,EAAAhF,EAAA8E,EAAA7E,KAHA,EAgBA,QAAAiG,aAAAnQ,EAAAoJ,EAAAgH,EAAAnG,GACA,GAAA5M,GAAA+S,EAAAtT,OACAA,EAAAO,EACAgT,GAAApG,CAEA,UAAAjK,EACA,OAAAlD,CAGA,KADAkD,EAAAY,OAAAZ,GACA3C,KAAA,CACA,GAAAwE,GAAAuO,EAAA/S,EACA,IAAAgT,GAAAxO,EAAA,GACAA,EAAA,KAAA7B,EAAA6B,EAAA,MACAA,EAAA,IAAA7B,IAEA,SAGA,OAAA3C,EAAAP,GAAA,CACA+E,EAAAuO,EAAA/S,EACA,IAAAyB,GAAA+C,EAAA,GACA8G,EAAA3I,EAAAlB,GACA8J,EAAA/G,EAAA,EAEA,IAAAwO,GAAAxO,EAAA,IACA,GAAA8G,IAAA/I,KAAAd,IAAAkB,IACA,aAES,CACT,GAAAkK,GAAA,GAAA9B,MACA,IAAA6B,EACA,GAAArM,GAAAqM,EAAAtB,EAAAC,EAAA9J,EAAAkB,EAAAoJ,EAAAc,EAEA,MAAAtM,IAAAgC,EACAkP,YAAAlG,EAAAD,EAAAsB,EAAAqG,EAAAT,EAAA3F,GACAtM,GAEA,UAIA,SAUA,QAAA2S,cAAA/T,GAGA,wBAAAA,GACAA,EAEA,MAAAA,EACAgU,SAEA,gBAAAhU,GACA8G,GAAA9G,GACAiU,oBAAAjU,EAAA,GAAAA,EAAA,IACAkU,YAAAlU,GAEAmU,SAAAnU,GAWA,QAAAoU,UAAA5Q,GACA,MAAA6Q,IAAAjQ,OAAAZ,IAWA,QAAA8Q,YAAA9Q,GACAA,EAAA,MAAAA,IAAAY,OAAAZ,EAEA,IAAApC,KACA,QAAAkB,KAAAkB,GACApC,EAAAoE,KAAAlD,EAEA,OAAAlB,GAmBA,QAAAmT,QAAAvU,EAAA+E,GACA,MAAAA,GAAA/E,EAWA,QAAAwU,SAAArS,EAAAxB,GACA,GAAAE,GAAA,GACAO,EAAAqT,YAAAtS,GAAAT,MAAAS,EAAA7B,UAKA,OAHAoM,IAAAvK,EAAA,SAAAnC,EAAAsC,EAAAH,GACAf,IAAAP,GAAAF,EAAAX,EAAAsC,EAAAH,KAEAf,EAUA,QAAA8S,aAAAtH,GACA,GAAAgH,GAAAc,aAAA9H,EACA,WAAAgH,EAAAtT,QAAAsT,EAAA,MACAe,wBAAAf,EAAA,MAAAA,EAAA,OAEA,SAAApQ,GACA,MAAAA,KAAAoJ,GAAA+G,YAAAnQ,EAAAoJ,EAAAgH,IAYA,QAAAK,qBAAApD,EAAAzE,GACA,MAAA0E,OAAAD,IAAA+D,mBAAAxI,GACAuI,wBAAA3D,MAAAH,GAAAzE,GAEA,SAAA5I,GACA,GAAA2I,GAAAb,IAAA9H,EAAAqN,EACA,OAAA1E,KAAA/I,GAAA+I,IAAAC,EACAyI,MAAArR,EAAAqN,GACAyB,YAAAlG,EAAAD,EAAA/I,EAAA0Q,EAAAT,IAeA,QAAAyB,WAAAtR,EAAAoJ,EAAAmI,EAAAtH,EAAAC,GACA,GAAAlK,IAAAoJ,EAAA,CAGA,IAAA9F,GAAA8F,KAAAsG,aAAAtG,GACA,GAAAnJ,GAAAuR,OAAApI,EAEA9L,WAAA2C,GAAAmJ,EAAA,SAAAR,EAAA9J,GAKA,GAJAmB,IACAnB,EAAA8J,EACAA,EAAAQ,EAAAtK,IAEAqL,SAAAvB,GACAsB,MAAA,GAAA9B,QACAqJ,cAAAzR,EAAAoJ,EAAAtK,EAAAyS,EAAAD,UAAArH,EAAAC,OAEA,CACA,GAAAwH,GAAAzH,EACAA,EAAAjK,EAAAlB,GAAA8J,EAAA9J,EAAA,GAAAkB,EAAAoJ,EAAAc,GACAtK,CAEA8R,KAAA9R,IACA8R,EAAA9I,GAEAG,iBAAA/I,EAAAlB,EAAA4S,OAoBA,QAAAD,eAAAzR,EAAAoJ,EAAAtK,EAAAyS,EAAAI,EAAA1H,EAAAC,GACA,GAAAvB,GAAA3I,EAAAlB,GACA8J,EAAAQ,EAAAtK,GACAoM,EAAAhB,EAAApC,IAAAc,EAEA,IAAAsC,EAEA,WADAnC,kBAAA/I,EAAAlB,EAAAoM,EAGA,IAAAwG,GAAAzH,EACAA,EAAAtB,EAAAC,EAAA9J,EAAA,GAAAkB,EAAAoJ,EAAAc,GACAtK,EAEAoM,EAAA0F,IAAA9R,CAEAoM,KACA0F,EAAA9I,EACAtF,GAAAsF,IAAA8G,aAAA9G,GACAtF,GAAAqF,GACA+I,EAAA/I,EAEAiJ,kBAAAjJ,GACA+I,EAAAhN,UAAAiE,IAGAqD,GAAA,EACA0F,EAAA5H,UAAAlB,GAAA,IAGAiJ,cAAAjJ,IAAAkJ,YAAAlJ,GACAkJ,YAAAnJ,GACA+I,EAAAK,cAAApJ,IAEAwB,SAAAxB,IAAA4I,GAAApE,WAAAxE,IACAqD,GAAA,EACA0F,EAAA5H,UAAAlB,GAAA,IAGA8I,EAAA/I,EAIAqD,GAAA,GAGA9B,EAAA5N,IAAAsM,EAAA8I,GAEA1F,GAEA2F,EAAAD,EAAA9I,EAAA2I,EAAAtH,EAAAC,GAEAA,EAAA,OAAAtB,GACAG,iBAAA/I,EAAAlB,EAAA4S,GAWA,QAAAM,SAAA/U,EAAA6C,GACA,GAAAhD,GAAAG,EAAAH,MACA,IAAAA,EAIA,MADAgD,IAAA,EAAAA,EAAAhD,EAAA,EACAmV,QAAAnS,EAAAhD,GAAAG,EAAA6C,GAAAF,EAYA,QAAAsS,aAAAvT,EAAA2G,EAAA6M,GACA,GAAA9U,GAAA,EACAiI,GAAArH,SAAAqH,EAAAxI,OAAAwI,GAAAkL,UAAAtQ,UAAAkS,eAEA,IAAAxU,GAAAoT,QAAArS,EAAA,SAAAnC,EAAAsC,EAAAH,GACA,GAAA0T,GAAApU,SAAAqH,EAAA,SAAAnI,GACA,MAAAA,GAAAX,IAEA,QAAgB6V,WAAAhV,UAAAb,UAGhB,OAAAgD,YAAA5B,EAAA,SAAAoC,EAAAuB,GACA,MAAA+Q,iBAAAtS,EAAAuB,EAAA4Q,KAaA,QAAAI,UAAAvS,EAAAC,GAEA,MADAD,GAAAY,OAAAZ,GACA1B,YAAA2B,EAAA,SAAArC,EAAAkB,GAIA,MAHAA,KAAAkB,KACApC,EAAAkB,GAAAkB,EAAAlB,IAEAlB,OAYA,QAAA4U,YAAAxS,EAAAvC,GAMA,IALA,GAAAJ,GAAA,GACA4C,EAAAwS,aAAAzS,GACAlD,EAAAmD,EAAAnD,OACAc,OAEAP,EAAAP,GAAA,CACA,GAAAgC,GAAAmB,EAAA5C,GACAb,EAAAwD,EAAAlB,EAEArB,GAAAjB,EAAAsC,KACAlB,EAAAkB,GAAAtC,GAGA,MAAAoB,GAUA,QAAA8U,cAAA5T,GACA,gBAAAkB,GACA,aAAAA,EAAAJ,EAAAI,EAAAlB,IAWA,QAAA6T,kBAAAtF,GACA,gBAAArN,GACA,MAAAoN,SAAApN,EAAAqN,IAeA,QAAAuF,aAAA3V,EAAAmB,EAAAjB,EAAAa,GACA,GAAA6U,GAAA7U,EAAAmB,gBAAArB,YACAT,EAAA,GACAP,EAAAsB,EAAAtB,OACA2R,EAAAxR,CAKA,KAHAE,IACAsR,EAAAxQ,SAAAhB,EAAAiD,UAAA/C,OAEAE,EAAAP,GAKA,IAJA,GAAAmC,GAAA,EACAzC,EAAA4B,EAAAf,GACA0I,EAAA5I,IAAAX,MAEAyC,EAAA4T,EAAApE,EAAA1I,EAAA9G,EAAAjB,IAAA,IACAyQ,IAAAxR,GACAkK,GAAApK,KAAA0R,EAAAxP,EAAA,GAEAkI,GAAApK,KAAAE,EAAAgC,EAAA,EAGA,OAAAhC,GAYA,QAAA6V,YAAA7V,EAAA8V,GAIA,IAHA,GAAAjW,GAAAG,EAAA8V,EAAAjW,OAAA,EACA+F,EAAA/F,EAAA,EAEAA,KAAA,CACA,GAAAO,GAAA0V,EAAAjW,EACA,IAAAA,GAAA+F,GAAAxF,IAAA2V,EAAA,CACA,GAAAA,GAAA3V,CACA,IAAA4U,QAAA5U,GACA8J,GAAApK,KAAAE,EAAAI,EAAA,OAEA,IAAAiQ,MAAAjQ,EAAAJ,SASAA,GAAAuQ,MAAAnQ,QATA,CACA,GAAAgQ,GAAAE,SAAAlQ,GACA2C,EAAA4O,OAAA3R,EAAAoQ,EAEA,OAAArN,SACAA,GAAAwN,MAAAqB,KAAAxB,OAQA,MAAApQ,GAYA,QAAAgW,YAAArJ,EAAAC,GACA,MAAAD,GAAAsJ,GAAAC,MAAAtJ,EAAAD,EAAA,IAcA,QAAAwJ,WAAAhO,EAAAC,EAAAgO,EAAArU,GAKA,IAJA,GAAA3B,GAAA,GACAP,EAAAmR,GAAAqF,IAAAjO,EAAAD,IAAAiO,GAAA,OACAzV,EAAAM,MAAApB,GAEAA,KACAc,EAAAoB,EAAAlC,IAAAO,GAAA+H,EACAA,GAAAiO,CAEA,OAAAzV,GAWA,QAAA2V,YAAA9Q,EAAA3C,GACA,GAAAlC,GAAA,EACA,KAAA6E,GAAA,EAAA3C,KAAA0T,EACA,MAAA5V,EAIA,GACAkC,GAAA,IACAlC,GAAA6E,GAEA3C,EAAAoT,GAAApT,EAAA,GACAA,IACA2C,YAEO3C,EAEP,OAAAlC,GAaA,QAAA6V,SAAAzT,EAAAqN,EAAA7Q,EAAAyN,GACAoD,EAAAC,MAAAD,EAAArN,IAAAqN,GAAAE,SAAAF,EAOA,KALA,GAAAhQ,GAAA,GACAP,EAAAuQ,EAAAvQ,OACA+F,EAAA/F,EAAA,EACA4W,EAAA1T,EAEA,MAAA0T,KAAArW,EAAAP,GAAA,CACA,GAAAgC,GAAA0O,MAAAH,EAAAhQ,GACA,IAAA8M,SAAAuJ,GAAA,CACA,GAAAhC,GAAAlV,CACA,IAAAa,GAAAwF,EAAA,CACA,GAAA8F,GAAA+K,EAAA5U,EACA4S,GAAAzH,IAAAtB,EAAA7J,EAAA4U,GAAA9T,EACA8R,IAAA9R,IACA8R,EAAA,MAAA/I,EACAsJ,QAAA5E,EAAAhQ,EAAA,UACAsL,GAGAK,YAAA0K,EAAA5U,EAAA4S,GAEAgC,IAAA5U,GAEA,MAAAkB,GAyBA,QAAA2T,WAAA1W,EAAAmI,EAAAC,GACA,GAAAhI,GAAA,GACAP,EAAAG,EAAAH,MAEA,GAAAsI,IACAA,KAAAtI,EAAA,EAAAA,EAAAsI,GAEAC,IAAAvI,IAAAuI,EACA,EAAAA,IACAA,GAAAvI,GAEAA,EAAAsI,EAAAC,EAAA,EAAAA,EAAAD,IAAA,EACAA,KAAA,CAGA,KADA,GAAAxH,GAAAM,MAAApB,KACAO,EAAAP,GACAc,EAAAP,GAAAJ,EAAAI,EAAA+H,EAEA,OAAAxH,GAYA,QAAAgW,UAAAjV,EAAAlB,GACA,GAAAG,EAMA,OAJAsL,IAAAvK,EAAA,SAAAnC,EAAAa,EAAAsB,GAEA,MADAf,GAAAH,EAAAjB,EAAAa,EAAAsB,IACAf,MAEAA,EAeA,QAAAiW,iBAAA5W,EAAAT,EAAAsX,GACA,GAAAC,GAAA,EACAC,EAAA/W,IAAAH,OAAAiX,CAEA,oBAAAvX,WAAAyX,GAAAD,EAAA,CACA,KAAAA,EAAAD,GAAA,CACA,GAAAG,GAAAH,EAAAC,IAAA,EACAjO,EAAA9I,EAAAiX,EAEA,QAAAnO,IAAAsG,SAAAtG,KACA+N,EAAAtX,GAAAuJ,EAAAvJ,EAAAuJ,GACAgO,EAAAG,EAAA,EAEAF,EAAAE,EAGA,MAAAF,GAEA,MAAAG,mBAAAlX,EAAAT,EAAAgU,SAAAsD,GAgBA,QAAAK,mBAAAlX,EAAAT,EAAAW,EAAA2W,GACAtX,EAAAW,EAAAX,EASA,KAPA,GAAAuX,GAAA,EACAC,EAAA/W,IAAAH,OAAA,EACAsX,EAAA5X,MACA6X,EAAA,OAAA7X,EACA8X,EAAAjI,SAAA7P,GACA+X,EAAA/X,IAAAoD,EAEAoU,EAAAD,GAAA,CACA,GAAAG,GAAAhB,IAAAa,EAAAC,GAAA,GACAjO,EAAA5I,EAAAF,EAAAiX,IACAM,EAAAzO,IAAAnG,EACA6U,EAAA,OAAA1O,EACA2O,EAAA3O,MACA4O,EAAAtI,SAAAtG,EAEA,IAAAqO,EACA,GAAAQ,GAAAd,GAAAY,MAEAE,GADSL,EACTG,IAAAZ,GAAAU,GACSH,EACTK,GAAAF,IAAAV,IAAAW,GACSH,EACTI,GAAAF,IAAAC,IAAAX,IAAAa,GACSF,GAAAE,GACT,EAEAb,EAAAtX,GAAAuJ,EAAAvJ,EAAAuJ,CAEA6O,GACAb,EAAAG,EAAA,EAEAF,EAAAE,EAGA,MAAAzO,IAAAuO,EAAAa,GAYA,QAAAC,gBAAA7X,EAAAE,GAMA,IALA,GAAAE,GAAA,GACAP,EAAAG,EAAAH,OACAa,EAAA,EACAC,OAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,GACA0I,EAAA5I,IAAAX,IAEA,KAAAa,IAAAwL,GAAA9C,EAAA0I,GAAA,CACA,GAAAA,GAAA1I,CACAnI,GAAAD,KAAA,IAAAnB,EAAA,EAAAA,GAGA,MAAAoB,GAWA,QAAAmX,cAAAvY,GACA,sBAAAA,GACAA,EAEA6P,SAAA7P,GACA8C,GAEA9C,EAWA,QAAAwY,cAAAxY,GAEA,mBAAAA,GACA,MAAAA,EAEA,IAAA6P,SAAA7P,GACA,MAAAyY,OAAAlY,KAAAP,GAAA,EAEA,IAAAoB,GAAApB,EAAA,EACA,YAAAoB,GAAA,EAAApB,IAAA0Y,EAAA,KAAAtX,EAYA,QAAAuX,UAAAlY,EAAAE,EAAAa,GACA,GAAAX,GAAA,GACA0O,EAAAlO,cACAf,EAAAG,EAAAH,OACAkP,GAAA,EACApO,KACA6Q,EAAA7Q,CAEA,IAAAI,EACAgO,GAAA,EACAD,EAAAhO,sBAEA,IAAAjB,GAAA4I,EAAA,CACA,GAAApJ,GAAAa,EAAA,KAAAiY,GAAAnY,EACA,IAAAX,EACA,MAAAgG,YAAAhG,EAEA0P,IAAA,EACAD,EAAA3L,SACAqO,EAAA,GAAAxG,cAGAwG,GAAAtR,KAAAS,CAEAgI,GACA,OAAAvI,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,GACA0I,EAAA5I,IAAAX,IAGA,IADAA,EAAAwB,GAAA,IAAAxB,IAAA,EACAwP,GAAAjG,MAAA,CAEA,IADA,GAAAsP,GAAA5G,EAAA3R,OACAuY,KACA,GAAA5G,EAAA4G,KAAAtP,EACA,QAAAH,EAGAzI,IACAsR,EAAAzM,KAAA+D,GAEAnI,EAAAoE,KAAAxF,OAEAuP,GAAA0C,EAAA1I,EAAA/H,KACAyQ,IAAA7Q,GACA6Q,EAAAzM,KAAA+D,GAEAnI,EAAAoE,KAAAxF,IAGA,MAAAoB,GAWA,QAAA0X,WAAAtV,EAAAqN,GACAA,EAAAC,MAAAD,EAAArN,IAAAqN,GAAAE,SAAAF,GACArN,EAAA4O,OAAA5O,EAAAqN,EAEA,IAAAvO,GAAA0O,MAAAqB,KAAAxB,GACA,eAAArN,GAAA6N,QAAA7N,EAAAlB,WAAAkB,GAAAlB,GAaA,QAAAyW,YAAAvV,EAAAqN,EAAAmI,EAAAvL,GACA,MAAAwJ,SAAAzT,EAAAqN,EAAAmI,EAAApI,QAAApN,EAAAqN,IAAApD,GAcA,QAAAwL,WAAAxY,EAAAQ,EAAAiY,EAAA1W,GAIA,IAHA,GAAAlC,GAAAG,EAAAH,OACAO,EAAA2B,EAAAlC,EAAA,IAEAkC,EAAA3B,QAAAP,IACAW,EAAAR,EAAAI,KAAAJ,KAEA,MAAAyY,GACA/B,UAAA1W,EAAA+B,EAAA,EAAA3B,EAAA2B,EAAA3B,EAAA,EAAAP,GACA6W,UAAA1W,EAAA+B,EAAA3B,EAAA,IAAA2B,EAAAlC,EAAAO,GAaA,QAAAsI,kBAAAnJ,EAAAmZ,GACA,GAAA/X,GAAApB,CAIA,OAHAoB,aAAA2F,eACA3F,IAAApB,SAEA8B,YAAAqX,EAAA,SAAA/X,EAAAgY,GACA,MAAAA,GAAAjZ,KAAAD,MAAAkZ,EAAAhZ,QAAAuB,WAAAP,GAAAgY,EAAA/Y,QACOe,GAaP,QAAAiY,SAAA1H,EAAAhR,EAAAa,GAIA,IAHA,GAAAX,GAAA,GACAP,EAAAqR,EAAArR,SAEAO,EAAAP,GACA,GAAAc,KACAO,UACA2N,eAAAlO,EAAAuQ,EAAA9Q,GAAAF,EAAAa,GACA8N,eAAAqC,EAAA9Q,GAAAO,EAAAT,EAAAa,IAEAmQ,EAAA9Q,EAEA,OAAAO,MAAAd,OAAAqY,SAAAvX,EAAAT,EAAAa,MAYA,QAAA8X,eAAA7V,EAAA7B,EAAA2X,GAMA,IALA,GAAA1Y,GAAA,GACAP,EAAAmD,EAAAnD,OACAkZ,EAAA5X,EAAAtB,OACAc,OAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAwZ,EAAA3Y,EAAAe,EAAAf,GAAAuC,CACAmW,GAAAnY,EAAAqC,EAAA5C,GAAAb,GAEA,MAAAoB,GAUA,QAAAqY,qBAAAzZ,GACA,MAAAoV,mBAAApV,QAUA,QAAA0Z,cAAA1Z,GACA,wBAAAA,KAAAgU,SAUA,QAAAjD,UAAA/Q,GACA,MAAA8G,IAAA9G,KAAA2Z,GAAA3Z,GAYA,QAAA4Z,WAAAnZ,EAAAmI,EAAAC,GACA,GAAAvI,GAAAG,EAAAH,MAEA,OADAuI,OAAAzF,EAAA9C,EAAAuI,GACAD,GAAAC,GAAAvI,EAAAG,EAAA0W,UAAA1W,EAAAmI,EAAAC,GAWA,QAAAsF,aAAA0L,EAAAtM,GACA,GAAAA,EACA,MAAAsM,GAAAC,OAEA,IAAA1Y,GAAA,GAAAyY,GAAAE,YAAAF,EAAAvZ,OAEA,OADAuZ,GAAAG,KAAA5Y,GACAA,EAUA,QAAA6Y,kBAAAC,GACA,GAAA9Y,GAAA,GAAA8Y,GAAAH,YAAAG,EAAAC,WAEA,OADA,IAAAC,IAAAhZ,GAAAtB,IAAA,GAAAsa,IAAAF,IACA9Y,EAWA,QAAAiZ,eAAAC,EAAA/M,GACA,GAAAsM,GAAAtM,EAAA0M,iBAAAK,EAAAT,QAAAS,EAAAT,MACA,WAAAS,GAAAP,YAAAF,EAAAS,EAAAC,WAAAD,EAAAH,YAYA,QAAAK,UAAA5a,EAAA2N,EAAAkN,GACA,GAAAha,GAAA8M,EAAAkN,EAAAhV,WAAA7F,IAAA,GAAA6F,WAAA7F,EACA,OAAAkC,aAAArB,EAAAd,YAAA,GAAAC,GAAAma,aAUA,QAAAW,aAAAC,GACA,GAAAvZ,GAAA,GAAAuZ,GAAAZ,YAAAY,EAAA/N,OAAAgO,GAAAC,KAAAF,GAEA,OADAvZ,GAAAiF,UAAAsU,EAAAtU,UACAjF,EAYA,QAAA0Z,UAAAhb,EAAAyN,EAAAkN,GACA,GAAAha,GAAA8M,EAAAkN,EAAA3U,WAAAhG,IAAA,GAAAgG,WAAAhG,EACA,OAAAgC,aAAArB,EAAAV,YAAA,GAAAD,GAAAia,aAUA,QAAAgB,aAAAC,GACA,MAAAC,IAAA7W,OAAA6W,GAAA1a,KAAAya,OAWA,QAAAE,iBAAAC,EAAA5N,GACA,GAAAsM,GAAAtM,EAAA0M,iBAAAkB,EAAAtB,QAAAsB,EAAAtB,MACA,WAAAsB,GAAApB,YAAAF,EAAAsB,EAAAZ,WAAAY,EAAA7a,QAWA,QAAA8a,kBAAApb,EAAA+E,GACA,GAAA/E,IAAA+E,EAAA,CACA,GAAAsW,GAAArb,IAAAoD,EACAyU,EAAA,OAAA7X,EACAsb,EAAAtb,MACA8X,EAAAjI,SAAA7P,GAEAgY,EAAAjT,IAAA3B,EACA6U,EAAA,OAAAlT,EACAmT,EAAAnT,MACAoT,EAAAtI,SAAA9K,EAEA,KAAAkT,IAAAE,IAAAL,GAAA9X,EAAA+E,GACA+S,GAAAE,GAAAE,IAAAD,IAAAE,GACAN,GAAAG,GAAAE,IACAmD,GAAAnD,IACAoD,EACA,QAEA,KAAAzD,IAAAC,IAAAK,GAAApT,EAAA/E,GACAmY,GAAAkD,GAAAC,IAAAzD,IAAAC,GACAG,GAAAoD,GAAAC,IACAtD,GAAAsD,IACApD,EACA,SAGA,SAiBA,QAAApC,iBAAAtS,EAAAuB,EAAA4Q,GAOA,IANA,GAAA9U,GAAA,GACA0a,EAAA/X,EAAAqS,SACA2F,EAAAzW,EAAA8Q,SACAvV,EAAAib,EAAAjb,OACAmb,EAAA9F,EAAArV,SAEAO,EAAAP,GAAA,CACA,GAAAc,GAAAga,iBAAAG,EAAA1a,GAAA2a,EAAA3a,GACA,IAAAO,EAAA,CACA,GAAAP,GAAA4a,EACA,MAAAra,EAEA,IAAAsa,GAAA/F,EAAA9U,EACA,OAAAO,IAAA,QAAAsa,EAAA,OAUA,MAAAlY,GAAA3C,MAAAkE,EAAAlE,MAcA,QAAA8a,aAAAtb,EAAAub,EAAAC,EAAAC,GAUA,IATA,GAAAC,GAAA,GACAC,EAAA3b,EAAAC,OACA2b,EAAAJ,EAAAvb,OACA4b,EAAA,GACAC,EAAAP,EAAAtb,OACA8b,EAAA3K,GAAAuK,EAAAC,EAAA,GACA7a,EAAAM,MAAAya,EAAAC,GACAC,GAAAP,IAEAI,EAAAC,GACA/a,EAAA8a,GAAAN,EAAAM,EAEA,QAAAH,EAAAE,IACAI,GAAAL,EAAAD,KACA3a,EAAAya,EAAAE,IAAA1b,EAAA0b,GAGA,MAAAK,KACAhb,EAAA8a,KAAA7b,EAAA0b,IAEA,OAAA3a,GAcA,QAAAkb,kBAAAjc,EAAAub,EAAAC,EAAAC,GAWA,IAVA,GAAAC,GAAA,GACAC,EAAA3b,EAAAC,OACAic,EAAA,GACAN,EAAAJ,EAAAvb,OACAkc,EAAA,GACAC,EAAAb,EAAAtb,OACA8b,EAAA3K,GAAAuK,EAAAC,EAAA,GACA7a,EAAAM,MAAA0a,EAAAK,GACAJ,GAAAP,IAEAC,EAAAK,GACAhb,EAAA2a,GAAA1b,EAAA0b,EAGA,KADA,GAAAla,GAAAka,IACAS,EAAAC,GACArb,EAAAS,EAAA2a,GAAAZ,EAAAY,EAEA,QAAAD,EAAAN,IACAI,GAAAL,EAAAD,KACA3a,EAAAS,EAAAga,EAAAU,IAAAlc,EAAA0b,KAGA,OAAA3a,GAWA,QAAA8G,WAAA0E,EAAAnM,GACA,GAAAI,GAAA,GACAP,EAAAsM,EAAAtM,MAGA,KADAG,MAAAiB,MAAApB,MACAO,EAAAP,GACAG,EAAAI,GAAA+L,EAAA/L,EAEA,OAAAJ,GAaA,QAAAoM,YAAAD,EAAAnJ,EAAAD,EAAAiK,GACAjK,SAKA,KAHA,GAAA3C,GAAA,GACAP,EAAAmD,EAAAnD,SAEAO,EAAAP,GAAA,CACA,GAAAgC,GAAAmB,EAAA5C,GAEAqU,EAAAzH,EACAA,EAAAjK,EAAAlB,GAAAsK,EAAAtK,KAAAkB,EAAAoJ,GACAA,EAAAtK,EAEAkK,aAAAhJ,EAAAlB,EAAA4S,GAEA,MAAA1R,GAWA,QAAA+K,aAAA3B,EAAApJ,GACA,MAAAqJ,YAAAD,EAAA8P,WAAA9P,GAAApJ,GAWA,QAAAmZ,kBAAAjc,EAAAkc,GACA,gBAAAza,EAAAxB,GACA,GAAAR,GAAA2G,GAAA3E,GAAA3B,gBAAAiM,eACA7L,EAAAgc,QAEA,OAAAzc,GAAAgC,EAAAzB,EAAAkV,YAAAjV,GAAAC,IAWA,QAAAic,gBAAAC,GACA,MAAAC,MAAA,SAAAvZ,EAAAwZ,GACA,GAAAnc,GAAA,GACAP,EAAA0c,EAAA1c,OACAmN,EAAAnN,EAAA,EAAA0c,EAAA1c,EAAA,GAAA8C,EACA6Z,EAAA3c,EAAA,EAAA0c,EAAA,GAAA5Z,CAWA,KATAqK,EAAAqP,EAAAxc,OAAA,qBAAAmN,IACAnN,IAAAmN,GACArK,EAEA6Z,GAAAC,eAAAF,EAAA,GAAAA,EAAA,GAAAC,KACAxP,EAAA,EAAAnN,EAAA8C,EAAAqK,EACAnN,EAAA,GAEAkD,EAAAY,OAAAZ,KACA3C,EAAAP,GAAA,CACA,GAAAsM,GAAAoQ,EAAAnc,EACA+L,IACAkQ,EAAAtZ,EAAAoJ,EAAA/L,EAAA4M,GAGA,MAAAjK,KAYA,QAAA2Z,gBAAA/a,EAAAI,GACA,gBAAAL,EAAAxB,GACA,SAAAwB,EACA,MAAAA,EAEA,KAAAsS,YAAAtS,GACA,MAAAC,GAAAD,EAAAxB,EAMA,KAJA,GAAAL,GAAA6B,EAAA7B,OACAO,EAAA2B,EAAAlC,EAAA,GACA8c,EAAAhZ,OAAAjC,IAEAK,EAAA3B,QAAAP,IACAK,EAAAyc,EAAAvc,KAAAuc,MAAA,IAIA,MAAAjb,IAWA,QAAAkb,eAAA7a,GACA,gBAAAgB,EAAA7C,EAAAuQ,GAMA,IALA,GAAArQ,GAAA,GACAuc,EAAAhZ,OAAAZ,GACAC,EAAAyN,EAAA1N,GACAlD,EAAAmD,EAAAnD,OAEAA,KAAA,CACA,GAAAgC,GAAAmB,EAAAjB,EAAAlC,IAAAO,EACA,IAAAF,EAAAyc,EAAA9a,KAAA8a,MAAA,EACA,MAGA,MAAA5Z,IAeA,QAAA8Z,mBAAAnd,EAAAoS,EAAAnS,GAIA,QAAAmd,WACA,GAAAC,GAAAnW,aAAAoW,IAAApW,eAAAkW,SAAAG,EAAAvd,CACA,OAAAqd,GAAAtd,MAAAyd,EAAAvd,EAAAiH,KAAAuW,WALA,GAAAD,GAAApL,EAAAsL,EACAH,EAAAI,kBAAA3d,EAMA,OAAAod,SAUA,QAAAQ,iBAAAC,GACA,gBAAA/X,GACAA,EAAAhB,SAAAgB,EAEA,IAAAjC,GAAAkC,GAAAC,KAAAF,GACAK,cAAAL,GACA7C,EAEAuB,EAAAX,EACAA,EAAA,GACAiC,EAAAgY,OAAA,GAEAC,EAAAla,EACA4V,UAAA5V,EAAA,GAAAma,KAAA,IACAlY,EAAA6T,MAAA,EAEA,OAAAnV,GAAAqZ,KAAAE,GAWA,QAAAE,kBAAAC,GACA,gBAAApY,GACA,MAAAnE,aAAAwc,MAAAC,OAAAtY,GAAAuY,QAAAC,GAAA,KAAAJ,EAAA,KAYA,QAAAP,mBAAAJ,GACA,kBAIA,GAAArd,GAAAud,SACA,QAAAvd,EAAAC,QACA,iBAAAod,EACA,kBAAAA,GAAArd,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAAqd,GAAArd,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,GAAAqe,GAAA5P,WAAA4O,EAAAiB,WACAvd,EAAAsc,EAAAxd,MAAAwe,EAAAre,EAIA,OAAAsN,UAAAvM,KAAAsd,GAcA,QAAAE,oBAAAze,EAAAoS,EAAAsM,GAGA,QAAAtB,WAMA,IALA,GAAAjd,GAAAsd,UAAAtd,OACAD,EAAAqB,MAAApB,GACAO,EAAAP,EACAgE,EAAAwa,UAAAvB,SAEA1c,KACAR,EAAAQ,GAAA+c,UAAA/c,EAEA,IAAAgb,GAAA,EAAAvb,GAAAD,EAAA,KAAAiE,GAAAjE,EAAAC,EAAA,KAAAgE,KAEAsB,eAAAvF,EAAAiE,EAGA,IADAhE,GAAAub,EAAAvb,OACAue,EAAAve,EACA,MAAAye,sBACA5e,EAAAoS,EAAAyM,oBAAAzB,QAAAjZ,YAAAlB,EACA/C,EAAAwb,EAAAzY,IAAAyb,EAAAve,EAEA,IAAAkd,GAAAnW,aAAAoW,IAAApW,eAAAkW,SAAAG,EAAAvd,CACA,OAAAD,OAAAsd,EAAAnW,KAAAhH,GAtBA,GAAAqd,GAAAI,kBAAA3d,EAwBA,OAAAod,SAUA,QAAA0B,YAAAzc,GACA,MAAAua,MAAA,SAAAmC,GACAA,EAAAhP,YAAAgP,EAAA,EAEA,IAAA5e,GAAA4e,EAAA5e,OACAO,EAAAP,EACA6e,EAAAnY,cAAA2X,UAAAS,IAKA,KAHA5c,GACA0c,EAAAG,UAEAxe,KAAA,CACA,GAAAV,GAAA+e,EAAAre,EACA,sBAAAV,GACA,SAAAgP,IAAAC,EAEA,IAAA+P,IAAA5B,GAAA,WAAA+B,YAAAnf,GACA,GAAAod,GAAA,GAAAvW,mBAAA,GAIA,IADAnG,EAAA0c,EAAA1c,EAAAP,IACAO,EAAAP,GAAA,CACAH,EAAA+e,EAAAre,EAEA,IAAA0e,GAAAD,YAAAnf,GACAkF,EAAA,WAAAka,EAAAC,GAAArf,GAAAiD,CAMAma,GAJAlY,GAAAoa,WAAApa,EAAA,KACAA,EAAA,KAAAqa,EAAAC,EAAAC,EAAAC,KACAxa,EAAA,GAAA/E,QAAA,GAAA+E,EAAA,GAEAkY,EAAA+B,YAAAja,EAAA,KAAAnF,MAAAqd,EAAAlY,EAAA,IAEA,GAAAlF,EAAAG,QAAAmf,WAAAtf,GACAod,EAAAgC,KACAhC,EAAA6B,KAAAjf,GAGA,kBACA,GAAAE,GAAAud,UACA5d,EAAAK,EAAA,EAEA,IAAAkd,GAAA,GAAAld,EAAAC,QACAwG,GAAA9G,MAAAM,QAAA4I,EACA,MAAAqU,GAAAuC,MAAA9f,UAKA,KAHA,GAAAa,GAAA,EACAO,EAAAd,EAAA4e,EAAAre,GAAAX,MAAAmH,KAAAhH,GAAAL,IAEAa,EAAAP,GACAc,EAAA8d,EAAAre,GAAAN,KAAA8G,KAAAjG,EAEA,OAAAA,MAyBA,QAAA4d,qBAAA7e,EAAAoS,EAAAnS,EAAAwb,EAAAC,EAAAkE,EAAAC,EAAAC,EAAAC,EAAArB,GAQA,QAAAtB,WAKA,IAJA,GAAAjd,GAAAsd,UAAAtd,OACAD,EAAAqB,MAAApB,GACAO,EAAAP,EAEAO,KACAR,EAAAQ,GAAA+c,UAAA/c,EAEA,IAAAib,EACA,GAAAxX,GAAAwa,UAAAvB,SACA4C,EAAA9b,aAAAhE,EAAAiE,EASA,IAPAsX,IACAvb,EAAAsb,YAAAtb,EAAAub,EAAAC,EAAAC,IAEAiE,IACA1f,EAAAic,iBAAAjc,EAAA0f,EAAAC,EAAAlE,IAEAxb,GAAA6f,EACArE,GAAA+C,EAAAve,EAAA,CACA,GAAA8f,GAAAxa,eAAAvF,EAAAiE,EACA,OAAAya,sBACA5e,EAAAoS,EAAAyM,oBAAAzB,QAAAjZ,YAAAlE,EACAC,EAAA+f,EAAAH,EAAAC,EAAArB,EAAAve,GAGA,GAAAoe,GAAAf,EAAAvd,EAAAiH,KACAmW,EAAA6C,EAAA3B,EAAAve,IAcA,OAZAG,GAAAD,EAAAC,OACA2f,EACA5f,EAAAigB,QAAAjgB,EAAA4f,GACSM,GAAAjgB,EAAA,GACTD,EAAAgf,UAEAmB,GAAAlgB,EAAA4f,IACA7f,EAAAC,OAAA4f,GAEA7Y,aAAAoW,IAAApW,eAAAkW,WACAC,EAAAE,GAAAI,kBAAAN,IAEAA,EAAAtd,MAAAwe,EAAAre,GAhDA,GAAAmgB,GAAAjO,EAAAmN,EACA/B,EAAApL,EAAAsL,EACAwC,EAAA9N,EAAAkO,EACA3E,EAAAvJ,GAAAoN,EAAAe,GACAH,EAAAhO,EAAAoO,EACAjD,EAAA2C,EAAAjd,EAAA0a,kBAAA3d,EA6CA,OAAAod,SAWA,QAAAqD,gBAAAlgB,EAAAmgB,GACA,gBAAArd,EAAA7C,GACA,MAAAuR,cAAA1O,EAAA9C,EAAAmgB,EAAAlgB,QAWA,QAAAmgB,qBAAAC,GACA,gBAAA/gB,EAAA+E,GACA,GAAA3D,EACA,IAAApB,IAAAoD,GAAA2B,IAAA3B,EACA,QAKA,IAHApD,IAAAoD,IACAhC,EAAApB,GAEA+E,IAAA3B,EAAA,CACA,GAAAhC,IAAAgC,EACA,MAAA2B,EAEA,iBAAA/E,IAAA,gBAAA+E,IACA/E,EAAAwY,aAAAxY,GACA+E,EAAAyT,aAAAzT,KAEA/E,EAAAuY,aAAAvY,GACA+E,EAAAwT,aAAAxT,IAEA3D,EAAA2f,EAAA/gB,EAAA+E,GAEA,MAAA3D,IAWA,QAAA4f,YAAAC,GACA,MAAAlE,MAAA,SAAAjU,GAKA,MAJAA,GAAA,GAAAA,EAAAxI,QAAAwG,GAAAgC,EAAA,IACArH,SAAAqH,EAAA,GAAApF,UAAAkS,gBACAnU,SAAAyO,YAAApH,EAAA,EAAAoY,uBAAAxd,UAAAkS,gBAEAmH,KAAA,SAAA1c,GACA,GAAAD,GAAAiH,IACA,OAAA4Z,GAAAnY,EAAA,SAAAnI,GACA,MAAAT,OAAAS,EAAAP,EAAAC,SAeA,QAAA8gB,eAAA7gB,EAAA8gB,GACAA,MAAAhe,EAAA,IAAAoV,aAAA4I,EAEA,IAAAC,GAAAD,EAAA9gB,MACA,MAAA+gB,EACA,MAAAA,GAAAtK,WAAAqK,EAAA9gB,GAAA8gB,CAEA,IAAAhgB,GAAA2V,WAAAqK,EAAAtK,GAAAxW,EAAA0F,WAAAob,IACA,OAAAlb,IAAAC,KAAAib,GACAxH,UAAAtT,cAAAlF,GAAA,EAAAd,GAAA6d,KAAA,IACA/c,EAAA0Y,MAAA,EAAAxZ,GAgBA,QAAAghB,sBAAAnhB,EAAAoS,EAAAnS,EAAAwb,GAIA,QAAA2B,WAQA,IAPA,GAAAxB,GAAA,GACAC,EAAA4B,UAAAtd,OACA4b,EAAA,GACAC,EAAAP,EAAAtb,OACAD,EAAAqB,MAAAya,EAAAH,GACAwB,EAAAnW,aAAAoW,IAAApW,eAAAkW,SAAAG,EAAAvd,IAEA+b,EAAAC,GACA9b,EAAA6b,GAAAN,EAAAM,EAEA,MAAAF,KACA3b,EAAA6b,KAAA0B,YAAA7B,EAEA,OAAA7b,OAAAsd,EAAAG,EAAAvd,EAAAiH,KAAAhH,GAjBA,GAAAsd,GAAApL,EAAAsL,EACAH,EAAAI,kBAAA3d,EAkBA,OAAAod,SAUA,QAAAgE,aAAA/e,GACA,gBAAAoG,EAAAC,EAAAgO,GAcA,MAbAA,IAAA,gBAAAA,IAAAqG,eAAAtU,EAAAC,EAAAgO,KACAhO,EAAAgO,EAAAzT,GAGAwF,EAAA4Y,SAAA5Y,GACAA,UAAA,EACAC,IAAAzF,GACAyF,EAAAD,EACAA,EAAA,GAEAC,EAAA2Y,SAAA3Y,IAAA,EAEAgO,MAAAzT,EAAAyF,EAAAD,EAAA,KAAA4Y,SAAA3K,IAAA,EACAD,UAAAhO,EAAAC,EAAAgO,EAAArU,IAWA,QAAAif,2BAAAV,GACA,gBAAA/gB,EAAA+E,GAKA,MAJA,gBAAA/E,IAAA,gBAAA+E,KACA/E,EAAAwhB,SAAAxhB,GACA+E,EAAAyc,SAAAzc,IAEAgc,EAAA/gB,EAAA+E,IAsBA,QAAAga,sBAAA5e,EAAAoS,EAAAmP,EAAApd,EAAAlE,EAAAwb,EAAAC,EAAAoE,EAAAC,EAAArB,GACA,GAAA8C,GAAApP,EAAAoN,EACAS,EAAAuB,EAAA9F,EAAAzY,EACAwe,EAAAD,EAAAve,EAAAyY,EACAgG,EAAAF,EAAA/F,EAAAxY,EACA0e,EAAAH,EAAAve,EAAAwY,CAEArJ,IAAAoP,EAAA/B,EAAAmC,EACAxP,KAAAoP,EAAAI,EAAAnC,GAEArN,EAAAyP,IACAzP,KAAAsL,EAAA4C,GAEA,IAAAwB,IACA9hB,EAAAoS,EAAAnS,EAAAyhB,EAAAzB,EAAA0B,EACAF,EAAA3B,EAAAC,EAAArB,GAGAzd,EAAAsgB,EAAAxhB,MAAAkD,EAAA6e,EAKA,OAJAxC,YAAAtf,IACA+hB,GAAA9gB,EAAA6gB,GAEA7gB,EAAAkD,cACAlD,EAUA,QAAA+gB,aAAAnE,GACA,GAAA7d,GAAAiiB,EAAApE,EACA,iBAAA7Q,EAAAkV,GAGA,GAFAlV,EAAAqU,SAAArU,GACAkV,EAAAtS,UAAAsS,GACA,CAGA,GAAAxiB,IAAAoF,SAAAkI,GAAA,KAAAmV,MAAA,KACAtiB,EAAAG,EAAAN,EAAA,SAAAA,EAAA,GAAAwiB,GAGA,OADAxiB,IAAAoF,SAAAjF,GAAA,KAAAsiB,MAAA,OACAziB,EAAA,SAAAA,EAAA,GAAAwiB,IAEA,MAAAliB,GAAAgN,IAsBA,QAAAoV,eAAArR,GACA,gBAAA1N,GACA,GAAAqK,GAAAC,OAAAtK,EACA,OAAAqK,IAAA2U,EACA/c,WAAAjC,GAEAqK,GAAA4U,EACA1c,WAAAvC,GAEAD,YAAAC,EAAA0N,EAAA1N,KA8BA,QAAAkf,eAAAviB,EAAAoS,EAAAnS,EAAAwb,EAAAC,EAAAoE,EAAAC,EAAArB,GACA,GAAAwB,GAAA9N,EAAAkO,CACA,KAAAJ,GAAA,kBAAAlgB,GACA,SAAAgP,IAAAC,EAEA,IAAA9O,GAAAsb,IAAAtb,OAAA,CASA,IARAA,IACAiS,KAAAqN,EAAAmC,GACAnG,EAAAC,EAAAzY,GAEA8c,MAAA9c,EAAA8c,EAAAzO,GAAA1B,UAAAmQ,GAAA,GACArB,MAAAzb,EAAAyb,EAAA9O,UAAA8O,GACAve,GAAAub,IAAAvb,OAAA,EAEAiS,EAAAwP,EAAA,CACA,GAAAhC,GAAAnE,EACAoE,EAAAnE,CAEAD,GAAAC,EAAAzY,EAEA,GAAAiC,GAAAgb,EAAAjd,EAAAoc,GAAArf,GAEA8hB,GACA9hB,EAAAoS,EAAAnS,EAAAwb,EAAAC,EAAAkE,EAAAC,EACAC,EAAAC,EAAArB,EAkBA,IAfAxZ,GACAsd,UAAAV,EAAA5c,GAEAlF,EAAA8hB,EAAA,GACA1P,EAAA0P,EAAA,GACA7hB,EAAA6hB,EAAA,GACArG,EAAAqG,EAAA,GACApG,EAAAoG,EAAA,GACApD,EAAAoD,EAAA,SAAAA,EAAA,GACA5B,EAAA,EAAAlgB,EAAAG,OACAmR,GAAAwQ,EAAA,GAAA3hB,EAAA,IAEAue,GAAAtM,GAAAoN,EAAAe,KACAnO,KAAAoN,EAAAe,IAEAnO,MAAAsL,EAGAzc,EADOmR,GAAAoN,GAAApN,GAAAmO,EACP9B,mBAAAze,EAAAoS,EAAAsM,GACOtM,GAAAqN,GAAArN,IAAAsL,EAAA+B,IAAA/D,EAAAvb,OAGP0e,oBAAA9e,MAAAkD,EAAA6e,GAFAX,qBAAAnhB,EAAAoS,EAAAnS,EAAAwb,OAJA,IAAAxa,GAAAkc,kBAAAnd,EAAAoS,EAAAnS,EAQA,IAAAM,GAAA2E,EAAAud,GAAAV,EACA,OAAAxhB,GAAAU,EAAA6gB,GAiBA,QAAA9O,aAAA1S,EAAAsE,EAAA0N,EAAAhF,EAAA8E,EAAA7E,GACA,GAAAmV,GAAAtQ,EAAAc,EACA5K,EAAAhI,EAAAH,OACAsR,EAAA7M,EAAAzE,MAEA,IAAAmI,GAAAmJ,KAAAiR,GAAAjR,EAAAnJ,GACA,QAGA,IAAAiG,GAAAhB,EAAApC,IAAA7K,EACA,IAAAiO,EACA,MAAAA,IAAA3J,CAEA,IAAAlE,GAAA,GACAO,GAAA,EACA6Q,EAAAM,EAAAuB,EAAA,GAAArI,UAAArI,CAKA,KAHAsK,EAAA5N,IAAAW,EAAAsE,KAGAlE,EAAA4H,GAAA,CACA,GAAAqa,GAAAriB,EAAAI,GACAkiB,EAAAhe,EAAAlE,EAEA,IAAA4M,EACA,GAAAuV,GAAAH,EACApV,EAAAsV,EAAAD,EAAAjiB,EAAAkE,EAAAtE,EAAAiN,GACAD,EAAAqV,EAAAC,EAAAliB,EAAAJ,EAAAsE,EAAA2I,EAEA,IAAAsV,IAAA5f,EAAA,CACA,GAAA4f,EACA,QAEA5hB,IAAA,CACA,OAGA,GAAA6Q,GACA,IAAAhQ,UAAA8C,EAAA,SAAAge,EAAAlR,GACA,MAAAI,GAAAnO,IAAA+N,IACAiR,IAAAC,IAAAtQ,EAAAqQ,EAAAC,EAAAtV,EAAA8E,EAAA7E,GADA,OAEAuE,EAAAhS,IAAA4R,KAEe,CACfzQ,GAAA,CACA,YAES,IACT0hB,IAAAC,IACAtQ,EAAAqQ,EAAAC,EAAAtV,EAAA8E,EAAA7E,GACA,CACAtM,GAAA,CACA,QAIA,MADAsM,GAAA,OAAAjN,GACAW,EAqBA,QAAAgS,YAAA5P,EAAAuB,EAAA8I,EAAA4E,EAAAhF,EAAA8E,EAAA7E,GACA,OAAAG,GACA,IAAAoV,IACA,GAAAzf,EAAA2W,YAAApV,EAAAoV,YACA3W,EAAA+W,YAAAxV,EAAAwV,WACA,QAEA/W,KAAAqW,OACA9U,IAAA8U,MAEA,KAAAqJ,IACA,QAAA1f,EAAA2W,YAAApV,EAAAoV,aACA1H,EAAA,GAAA2H,IAAA5W,GAAA,GAAA4W,IAAArV,IAKA,KAAAoe,GACA,IAAAC,GAIA,OAAA5f,IAAAuB,CAEA,KAAAse,GACA,MAAA7f,GAAA8f,MAAAve,EAAAue,MAAA9f,EAAA+f,SAAAxe,EAAAwe,OAEA,KAAAC,GAEA,MAAAhgB,OAAAuB,MAAAvB,IAAAuB,CAEA,KAAA0e,GACA,IAAAC,GAIA,MAAAlgB,IAAAuB,EAAA,EAEA,KAAAyd,GACA,GAAAmB,GAAAle,UAEA,KAAAgd,GACA,GAAAI,GAAAtQ,EAAAc,CAGA,IAFAsQ,MAAA7d,YAEAtC,EAAAkC,MAAAX,EAAAW,OAAAmd,EACA,QAGA,IAAAnU,GAAAhB,EAAApC,IAAA9H,EACA,OAAAkL,GACAA,GAAA3J,GAEAwN,GAAAuB,EACApG,EAAA5N,IAAA0D,EAAAuB,GAGAoO,YAAAwQ,EAAAngB,GAAAmgB,EAAA5e,GAAA0N,EAAAhF,EAAA8E,EAAA7E,GAEA,KAAAkW,GACA,GAAA3I,GACA,MAAAA,IAAA1a,KAAAiD,IAAAyX,GAAA1a,KAAAwE,GAGA,SAiBA,QAAA2O,cAAAlQ,EAAAuB,EAAA0N,EAAAhF,EAAA8E,EAAA7E,GACA,GAAAmV,GAAAtQ,EAAAc,EACAwQ,EAAA/W,KAAAtJ,GACAsgB,EAAAD,EAAAvjB,OACAyjB,EAAAjX,KAAA/H,GACA6M,EAAAmS,EAAAzjB,MAEA,IAAAwjB,GAAAlS,IAAAiR,EACA,QAGA,KADA,GAAAhiB,GAAAijB,EACAjjB,KAAA,CACA,GAAAyB,GAAAuhB,EAAAhjB,EACA,MAAAgiB,EAAAvgB,IAAAyC,GAAAsM,QAAAtM,EAAAzC,IACA,SAIA,GAAAoM,GAAAhB,EAAApC,IAAA9H,EACA,IAAAkL,EACA,MAAAA,IAAA3J,CAEA,IAAA3D,IAAA,CACAsM,GAAA5N,IAAA0D,EAAAuB,EAGA,KADA,GAAAif,GAAAnB,IACAhiB,EAAAijB,GAAA,CACAxhB,EAAAuhB,EAAAhjB,EACA,IAAAsL,GAAA3I,EAAAlB,GACAygB,EAAAhe,EAAAzC,EAEA,IAAAmL,EACA,GAAAuV,GAAAH,EACApV,EAAAsV,EAAA5W,EAAA7J,EAAAyC,EAAAvB,EAAAkK,GACAD,EAAAtB,EAAA4W,EAAAzgB,EAAAkB,EAAAuB,EAAA2I,EAGA,MAAAsV,IAAA5f,EACA+I,IAAA4W,GAAAtQ,EAAAtG,EAAA4W,EAAAtV,EAAA8E,EAAA7E,GACAsV,GACA,CACA5hB,GAAA,CACA,OAEA4iB,MAAA,eAAA1hB,GAEA,GAAAlB,IAAA4iB,EAAA,CACA,GAAAC,GAAAzgB,EAAAuW,YACAmK,EAAAnf,EAAAgV,WAGAkK,IAAAC,GACA,eAAA1gB,IAAA,eAAAuB,MACA,kBAAAkf,oBACA,kBAAAC,sBACA9iB,GAAA,GAIA,MADAsM,GAAA,OAAAlK,GACApC,EAUA,QAAAuN,YAAAnL,GACA,MAAAyN,gBAAAzN,EAAAsJ,KAAA4P,YAWA,QAAAzG,cAAAzS,GACA,MAAAyN,gBAAAzN,EAAAwR,OAAAmP,IAqBA,QAAA7E,aAAAnf,GAKA,IAJA,GAAAiB,GAAAjB,EAAAmjB,KAAA,GACA7iB,EAAA2jB,GAAAhjB,GACAd,EAAA2G,GAAA1G,KAAA6jB,GAAAhjB,GAAAX,EAAAH,OAAA,EAEAA,KAAA,CACA,GAAA+E,GAAA5E,EAAAH,GACA+jB,EAAAhf,EAAAlF,IACA,UAAAkkB,MAAAlkB,EACA,MAAAkF,GAAAie,KAGA,MAAAliB,GAUA,QAAA0d,WAAA3e,GACA,GAAAqD,GAAAyD,GAAA1G,KAAAqG,OAAA,eAAAA,OAAAzG,CACA,OAAAqD,GAAAc,YAcA,QAAAsR,eACA,GAAAxU,GAAAwF,OAAAjG,kBAEA,OADAS,OAAAT,SAAAoT,aAAA3S,EACAwc,UAAAtd,OAAAc,EAAAwc,UAAA,GAAAA,UAAA,IAAAxc,EAwBA,QAAAgK,YAAAxL,EAAA0C,GACA,GAAA+C,GAAAzF,EAAAmK,QACA,OAAAua,WAAAhiB,GACA+C,EAAA,gBAAA/C,GAAA,iBACA+C,EAAAzF,IAUA,QAAA8U,cAAAlR,GAIA,IAHA,GAAApC,GAAAmjB,GAAA/gB,GACAlD,EAAAc,EAAAd,OAEAA,KACAc,EAAAd,GAAA,GAAAsU,mBAAAxT,EAAAd,GAAA,GAEA,OAAAc,GAWA,QAAAojB,WAAAhhB,EAAAlB,GACA,GAAAtC,GAAAwD,EAAAlB,EACA,OAAAmiB,UAAAzkB,KAAAoD,EAUA,QAAAkO,cAAAtR,GACA,MAAA0kB,IAAAtgB,OAAApE,IAUA,QAAA0c,YAAAlZ,GAGA,MAAAmhB,IAAAvgB,OAAAZ,IAkCA,QAAAsK,QAAA9N,GACA,MAAA4kB,IAAArkB,KAAAP,GAsCA,QAAA2I,SAAAC,EAAAC,EAAAgc,GAIA,IAHA,GAAAhkB,GAAA,GACAP,EAAAukB,EAAAvkB,SAEAO,EAAAP,GAAA,CACA,GAAA+E,GAAAwf,EAAAhkB,GACA6E,EAAAL,EAAAK,IAEA,QAAAL,EAAAiE,MACA,WAAAV,GAAAlD,CAA0C,MAC1C,iBAAAmD,GAAAnD,CAAwC,MACxC,YAAAmD,EAAAI,GAAAJ,EAAAD,EAAAlD,EAA+D,MAC/D,iBAAAkD,EAAA6I,GAAA7I,EAAAC,EAAAnD,IAGA,OAAckD,QAAAC,OAYd,QAAAic,SAAAthB,EAAAqN,EAAAkU,GACAlU,EAAAC,MAAAD,EAAArN,IAAAqN,GAAAE,SAAAF,EAMA,KAJA,GAAAzP,GACAP,EAAA,GACAP,EAAAuQ,EAAAvQ,SAEAO,EAAAP,GAAA,CACA,GAAAgC,GAAA0O,MAAAH,EAAAhQ,GACA,MAAAO,EAAA,MAAAoC,GAAAuhB,EAAAvhB,EAAAlB,IACA,KAEAkB,KAAAlB,GAEA,GAAAlB,EACA,MAAAA,EAEA,IAAAd,GAAAkD,IAAAlD,OAAA,CACA,SAAAA,GAAA0kB,SAAA1kB,IAAAmV,QAAAnT,EAAAhC,KACAwG,GAAAtD,IAAAyhB,SAAAzhB,IAAA8R,YAAA9R,IAUA,QAAAoK,gBAAAnN,GACA,GAAAH,GAAAG,EAAAH,OACAc,EAAAX,EAAAsZ,YAAAzZ,EAOA,OAJAA,IAAA,gBAAAG,GAAA,IAAAwG,GAAA1G,KAAAE,EAAA,WACAW,EAAAP,MAAAJ,EAAAI,MACAO,EAAA8jB,MAAAzkB,EAAAykB,OAEA9jB,EAUA,QAAAkN,iBAAA9K,GACA,wBAAAA,GAAAuW,aAAAoL,YAAA3hB,MACAsL,WAAAwC,aAAA9N,IAiBA,QAAAiL,gBAAAjL,EAAAqK,EAAA4M,EAAAlN,GACA,GAAAmQ,GAAAla,EAAAuW,WACA,QAAAlM,GACA,IAAAqV,IACA,MAAAjJ,kBAAAzW,EAEA,KAAA2f,GACA,IAAAC,GACA,UAAA1F,IAAAla,EAEA,KAAAyf,IACA,MAAA5I,eAAA7W,EAAA+J,EAEA,KAAA6X,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,MAAA1K,iBAAA1X,EAAA+J,EAEA,KAAAiV,GACA,MAAAhI,UAAAhX,EAAA+J,EAAAkN,EAEA,KAAA+I,GACA,IAAAE,GACA,UAAAhG,GAAAla,EAEA,KAAAigB,GACA,MAAA/I,aAAAlX,EAEA,KAAAif,GACA,MAAA3H,UAAAtX,EAAA+J,EAAAkN,EAEA,KAAAmJ,GACA,MAAA7I,aAAAvX,IAYA,QAAAqiB,WAAAriB,GACA,GAAAlD,GAAAkD,IAAAlD,OAAA8C,CACA,OAAA4hB,UAAA1kB,KACAwG,GAAAtD,IAAAyhB,SAAAzhB,IAAA8R,YAAA9R,IACAH,UAAA/C,EAAAwlB,QAEA,KAUA,QAAAzV,eAAArQ,GACA,MAAA8G,IAAA9G,IAAAsV,YAAAtV,GAWA,QAAAkhB,uBAAAlhB,GACA,MAAA8G,IAAA9G,MAAA,GAAAA,EAAAM,SAAAqQ,WAAA3Q,EAAA,KAWA,QAAAyV,SAAAzV,EAAAM,GAEA,MADAA,GAAA,MAAAA,EAAA0W,EAAA1W,IACAA,IACA,gBAAAN,IAAA+lB,GAAA5f,KAAAnG,KACAA,EAAA,IAAAA,EAAA,MAAAM,EAAAN,EAaA,QAAAkd,gBAAAld,EAAAa,EAAA2C,GACA,IAAAmK,SAAAnK,GACA,QAEA,IAAA8F,SAAAzI,EACA,kBAAAyI,EACAmL,YAAAjR,IAAAiS,QAAA5U,EAAA2C,EAAAlD,QACA,UAAAgJ,GAAAzI,IAAA2C,IAEA6I,GAAA7I,EAAA3C,GAAAb,IAEA,EAWA,QAAA8Q,OAAA9Q,EAAAwD,GACA,GAAAsD,GAAA9G,GACA,QAEA,IAAAsJ,SAAAtJ,EACA,iBAAAsJ,GAAA,UAAAA,GAAA,WAAAA,GACA,MAAAtJ,GAAA6P,SAAA7P,IACA,EAEAgmB,GAAA7f,KAAAnG,KAAAimB,GAAA9f,KAAAnG,IACA,MAAAwD,GAAAxD,IAAAoE,QAAAZ,GAUA,QAAA8gB,WAAAtkB,GACA,GAAAsJ,SAAAtJ,EACA,iBAAAsJ,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAAtJ,EACA,OAAAA,EAWA,QAAAyf,YAAAtf,GACA,GAAAof,GAAAD,YAAAnf,GACA4E,EAAA6B,OAAA2Y,EAEA,sBAAAxa,MAAAwa,IAAAxY,aAAA4X,WACA,QAEA,IAAAxe,IAAA4E,EACA,QAEA,IAAAM,GAAAma,GAAAza,EACA,SAAAM,GAAAlF,IAAAkF,EAAA,GAUA,QAAA8f,aAAAnlB,GACA,GAAA0d,GAAA1d,KAAA+Z,YACAhL,EAAA,kBAAA2O,MAAAiB,WAAArS,EAEA,OAAAtM,KAAA+O,EAWA,QAAA6F,oBAAA5U,GACA,MAAAA,SAAA2N,SAAA3N,GAYA,QAAA2U,yBAAArS,EAAA8J,GACA,gBAAA5I,GACA,aAAAA,GACA,EAEAA,EAAAlB,KAAA8J,IACAA,IAAAhJ,GAAAd,IAAA8B,QAAAZ,KAoBA,QAAAmf,WAAAtd,EAAAuH,GACA,GAAA2F,GAAAlN,EAAA,GACA6gB,EAAAtZ,EAAA,GACAuZ,EAAA5T,EAAA2T,EACA1W,GAAAqO,EAAA4C,EAAAf,GAAAyG,EAEAC,EACAF,GAAAxG,GAAAnN,GAAAoN,GACAuG,GAAAxG,GAAAnN,GAAAsN,GAAAxa,EAAA,GAAA/E,QAAAsM,EAAA,IACAsZ,IAAAxG,EAAAG,IAAAjT,EAAA,GAAAtM,QAAAsM,EAAA,IAAA2F,GAAAoN,CAGA,KAAAnQ,IAAA4W,EACA,MAAA/gB,EAGA6gB,GAAArI,IACAxY,EAAA,GAAAuH,EAAA,GAEAuZ,GAAA5T,EAAAsL,EAAA,EAAAmE,EAGA,IAAAhiB,GAAA4M,EAAA,EACA,IAAA5M,EAAA,CACA,GAAA4b,GAAAvW,EAAA,EACAA,GAAA,GAAAuW,EAAAD,YAAAC,EAAA5b,EAAA4M,EAAA,IAAA5M,EACAqF,EAAA,GAAAuW,EAAAhW,eAAAP,EAAA,GAAAQ,GAAA+G,EAAA,GA0BA,MAvBA5M,GAAA4M,EAAA,GACA5M,IACA4b,EAAAvW,EAAA,GACAA,EAAA,GAAAuW,EAAAU,iBAAAV,EAAA5b,EAAA4M,EAAA,IAAA5M,EACAqF,EAAA,GAAAuW,EAAAhW,eAAAP,EAAA,GAAAQ,GAAA+G,EAAA,IAGA5M,EAAA4M,EAAA,GACA5M,IACAqF,EAAA,GAAArF,GAGAkmB,EAAAxG,IACAra,EAAA,SAAAA,EAAA,GAAAuH,EAAA,GAAA3D,GAAA5D,EAAA,GAAAuH,EAAA,KAGA,MAAAvH,EAAA,KACAA,EAAA,GAAAuH,EAAA,IAGAvH,EAAA,GAAAuH,EAAA,GACAvH,EAAA,GAAA8gB,EAEA9gB,EAgBA,QAAAghB,eAAAla,EAAAC,EAAA9J,EAAAkB,EAAAoJ,EAAAc,GAIA,MAHAC,UAAAxB,IAAAwB,SAAAvB,IACA0I,UAAA3I,EAAAC,EAAAhJ,EAAAijB,cAAA3Y,EAAA5N,IAAAsM,EAAAD,IAEAA,EAWA,QAAAiG,QAAA5O,EAAAqN,GACA,UAAAA,EAAAvQ,OAAAkD,EAAAoN,QAAApN,EAAA2T,UAAAtG,EAAA,OAaA,QAAAyP,SAAA7f,EAAA8V,GAKA,IAJA,GAAA9N,GAAAhI,EAAAH,OACAA,EAAA2I,GAAAsN,EAAAjW,OAAAmI,GACA6d,EAAApe,UAAAzH,GAEAH,KAAA,CACA,GAAAO,GAAA0V,EAAAjW,EACAG,GAAAH,GAAAmV,QAAA5U,EAAA4H,GAAA6d,EAAAzlB,GAAAuC,EAEA,MAAA3C,GA2DA,QAAAuQ,OAAAhR,GACA,mBAAAA,IAAA6P,SAAA7P,GACA,MAAAA,EAEA,IAAAoB,GAAApB,EAAA,EACA,YAAAoB,GAAA,EAAApB,IAAA0Y,EAAA,KAAAtX,EAUA,QAAAmlB,UAAApmB;AACA,SAAAA,EAAA,CACA,IACA,MAAAqmB,IAAAjmB,KAAAJ,GACS,MAAA+E,IACT,IACA,MAAA/E,GAAA,GACS,MAAA+E,KAET,SAUA,QAAAgC,cAAAqW,GACA,GAAAA,YAAAxW,aACA,MAAAwW,GAAAnV,OAEA,IAAAhH,GAAA,GAAA4F,eAAAuW,EAAAjW,YAAAiW,EAAA/V,UAIA,OAHApG,GAAAmG,YAAAW,UAAAqV,EAAAhW,aACAnG,EAAAqG,UAAA8V,EAAA9V,UACArG,EAAAsG,WAAA6V,EAAA7V,WACAtG,EA0BA,QAAAqlB,OAAAhmB,EAAAiF,EAAAuX,GAEAvX,GADAuX,EAAAC,eAAAzc,EAAAiF,EAAAuX,GAAAvX,IAAAtC,GACA,EAEAqO,GAAA1B,UAAArK,GAAA,EAEA,IAAApF,GAAAG,IAAAH,OAAA,CACA,KAAAA,GAAA,EAAAoF,EACA,QAMA,KAJA,GAAA7E,GAAA,EACAM,EAAA,EACAC,EAAAM,MAAAoV,GAAAxW,EAAAoF,IAEApF,EAAAO,GACAO,EAAAD,KAAAgW,UAAA1W,EAAAI,KAAA6E,EAEA,OAAAtE,GAkBA,QAAAslB,SAAAjmB,GAMA,IALA,GAAAI,GAAA,GACAP,EAAAG,IAAAH,OAAA,EACAa,EAAA,EACAC,OAEAP,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAb,KACAoB,EAAAD,KAAAnB,GAGA,MAAAoB,GAyBA,QAAAulB,UAMA,IALA,GAAArmB,GAAAsd,UAAAtd,OACAD,EAAAqB,MAAApB,IAAA,KACAG,EAAAmd,UAAA,GACA/c,EAAAP,EAEAO,KACAR,EAAAQ,EAAA,GAAA+c,UAAA/c,EAEA,OAAAP,GACAqB,UAAAmF,GAAArG,GAAAyH,UAAAzH,OAAAyP,YAAA7P,EAAA,OAuHA,QAAAumB,MAAAnmB,EAAA6C,EAAA2Z,GACA,GAAA3c,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAgD,EAAA2Z,GAAA3Z,IAAAF,EAAA,EAAA2M,UAAAzM,GACA6T,UAAA1W,EAAA,EAAA6C,EAAA,EAAAA,EAAAhD,OA4BA,QAAAumB,WAAApmB,EAAA6C,EAAA2Z,GACA,GAAA3c,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAgD,EAAA2Z,GAAA3Z,IAAAF,EAAA,EAAA2M,UAAAzM,GACAA,EAAAhD,EAAAgD,EACA6T,UAAA1W,EAAA,IAAA6C,EAAA,EAAAA,OAuCA,QAAAwjB,gBAAArmB,EAAAQ,GACA,MAAAR,MAAAH,OACA2Y,UAAAxY,EAAAmV,YAAA3U,EAAA,aAwCA,QAAA8lB,WAAAtmB,EAAAQ,GACA,MAAAR,MAAAH,OACA2Y,UAAAxY,EAAAmV,YAAA3U,EAAA,UAiCA,QAAA+lB,MAAAvmB,EAAAT,EAAA4I,EAAAC,GACA,GAAAvI,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAsI,GAAA,gBAAAA,IAAAsU,eAAAzc,EAAAT,EAAA4I,KACAA,EAAA,EACAC,EAAAvI,GAEAwP,SAAArP,EAAAT,EAAA4I,EAAAC,OAsCA,QAAAoe,WAAAxmB,EAAAQ,GACA,MAAAR,MAAAH,OACAiC,cAAA9B,EAAAmV,YAAA3U,EAAA,IACA,GAsCA,QAAAimB,eAAAzmB,EAAAQ,GACA,MAAAR,MAAAH,OACAiC,cAAA9B,EAAAmV,YAAA3U,EAAA,OACA,GAiBA,QAAAkmB,SAAA1mB,GACA,GAAAH,GAAAG,IAAAH,OAAA,CACA,OAAAA,GAAA4P,YAAAzP,EAAA,MAiBA,QAAA2mB,aAAA3mB,GACA,GAAAH,GAAAG,IAAAH,OAAA,CACA,OAAAA,GAAA4P,YAAAzP,EAAAiY,MAuBA,QAAA2O,cAAA5mB,EAAA0P,GACA,GAAA7P,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGA6P,MAAA/M,EAAA,EAAA2M,UAAAI,GACAD,YAAAzP,EAAA0P,OAkBA,QAAAmX,WAAAC,GAKA,IAJA,GAAA1mB,GAAA,GACAP,EAAAinB,IAAAjnB,OAAA,EACAc,OAEAP,EAAAP,GAAA,CACA,GAAAT,GAAA0nB,EAAA1mB,EACAO,GAAAvB,EAAA,IAAAA,EAAA,GAEA,MAAAuB,GAqBA,QAAAomB,MAAA/mB,GACA,MAAAA,MAAAH,OAAAG,EAAA,GAAA2C,EA0BA,QAAAiT,SAAA5V,EAAAT,EAAAyC,GACA,GAAAnC,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAmC,EAAAsN,UAAAtN,GACA,EAAAA,IACAA,EAAAgP,GAAAnR,EAAAmC,EAAA,IAEAnB,YAAAb,EAAAT,EAAAyC,IANA,GAuBA,QAAAglB,SAAAhnB,GACA,MAAAomB,WAAApmB,EAAA,GAkHA,QAAA0d,MAAA1d,EAAAinB,GACA,MAAAjnB,GAAAknB,GAAApnB,KAAAE,EAAAinB,GAAA,GAiBA,QAAArV,MAAA5R,GACA,GAAAH,GAAAG,IAAAH,OAAA,CACA,OAAAA,GAAAG,EAAAH,EAAA,GAAA8C,EAwBA,QAAAwkB,aAAAnnB,EAAAT,EAAAyC,GACA,GAAAnC,GAAAG,IAAAH,OAAA,CACA,KAAAA,EACA,QAEA,IAAAO,GAAAP,CASA,IARAmC,IAAAW,IACAvC,EAAAkP,UAAAtN,GACA5B,GACA,EAAAA,EACA4Q,GAAAnR,EAAAO,EAAA,GACAoI,GAAApI,EAAAP,EAAA,IACA,GAEAN,MACA,MAAA0C,YAAAjC,EAAAI,GAAA,EAEA,MAAAA,KACA,GAAAJ,EAAAI,KAAAb,EACA,MAAAa,EAGA,UAwBA,QAAAgnB,KAAApnB,EAAA6C,GACA,MAAA7C,MAAAH,OAAAkV,QAAA/U,EAAAsP,UAAAzM,IAAAF,EAgDA,QAAA0kB,SAAArnB,EAAAmB,GACA,MAAAnB,MAAAH,QAAAsB,KAAAtB,OACA8V,YAAA3V,EAAAmB,GACAnB,EA2BA,QAAAsnB,WAAAtnB,EAAAmB,EAAAjB,GACA,MAAAF,MAAAH,QAAAsB,KAAAtB,OACA8V,YAAA3V,EAAAmB,EAAAgU,YAAAjV,IACAF,EA0BA,QAAAunB,aAAAvnB,EAAAmB,EAAAJ,GACA,MAAAf,MAAAH,QAAAsB,KAAAtB,OACA8V,YAAA3V,EAAAmB,EAAAwB,EAAA5B,GACAf,EAqEA,QAAAwnB,QAAAxnB,EAAAQ,GACA,GAAAG,KACA,KAAAX,MAAAH,OACA,MAAAc,EAEA,IAAAP,GAAA,GACA0V,KACAjW,EAAAG,EAAAH,MAGA,KADAW,EAAA2U,YAAA3U,EAAA,KACAJ,EAAAP,GAAA,CACA,GAAAN,GAAAS,EAAAI,EACAI,GAAAjB,EAAAa,EAAAJ,KACAW,EAAAoE,KAAAxF,GACAuW,EAAA/Q,KAAA3E,IAIA,MADAyV,YAAA7V,EAAA8V,GACAnV,EA0BA,QAAAie,SAAA5e,GACA,MAAAA,GAAAynB,GAAA3nB,KAAAE,KAmBA,QAAAqZ,OAAArZ,EAAAmI,EAAAC,GACA,GAAAvI,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAuI,GAAA,gBAAAA,IAAAqU,eAAAzc,EAAAmI,EAAAC,IACAD,EAAA,EACAC,EAAAvI,IAGAsI,EAAA,MAAAA,EAAA,EAAAmH,UAAAnH,GACAC,MAAAzF,EAAA9C,EAAAyP,UAAAlH,IAEAsO,UAAA1W,EAAAmI,EAAAC,OAuBA,QAAAsf,aAAA1nB,EAAAT,GACA,MAAAqX,iBAAA5W,EAAAT,GA6BA,QAAAooB,eAAA3nB,EAAAT,EAAAW,GACA,MAAAgX,mBAAAlX,EAAAT,EAAA4V,YAAAjV,IAmBA,QAAA0nB,eAAA5nB,EAAAT,GACA,GAAAM,GAAAG,IAAAH,OAAA,CACA,IAAAA,EAAA,CACA,GAAAO,GAAAwW,gBAAA5W,EAAAT,EACA,IAAAM,EAAAO,GAAAwL,GAAA5L,EAAAI,GAAAb,GACA,MAAAa,GAGA,SAqBA,QAAAynB,iBAAA7nB,EAAAT,GACA,MAAAqX,iBAAA5W,EAAAT,GAAA,GAwBA,QAAAuoB,mBAAA9nB,EAAAT,EAAAW,GACA,MAAAgX,mBAAAlX,EAAAT,EAAA4V,YAAAjV,IAAA,GAmBA,QAAA6nB,mBAAA/nB,EAAAT,GACA,GAAAM,GAAAG,IAAAH,OAAA,CACA,IAAAA,EAAA,CACA,GAAAO,GAAAwW,gBAAA5W,EAAAT,GAAA,IACA,IAAAqM,GAAA5L,EAAAI,GAAAb,GACA,MAAAa,GAGA,SAkBA,QAAA4nB,YAAAhoB,GACA,MAAAA,MAAAH,OACAgY,eAAA7X,MAoBA,QAAAioB,cAAAjoB,EAAAE,GACA,MAAAF,MAAAH,OACAgY,eAAA7X,EAAAmV,YAAAjV,OAkBA,QAAAgoB,MAAAloB,GACA,MAAAmmB,MAAAnmB,EAAA,GA4BA,QAAAmoB,MAAAnoB,EAAA6C,EAAA2Z,GACA,MAAAxc,MAAAH,QAGAgD,EAAA2Z,GAAA3Z,IAAAF,EAAA,EAAA2M,UAAAzM,GACA6T,UAAA1W,EAAA,IAAA6C,EAAA,EAAAA,OA4BA,QAAAulB,WAAApoB,EAAA6C,EAAA2Z,GACA,GAAA3c,GAAAG,IAAAH,OAAA,CACA,OAAAA,IAGAgD,EAAA2Z,GAAA3Z,IAAAF,EAAA,EAAA2M,UAAAzM,GACAA,EAAAhD,EAAAgD,EACA6T,UAAA1W,EAAA,EAAA6C,EAAA,EAAAA,EAAAhD,OAuCA,QAAAwoB,gBAAAroB,EAAAQ,GACA,MAAAR,MAAAH,OACA2Y,UAAAxY,EAAAmV,YAAA3U,EAAA,aAwCA,QAAA8nB,WAAAtoB,EAAAQ,GACA,MAAAR,MAAAH,OACA2Y,UAAAxY,EAAAmV,YAAA3U,EAAA,OAoGA,QAAA+nB,MAAAvoB,GACA,MAAAA,MAAAH,OACAqY,SAAAlY,MA0BA,QAAAwoB,QAAAxoB,EAAAE,GACA,MAAAF,MAAAH,OACAqY,SAAAlY,EAAAmV,YAAAjV,OAuBA,QAAAuoB,UAAAzoB,EAAAe,GACA,MAAAf,MAAAH,OACAqY,SAAAlY,EAAA2C,EAAA5B,MAuBA,QAAA2nB,OAAA1oB,GACA,IAAAA,MAAAH,OACA,QAEA,IAAAA,GAAA,CAOA,OANAG,GAAAS,YAAAT,EAAA,SAAA2oB,GACA,MAAAhU,mBAAAgU,IACA9oB,EAAAmR,GAAA2X,EAAA9oB,WACA,GAFA,SAKA+C,UAAA/C,EAAA,SAAAO,GACA,MAAAY,UAAAhB,EAAAyV,aAAArV,MAyBA,QAAAwoB,WAAA5oB,EAAAE,GACA,IAAAF,MAAAH,OACA,QAEA,IAAAc,GAAA+nB,MAAA1oB,EACA,cAAAE,EACAS,EAEAK,SAAAL,EAAA,SAAAgoB,GACA,MAAAlpB,OAAAS,EAAAyC,EAAAgmB,KA+IA,QAAAE,WAAA7lB,EAAA7B,GACA,MAAA0X,eAAA7V,MAAA7B,MAAA4K,aAkBA,QAAA+c,eAAA9lB,EAAA7B,GACA,MAAA0X,eAAA7V,MAAA7B,MAAAqV,SA6DA,QAAAuS,OAAAxpB,GACA,GAAAoB,GAAAwF,OAAA5G,EAEA,OADAoB,GAAAoG,WAAA,EACApG,EA0BA,QAAAqoB,KAAAzpB,EAAA0pB,GAEA,MADAA,GAAA1pB,GACAA,EA0BA,QAAAof,MAAApf,EAAA0pB,GACA,MAAAA,GAAA1pB,GA0EA,QAAA2pB,gBACA,MAAAH,OAAAniB,MA6BA,QAAAuiB,iBACA,UAAA5iB,eAAAK,KAAArH,QAAAqH,KAAAG,WAyBA,QAAAqiB,eACAxiB,KAAAK,aAAAtE,IACAiE,KAAAK,WAAAoiB,QAAAziB,KAAArH,SAEA,IAAAuF,GAAA8B,KAAAI,WAAAJ,KAAAK,WAAApH,OACAN,EAAAuF,EAAAnC,EAAAiE,KAAAK,WAAAL,KAAAI,YAEA,QAAclC,OAAAvF,SAqBd,QAAA+pB,qBACA,MAAA1iB,MA2BA,QAAA2iB,cAAAhqB,GAIA,IAHA,GAAAoB,GACAgR,EAAA/K,KAEA+K,YAAAjL,aAAA,CACA,GAAAiB,GAAAlB,aAAAkL,EACAhK,GAAAX,UAAA,EACAW,EAAAV,WAAAtE,EACAhC,EACAoV,EAAAlP,YAAAc,EAEAhH,EAAAgH,CAEA,IAAAoO,GAAApO,CACAgK,KAAA9K,YAGA,MADAkP,GAAAlP,YAAAtH,EACAoB,EAuBA,QAAA6oB,kBACA,GAAAjqB,GAAAqH,KAAAC,WACA,IAAAtH,YAAA+G,aAAA,CACA,GAAAmjB,GAAAlqB,CAUA,OATAqH,MAAAE,YAAAjH,SACA4pB,EAAA,GAAAnjB,aAAAM,OAEA6iB,IAAA7K,UACA6K,EAAA3iB,YAAA/B,MACArF,KAAAif,KACA/e,MAAAgf,SACAjf,QAAAgD,IAEA,GAAA4D,eAAAkjB,EAAA7iB,KAAAG,WAEA,MAAAH,MAAA+X,KAAAC,SAiBA,QAAA8K,gBACA,MAAAhhB,kBAAA9B,KAAAC,YAAAD,KAAAE,aAoEA,QAAA6iB,OAAAjoB,EAAAlB,EAAAgc,GACA,GAAA9c,GAAA2G,GAAA3E,GAAAnB,WAAA2O,SAIA,OAHAsN,IAAAC,eAAA/a,EAAAlB,EAAAgc,KACAhc,EAAAmC,GAEAjD,EAAAgC,EAAAyT,YAAA3U,EAAA,IAuCA,QAAAopB,QAAAloB,EAAAlB,GACA,GAAAd,GAAA2G,GAAA3E,GAAAjB,YAAA+O,UACA,OAAA9P,GAAAgC,EAAAyT,YAAA3U,EAAA,IAuCA,QAAAqpB,MAAAnoB,EAAAlB,GAEA,GADAA,EAAA2U,YAAA3U,EAAA,GACA6F,GAAA3E,GAAA,CACA,GAAAtB,GAAA0B,cAAAJ,EAAAlB,EACA,OAAAJ,GAAA,GAAAsB,EAAAtB,GAAAuC,EAEA,MAAAlB,UAAAC,EAAAlB,EAAAyL,IAsBA,QAAA6d,UAAApoB,EAAAlB,GAEA,GADAA,EAAA2U,YAAA3U,EAAA,GACA6F,GAAA3E,GAAA,CACA,GAAAtB,GAAA0B,cAAAJ,EAAAlB,GAAA,EACA,OAAAJ,GAAA,GAAAsB,EAAAtB,GAAAuC,EAEA,MAAAlB,UAAAC,EAAAlB,EAAAupB,IAyBA,QAAAC,SAAAtoB,EAAAxB,GACA,MAAAuP,aAAAtQ,IAAAuC,EAAAxB,GAAA,GAwBA,QAAA+pB,aAAAvoB,EAAAxB,GACA,MAAAuP,aAAAtQ,IAAAuC,EAAAxB,GAAA+X,GAyBA,QAAAiS,cAAAxoB,EAAAxB,EAAAwP,GAEA,MADAA,OAAA/M,EAAA,EAAA2M,UAAAI,GACAD,YAAAtQ,IAAAuC,EAAAxB,GAAAwP,GAiCA,QAAAxK,SAAAxD,EAAAxB,GACA,GAAAR,GAAA2G,GAAA3E,GAAArB,UAAA4L,EACA,OAAAvM,GAAAgC,EAAAyT,YAAAjV,EAAA,IAuBA,QAAAiqB,cAAAzoB,EAAAxB,GACA,GAAAR,GAAA2G,GAAA3E,GAAApB,eAAAypB,EACA,OAAArqB,GAAAgC,EAAAyT,YAAAjV,EAAA,IAiEA,QAAA4O,UAAApN,EAAAnC,EAAAyC,EAAAwa,GACA9a,EAAAsS,YAAAtS,KAAAP,OAAAO,GACAM,MAAAwa,EAAAlN,UAAAtN,GAAA,CAEA,IAAAnC,GAAA6B,EAAA7B,MAIA,OAHA,GAAAmC,IACAA,EAAAgP,GAAAnR,EAAAmC,EAAA,IAEAwiB,SAAA9iB,GACA7B,GAAAmC,GAAAN,EAAAkU,QAAArW,EAAAyC,GAAA,KACAnC,GAAAgB,YAAAa,EAAAnC,EAAAyC,GAAA,GAmHA,QAAA7C,KAAAuC,EAAAxB,GACA,GAAAR,GAAA2G,GAAA3E,GAAAV,SAAA+S,OACA,OAAArU,GAAAgC,EAAAyT,YAAAjV,EAAA,IAgCA,QAAAkqB,SAAA1oB,EAAA2G,EAAA6M,EAAAsH,GACA,aAAA9a,MAGA2E,GAAAgC,KACAA,EAAA,MAAAA,UAEA6M,EAAAsH,EAAA7Z,EAAAuS,EACA7O,GAAA6O,KACAA,EAAA,MAAAA,UAEAD,YAAAvT,EAAA2G,EAAA6M,IAiFA,QAAAmV,QAAA3oB,EAAAxB,EAAAC,GACA,GAAAT,GAAA2G,GAAA3E,GAAAL,YAAAiB,WACAhB,EAAA6b,UAAAtd,OAAA,CAEA,OAAAH,GAAAgC,EAAAyT,YAAAjV,EAAA,GAAAC,EAAAmB,EAAA2K,IAyBA,QAAAqe,aAAA5oB,EAAAxB,EAAAC,GACA,GAAAT,GAAA2G,GAAA3E,GAAAH,iBAAAe,WACAhB,EAAA6b,UAAAtd,OAAA,CAEA,OAAAH,GAAAgC,EAAAyT,YAAAjV,EAAA,GAAAC,EAAAmB,EAAAyoB,IAsCA,QAAAQ,QAAA7oB,EAAAlB,GACA,GAAAd,GAAA2G,GAAA3E,GAAAjB,YAAA+O,UAEA,OADAhP,GAAA2U,YAAA3U,EAAA,GACAd,EAAAgC,EAAA,SAAAnC,EAAAa,EAAAsB,GACA,OAAAlB,EAAAjB,EAAAa,EAAAsB,KAkBA,QAAA8oB,QAAA9oB,GACA,GAAA1B,GAAAgU,YAAAtS,KAAAP,OAAAO,GACA7B,EAAAG,EAAAH,MAEA,OAAAA,GAAA,EAAAG,EAAAgW,WAAA,EAAAnW,EAAA,IAAA8C,EAuBA,QAAA8nB,YAAA/oB,EAAAmB,EAAA2Z,GACA,GAAApc,GAAA,GACAO,EAAA0oB,QAAA3nB,GACA7B,EAAAc,EAAAd,OACA+F,EAAA/F,EAAA,CAOA,KAJAgD,GADA2Z,EAAAC,eAAA/a,EAAAmB,EAAA2Z,GAAA3Z,IAAAF,GACA,EAEA8J,UAAA6C,UAAAzM,GAAA,EAAAhD,KAEAO,EAAAyC,GAAA,CACA,GAAA6nB,GAAA1U,WAAA5V,EAAAwF,GACArG,EAAAoB,EAAA+pB,EAEA/pB,GAAA+pB,GAAA/pB,EAAAP,GACAO,EAAAP,GAAAb,EAGA,MADAoB,GAAAd,OAAAgD,EACAlC,EAkBA,QAAAgqB,SAAAjpB,GACA,MAAA+oB,YAAA/oB,EAAA4F,GAwBA,QAAArC,MAAAvD,GACA,SAAAA,EACA,QAEA,IAAAsS,YAAAtS,GAAA,CACA,GAAAf,GAAAe,EAAA7B,MACA,OAAAc,IAAA6jB,SAAA9iB,GAAA6D,WAAA7D,GAAAf,EAEA,GAAAyF,aAAA1E,GAAA,CACA,GAAA0L,GAAAC,OAAA3L,EACA,IAAA0L,GAAA2U,GAAA3U,GAAA4U,EACA,MAAAtgB,GAAAuD,KAGA,MAAAoH,MAAA3K,GAAA7B,OAwCA,QAAA+qB,MAAAlpB,EAAAlB,EAAAgc,GACA,GAAA9c,GAAA2G,GAAA3E,GAAAF,UAAAmV,QAIA,OAHA6F,IAAAC,eAAA/a,EAAAlB,EAAAgc,KACAhc,EAAAmC,GAEAjD,EAAAgC,EAAAyT,YAAA3U,EAAA,IAqGA,QAAAqqB,OAAAhoB,EAAAnD,GACA,qBAAAA,GACA,SAAAgP,IAAAC,EAGA,OADA9L,GAAAyM,UAAAzM,GACA,WACA,QAAAA,EAAA,EACAnD,EAAAD,MAAAmH,KAAAuW,WADA,QAuBA,QAAAsC,KAAA/f,EAAAmD,EAAA2Z,GAGA,MAFA3Z,GAAA2Z,EAAA7Z,EAAAE,EACAA,EAAAnD,GAAA,MAAAmD,EAAAnD,EAAAG,OAAAgD,EACAof,cAAAviB,EAAAuf,EAAAtc,QAAAE,GAoBA,QAAAioB,QAAAjoB,EAAAnD,GACA,GAAAiB,EACA,sBAAAjB,GACA,SAAAgP,IAAAC,EAGA,OADA9L,GAAAyM,UAAAzM,GACA,WAOA,QANAA,EAAA,IACAlC,EAAAjB,EAAAD,MAAAmH,KAAAuW,YAEA,GAAAta,IACAnD,EAAAiD,GAEAhC,GA+IA,QAAAoqB,OAAArrB,EAAA0e,EAAA5B,GACA4B,EAAA5B,EAAA7Z,EAAAyb,CACA,IAAAzd,GAAAshB,cAAAviB,EAAAwf,EAAAvc,UAAAyb,EAEA,OADAzd,GAAAkD,YAAAknB,MAAAlnB,YACAlD,EAyCA,QAAAqqB,YAAAtrB,EAAA0e,EAAA5B,GACA4B,EAAA5B,EAAA7Z,EAAAyb,CACA,IAAAzd,GAAAshB,cAAAviB,EAAAugB,EAAAtd,UAAAyb,EAEA,OADAzd,GAAAkD,YAAAmnB,WAAAnnB,YACAlD,EAqDA,QAAAsqB,UAAAvrB,EAAA+O,EAAAyc,GAuBA,QAAAC,YAAAC,GACA,GAAAxrB,GAAAyrB,EACA1rB,EAAA2rB,CAKA,OAHAD,GAAAC,EAAA3oB,EACA4oB,EAAAH,EACAzqB,EAAAjB,EAAAD,MAAAE,EAAAC,GAIA,QAAA4rB,aAAAJ,GAMA,MAJAG,GAAAH,EAEAK,EAAA7c,GAAA8c,aAAAjd,GAEAkd,EAAAR,WAAAC,GAAAzqB,EAGA,QAAAirB,eAAAR,GACA,GAAAS,GAAAT,EAAAU,EACAC,EAAAX,EAAAG,EACA5qB,EAAA8N,EAAAod,CAEA,OAAAG,GAAAxjB,GAAA7H,EAAAsrB,EAAAF,GAAAprB,EAGA,QAAAurB,cAAAd,GACA,GAAAS,GAAAT,EAAAU,EACAC,EAAAX,EAAAG,CAKA,QAAAO,GAAAD,GAAApd,GACA,EAAAod,GAAAG,GAAAD,GAAAE,EAGA,QAAAP,gBACA,GAAAN,GAAAe,IACA,OAAAD,cAAAd,GACAgB,aAAAhB,QAGAK,EAAA7c,GAAA8c,aAAAE,cAAAR,KAGA,QAAAgB,cAAAhB,GAMA,MALAiB,IAAAZ,GACAA,EAAA9oB,EAIA8a,GAAA4N,EACAF,WAAAC,IAEAC,EAAAC,EAAA3oB,EACAhC,GAGA,QAAA2rB,UACAb,IAAA9oB,GACA0pB,GAAAZ,GAEAK,EAAAP,EAAA,EACAF,EAAAC,EAAAG,EAAA9oB,EAGA,QAAA4pB,SACA,MAAAd,KAAA9oB,EAAAhC,EAAAyrB,aAAAD,MAGA,QAAAK,aACA,GAAApB,GAAAe,KACAM,EAAAP,aAAAd,EAMA,IAJAC,EAAAlO,UACAmO,EAAA1kB,KACAklB,EAAAV,EAEAqB,EAAA,CACA,GAAAhB,IAAA9oB,EACA,MAAA6oB,aAAAM,EAEA,IAAAE,EAIA,MAFAK,IAAAZ,GACAA,EAAA7c,GAAA8c,aAAAjd,GACA0c,WAAAW,GAMA,MAHAL,KAAA9oB,IACA8oB,EAAA7c,GAAA8c,aAAAjd,IAEA9N,EApHA,GAAA0qB,GACAC,EACAW,EACAtrB,EACA8qB,EACAK,EAAA,EACAP,EAAA,EACAI,GAAA,EACAK,GAAA,EACAvO,GAAA,CAEA,sBAAA/d,GACA,SAAAgP,IAAAC,EA4GA,OA1GAF,GAAAsS,SAAAtS,IAAA,EACAvB,SAAAge,KACAS,IAAAT,EAAAS,QACAK,EAAA,WAAAd,GACAe,EAAAD,EAAAhb,GAAA+P,SAAAmK,EAAAe,UAAA,EAAAxd,GAAAwd,EACAxO,EAAA,YAAAyN,OAAAzN,YAmGA+O,UAAAF,cACAE,UAAAD,YACAC,UAkEA,QAAAE,MAAAhtB,GACA,MAAAuiB,eAAAviB,EAAAwgB,GA+CA,QAAAyM,SAAAjtB,EAAAktB,GACA,qBAAAltB,IAAAktB,GAAA,kBAAAA,GACA,SAAAle,IAAAC,EAEA,IAAAke,GAAA,WACA,GAAAjtB,GAAAud,UACAtb,EAAA+qB,IAAAntB,MAAAmH,KAAAhH,KAAA,GACAwD,EAAAypB,EAAAzpB,KAEA,IAAAA,EAAAC,IAAAxB,GACA,MAAAuB,GAAAyH,IAAAhJ,EAEA,IAAAlB,GAAAjB,EAAAD,MAAAmH,KAAAhH,EAEA,OADAitB,GAAAzpB,QAAA/D,IAAAwC,EAAAlB,GACAA,EAGA,OADAksB,GAAAzpB,MAAA,IAAAupB,QAAAG,OAAAxiB,UACAuiB,EA0BA,QAAAE,QAAAvsB,GACA,qBAAAA,GACA,SAAAkO,IAAAC,EAEA,mBACA,OAAAnO,EAAAf,MAAAmH,KAAAuW,YAsBA,QAAA6P,MAAAttB,GACA,MAAAorB,QAAA,EAAAprB,GAkLA,QAAA4c,MAAA5c,EAAAyI,GACA,qBAAAzI,GACA,SAAAgP,IAAAC,EAGA,OADAxG,GAAA6I,GAAA7I,IAAAxF,EAAAjD,EAAAG,OAAA,EAAAyP,UAAAnH,GAAA,GACA,WAMA,IALA,GAAAvI,GAAAud,UACA/c,EAAA,GACAP,EAAAmR,GAAApR,EAAAC,OAAAsI,EAAA,GACAnI,EAAAiB,MAAApB,KAEAO,EAAAP,GACAG,EAAAI,GAAAR,EAAAuI,EAAA/H,EAEA,QAAA+H,GACA,aAAAzI,GAAAI,KAAA8G,KAAA5G,EACA,cAAAN,GAAAI,KAAA8G,KAAAhH,EAAA,GAAAI,EACA,cAAAN,GAAAI,KAAA8G,KAAAhH,EAAA,GAAAA,EAAA,GAAAI,GAEA,GAAAitB,GAAAhsB,MAAAkH,EAAA,EAEA,KADA/H,EAAA,KACAA,EAAA+H,GACA8kB,EAAA7sB,GAAAR,EAAAQ,EAGA,OADA6sB,GAAA9kB,GAAAnI,EACAP,MAAAC,EAAAkH,KAAAqmB,IAsCA,QAAAC,QAAAxtB,EAAAyI,GACA,qBAAAzI,GACA,SAAAgP,IAAAC,EAGA,OADAxG,OAAAxF,EAAA,EAAAqO,GAAA1B,UAAAnH,GAAA,GACAmU,KAAA,SAAA1c,GACA,GAAAI,GAAAJ,EAAAuI,GACA8kB,EAAA9T,UAAAvZ,EAAA,EAAAuI,EAKA,OAHAnI,IACAkB,UAAA+rB,EAAAjtB,GAEAP,MAAAC,EAAAkH,KAAAqmB,KA6CA,QAAAE,UAAAztB,EAAA+O,EAAAyc,GACA,GAAAS,IAAA,EACAlO,GAAA,CAEA,sBAAA/d,GACA,SAAAgP,IAAAC,EAMA,OAJAzB,UAAAge,KACAS,EAAA,WAAAT,OAAAS,UACAlO,EAAA,YAAAyN,OAAAzN,YAEAwN,SAAAvrB,EAAA+O,GACAkd,UACAM,QAAAxd,EACAgP,aAmBA,QAAA2P,OAAA1tB,GACA,MAAA+f,KAAA/f,EAAA,GAyBA,QAAA2tB,MAAA9tB,EAAAud,GAEA,MADAA,GAAA,MAAAA,EAAAvJ,SAAAuJ,EACAwQ,GAAAxQ,EAAAvd,GAsCA,QAAAguB,aACA,IAAApQ,UAAAtd,OACA,QAEA,IAAAN,GAAA4d,UAAA,EACA,OAAA9W,IAAA9G,SA6BA,QAAAoI,OAAApI,GACA,MAAAsN,WAAAtN,GAAA,MAkCA,QAAAiuB,WAAAjuB,EAAAyN,GACA,MAAAH,WAAAtN,GAAA,KAAAyN,GAqBA,QAAAygB,WAAAluB,GACA,MAAAsN,WAAAtN,GAAA,MA+BA,QAAAmuB,eAAAnuB,EAAAyN,GACA,MAAAH,WAAAtN,GAAA,KAAAyN,GAmCA,QAAApB,IAAArM,EAAA+E,GACA,MAAA/E,KAAA+E,GAAA/E,OAAA+E,MAyEA,QAAAuQ,aAAAtV,GAEA,MAAAoV,mBAAApV,IAAAiH,GAAA1G,KAAAP,EAAA,aACAouB,GAAA7tB,KAAAP,EAAA,WAAA4kB,GAAArkB,KAAAP,IAAAqO,GAgDA,QAAAggB,eAAAruB,GACA,MAAA6G,cAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAAkjB,GA4BA,QAAAzO,aAAAzU,GACA,aAAAA,GAAAglB,SAAAsJ,GAAAtuB,MAAA2Q,WAAA3Q,GA4BA,QAAAoV,mBAAApV,GACA,MAAA6G,cAAA7G,IAAAyU,YAAAzU,GAqBA,QAAAuuB,WAAAvuB,GACA,MAAAA,MAAA,GAAAA,KAAA,GACA6G,aAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAAmjB,EA0CA,QAAAqL,QAAAxuB,GACA,MAAA6G,cAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAAojB,EAqBA,QAAAqL,WAAAzuB,GACA,QAAAA,GAAA,IAAAA,EAAA0uB,UAAA7nB,aAAA7G,KAAAqV,cAAArV,GAoCA,QAAA2uB,SAAA3uB,GACA,GAAAyU,YAAAzU,KACA8G,GAAA9G,IAAAilB,SAAAjlB,IAAA2Q,WAAA3Q,EAAA2K,SACA2K,YAAAtV,IAAAkO,GAAAlO,IACA,OAAAA,EAAAM,MAEA,IAAAuG,aAAA7G,GAAA,CACA,GAAA6N,GAAAC,OAAA9N,EACA,IAAA6N,GAAA2U,GAAA3U,GAAA4U,EACA,OAAAziB,EAAA0F,KAGA,OAAApD,KAAAtC,GACA,GAAAiH,GAAA1G,KAAAP,EAAAsC,GACA,QAGA,SAAAssB,IAAA9hB,KAAA9M,GAAAM,QAgCA,QAAAuuB,SAAA7uB,EAAA+E,GACA,MAAAuN,aAAAtS,EAAA+E,GAoCA,QAAA+pB,aAAA9uB,EAAA+E,EAAA0I,GACAA,EAAA,kBAAAA,KAAArK,CACA,IAAAhC,GAAAqM,IAAAzN,EAAA+E,GAAA3B,CACA,OAAAhC,KAAAgC,EAAAkP,YAAAtS,EAAA+E,EAAA0I,KAAArM,EAsBA,QAAA2tB,SAAA/uB,GACA,MAAA6G,cAAA7G,GAGA4kB,GAAArkB,KAAAP,IAAAqjB,GACA,gBAAArjB,GAAAujB,SAAA,gBAAAvjB,GAAAsjB,MAHA,EAiCA,QAAA0L,UAAAhvB,GACA,sBAAAA,IAAAivB,GAAAjvB,GAqBA,QAAA2Q,YAAA3Q,GAIA,GAAA6N,GAAAF,SAAA3N,GAAA4kB,GAAArkB,KAAAP,GAAA,EACA,OAAA6N,IAAAG,GAAAH,GAAAI,EA6BA,QAAAihB,WAAAlvB,GACA,sBAAAA,OAAA+P,UAAA/P,GA8BA,QAAAglB,UAAAhlB,GACA,sBAAAA,IACAA,EAAA,IAAAA,EAAA,MAAAgX,GAAAhX,EA4BA,QAAA2N,UAAA3N,GACA,GAAAsJ,SAAAtJ,EACA,SAAAA,IAAA,UAAAsJ,GAAA,YAAAA,GA2BA,QAAAzC,cAAA7G,GACA,QAAAA,GAAA,gBAAAA,GAqBA,QAAAmvB,OAAAnvB,GACA,MAAA6G,cAAA7G,IAAA8N,OAAA9N,IAAAwiB,EA2BA,QAAA4M,SAAA5rB,EAAAoJ,GACA,MAAApJ,KAAAoJ,GAAA+G,YAAAnQ,EAAAoJ,EAAA8H,aAAA9H,IAmCA,QAAAyiB,aAAA7rB,EAAAoJ,EAAAa,GAEA,MADAA,GAAA,kBAAAA,KAAArK,EACAuQ,YAAAnQ,EAAAoJ,EAAA8H,aAAA9H,GAAAa,GA+BA,QAAA6hB,OAAAtvB,GAIA,MAAAuvB,UAAAvvB,UAqBA,QAAAykB,UAAAzkB,GACA,IAAA2N,SAAA3N,GACA,QAEA,IAAAwvB,GAAA7e,WAAA3Q,IAAAgF,aAAAhF,GAAAyvB,GAAAC,EACA,OAAAF,GAAArpB,KAAAogB,SAAAvmB,IAoBA,QAAA2vB,QAAA3vB,GACA,cAAAA,EAuBA,QAAAiN,OAAAjN,GACA,aAAAA,EA8BA,QAAAuvB,UAAAvvB,GACA,sBAAAA,IACA6G,aAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAAwjB,EAgCA,QAAAnO,eAAArV,GACA,IAAA6G,aAAA7G,IACA4kB,GAAArkB,KAAAP,IAAAoO,GAAApJ,aAAAhF,GACA,QAEA,IAAA+O,GAAAuC,aAAAtR,EACA,WAAA+O,EACA,QAEA,IAAA2O,GAAAzW,GAAA1G,KAAAwO,EAAA,gBAAAA,EAAAgL,WACA,yBAAA2D,IACAA,gBAAA8I,GAAAjmB,KAAAmd,IAAAkS,GAqBA,QAAAC,UAAA7vB,GACA,MAAA2N,UAAA3N,IAAA4kB,GAAArkB,KAAAP,IAAAyjB,EA+BA,QAAAqM,eAAA9vB,GACA,MAAAkvB,WAAAlvB,QAAAgX,MAAAhX,EAqBA,QAAA+vB,OAAA/vB,GACA,MAAA6G,cAAA7G,IAAA8N,OAAA9N,IAAAyiB,EAqBA,QAAAwC,UAAAjlB,GACA,sBAAAA,KACA8G,GAAA9G,IAAA6G,aAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAA0jB,EAqBA,QAAA7T,UAAA7P,GACA,sBAAAA,IACA6G,aAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAA4jB,EAqBA,QAAA1Q,cAAAlT,GACA,MAAA6G,cAAA7G,IACAglB,SAAAhlB,EAAAM,WAAA0vB,GAAApL,GAAArkB,KAAAP,IAoBA,QAAAiwB,aAAAjwB,GACA,MAAAA,KAAAoD,EAqBA,QAAA8sB,WAAAlwB,GACA,MAAA6G,cAAA7G,IAAA8N,OAAA9N,IAAAmwB,EAqBA,QAAAC,WAAApwB,GACA,MAAA6G,cAAA7G,IAAA4kB,GAAArkB,KAAAP,IAAAqwB,EA8EA,QAAAvG,SAAA9pB,GACA,IAAAA,EACA,QAEA,IAAAyU,YAAAzU,GACA,MAAAilB,UAAAjlB,GAAAsG,cAAAtG,GAAAkI,UAAAlI,EAEA,IAAAswB,IAAAtwB,EAAAswB,IACA,MAAAnrB,iBAAAnF,EAAAswB,MAEA,IAAAziB,GAAAC,OAAA9N,GACAG,EAAA0N,GAAA2U,EAAA/c,WAAAoI,GAAA4U,EAAA3c,WAAAlE,MAEA,OAAAzB,GAAAH,GA0BA,QAAAuwB,UAAAvwB,GACA,IAAAA,EACA,WAAAA,IAAA,CAGA,IADAA,EAAAwhB,SAAAxhB,GACAA,IAAA0Y,GAAA1Y,KAAA0Y,EAAA,CACA,GAAA8X,GAAA,EAAAxwB,EAAA,IACA,OAAAwwB,GAAAC,EAEA,MAAAzwB,SAAA,EA6BA,QAAA+P,WAAA/P,GACA,GAAAoB,GAAAmvB,SAAAvwB,GACA0wB,EAAAtvB,EAAA,CAEA,OAAAA,OAAAsvB,EAAAtvB,EAAAsvB,EAAAtvB,EAAA,EA8BA,QAAA4O,UAAAhQ,GACA,MAAAA,GAAAkN,UAAA6C,UAAA/P,GAAA,EAAA+H,GAAA,EA0BA,QAAAyZ,UAAAxhB,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAA6P,SAAA7P,GACA,MAAA8C,EAEA,IAAA6K,SAAA3N,GAAA,CACA,GAAA+E,GAAA4L,WAAA3Q,EAAA2wB,SAAA3wB,EAAA2wB,UAAA3wB,CACAA,GAAA2N,SAAA5I,KAAA,GAAAA,EAEA,mBAAA/E,GACA,WAAAA,MAEAA,KAAAwe,QAAAoS,GAAA,GACA,IAAAC,GAAAC,GAAA3qB,KAAAnG,EACA,OAAA6wB,IAAAE,GAAA5qB,KAAAnG,GACAgxB,GAAAhxB,EAAA8Z,MAAA,GAAA+W,EAAA,KACAI,GAAA9qB,KAAAnG,GAAA8C,GAAA9C,EA2BA,QAAAuV,eAAAvV,GACA,MAAA6M,YAAA7M,EAAAgV,OAAAhV,IA2BA,QAAAkxB,eAAAlxB,GACA,MAAAkN,WAAA6C,UAAA/P,IAAAgX,KAwBA,QAAA/R,UAAAjF,GACA,aAAAA,EAAA,GAAAwY,aAAAxY,GAqNA,QAAAmxB,QAAAxS,EAAAyS,GACA,GAAAhwB,GAAA0N,WAAA6P,EACA,OAAAyS,GAAAzkB,WAAAvL,EAAAgwB,GAAAhwB,EA0FA,QAAAiwB,SAAA7tB,EAAAvC,GACA,MAAAiB,UAAAsB,EAAAoS,YAAA3U,EAAA,GAAAqP,YAAA,GAuCA,QAAAghB,aAAA9tB,EAAAvC,GACA,MAAAiB,UAAAsB,EAAAoS,YAAA3U,EAAA,GAAAuP,iBAAA,GA+BA,QAAA+gB,OAAA/tB,EAAA7C,GACA,aAAA6C,EACAA,EACA+M,GAAA/M,EAAAoS,YAAAjV,EAAA,GAAAqU,QA6BA,QAAAwc,YAAAhuB,EAAA7C,GACA,aAAA6C,EACAA,EACAiN,GAAAjN,EAAAoS,YAAAjV,EAAA,GAAAqU,QA+BA,QAAAyc,QAAAjuB,EAAA7C,GACA,MAAA6C,IAAA8M,WAAA9M,EAAAoS,YAAAjV,EAAA,IA6BA,QAAA+wB,aAAAluB,EAAA7C,GACA,MAAA6C,IAAAgN,gBAAAhN,EAAAoS,YAAAjV,EAAA,IA0BA,QAAAgxB,WAAAnuB,GACA,aAAAA,KAAAkN,cAAAlN,EAAAsJ,KAAAtJ,IA0BA,QAAAouB,aAAApuB,GACA,aAAAA,KAAAkN,cAAAlN,EAAAwR,OAAAxR,IA4BA,QAAA8H,KAAA9H,EAAAqN,EAAAghB,GACA,GAAAzwB,GAAA,MAAAoC,EAAAJ,EAAAwN,QAAApN,EAAAqN,EACA,OAAAzP,KAAAgC,EAAAyuB,EAAAzwB,EA8BA,QAAA0C,KAAAN,EAAAqN,GACA,aAAArN,GAAAshB,QAAAthB,EAAAqN,EAAAQ,SA6BA,QAAAwD,OAAArR,EAAAqN,GACA,aAAArN,GAAAshB,QAAAthB,EAAAqN,EAAAU,WA4GA,QAAAzE,MAAAtJ,GACA,GAAAsuB,GAAA3M,YAAA3hB,EACA,KAAAsuB,IAAArd,YAAAjR,GACA,MAAA4Q,UAAA5Q,EAEA,IAAA+S,GAAAsP,UAAAriB,GACAuuB,IAAAxb,EACAnV,EAAAmV,MACAjW,EAAAc,EAAAd,MAEA,QAAAgC,KAAAkB,IACA6N,QAAA7N,EAAAlB,IACAyvB,IAAA,UAAAzvB,GAAAmT,QAAAnT,EAAAhC,KACAwxB,GAAA,eAAAxvB,GACAlB,EAAAoE,KAAAlD,EAGA,OAAAlB,GA0BA,QAAA4T,QAAAxR,GAUA,IATA,GAAA3C,GAAA,GACAixB,EAAA3M,YAAA3hB,GACAC,EAAA6Q,WAAA9Q,GACAwuB,EAAAvuB,EAAAnD,OACAiW,EAAAsP,UAAAriB,GACAuuB,IAAAxb,EACAnV,EAAAmV,MACAjW,EAAAc,EAAAd,SAEAO,EAAAmxB,GAAA,CACA,GAAA1vB,GAAAmB,EAAA5C,EACAkxB,KAAA,UAAAzvB,GAAAmT,QAAAnT,EAAAhC,KACA,eAAAgC,IAAAwvB,IAAA7qB,GAAA1G,KAAAiD,EAAAlB,KACAlB,EAAAoE,KAAAlD,GAGA,MAAAlB,GAyBA,QAAA6wB,SAAAzuB,EAAA7C,GACA,GAAAS,KAMA,OALAT,GAAAiV,YAAAjV,EAAA,GAEA2P,WAAA9M,EAAA,SAAAxD,EAAAsC,EAAAkB,GACApC,EAAAT,EAAAX,EAAAsC,EAAAkB,IAAAxD,IAEAoB,EAgCA,QAAA8wB,WAAA1uB,EAAA7C,GACA,GAAAS,KAMA,OALAT,GAAAiV,YAAAjV,EAAA,GAEA2P,WAAA9M,EAAA,SAAAxD,EAAAsC,EAAAkB,GACApC,EAAAkB,GAAA3B,EAAAX,EAAAsC,EAAAkB,KAEApC,EAgIA,QAAA+wB,QAAA3uB,EAAAvC,GAEA,MADAA,GAAA2U,YAAA3U,GACA+U,WAAAxS,EAAA,SAAAxD,EAAAsC,GACA,OAAArB,EAAAjB,EAAAsC,KA4CA,QAAA8vB,QAAA5uB,EAAAvC,GACA,aAAAuC,KAAgCwS,WAAAxS,EAAAoS,YAAA3U,IAgChC,QAAAG,QAAAoC,EAAAqN,EAAAghB,GACAhhB,EAAAC,MAAAD,EAAArN,IAAAqN,GAAAE,SAAAF,EAEA,IAAAhQ,GAAA,GACAP,EAAAuQ,EAAAvQ,MAOA,KAJAA,IACAkD,EAAAJ,EACA9C,EAAA,KAEAO,EAAAP,GAAA,CACA,GAAAN,GAAA,MAAAwD,EAAAJ,EAAAI,EAAAwN,MAAAH,EAAAhQ,IACAb,KAAAoD,IACAvC,EAAAP,EACAN,EAAA6xB,GAEAruB,EAAAmN,WAAA3Q,KAAAO,KAAAiD,GAAAxD,EAEA,MAAAwD,GA+BA,QAAA1D,KAAA0D,EAAAqN,EAAA7Q,GACA,aAAAwD,IAAAyT,QAAAzT,EAAAqN,EAAA7Q,GA2BA,QAAAqyB,SAAA7uB,EAAAqN,EAAA7Q,EAAAyN,GAEA,MADAA,GAAA,kBAAAA,KAAArK,EACA,MAAAI,IAAAyT,QAAAzT,EAAAqN,EAAA7Q,EAAAyN,GAoFA,QAAA6kB,WAAA9uB,EAAA7C,EAAAC,GACA,GAAA2H,GAAAzB,GAAAtD,IAAA0P,aAAA1P,EAGA,IAFA7C,EAAAiV,YAAAjV,EAAA,GAEA,MAAAC,EACA,GAAA2H,GAAAoF,SAAAnK,GAAA,CACA,GAAAka,GAAAla,EAAAuW,WAEAnZ,GADA2H,EACAzB,GAAAtD,GAAA,GAAAka,MAEA/M,WAAA+M,GAAA5O,WAAAwC,aAAA9N,WAGA5C,KAMA,QAHA2H,EAAAzH,UAAAwP,YAAA9M,EAAA,SAAAxD,EAAAa,EAAA2C,GACA,MAAA7C,GAAAC,EAAAZ,EAAAa,EAAA2C,KAEA5C,EA8BA,QAAA2xB,OAAA/uB,EAAAqN,GACA,aAAArN,GAAA,EAAAsV,UAAAtV,EAAAqN,GA8BA,QAAA2hB,QAAAhvB,EAAAqN,EAAAmI,GACA,aAAAxV,IAAAuV,WAAAvV,EAAAqN,EAAA6I,aAAAV,IA2BA,QAAAyZ,YAAAjvB,EAAAqN,EAAAmI,EAAAvL,GAEA,MADAA,GAAA,kBAAAA,KAAArK,EACA,MAAAI,IAAAuV,WAAAvV,EAAAqN,EAAA6I,aAAAV,GAAAvL,GA6BA,QAAA7L,QAAA4B,GACA,MAAAA,GAAAG,WAAAH,EAAAsJ,KAAAtJ,OA2BA,QAAAkvB,UAAAlvB,GACA,aAAAA,KAAAG,WAAAH,EAAAwR,OAAAxR,IAwBA,QAAAmvB,OAAAxlB,EAAAC,EAAAC,GAaA,MAZAA,KAAAjK,IACAiK,EAAAD,EACAA,EAAAhK,GAEAiK,IAAAjK,IACAiK,EAAAmU,SAAAnU,GACAA,UAAA,GAEAD,IAAAhK,IACAgK,EAAAoU,SAAApU,GACAA,UAAA,GAEAF,UAAAsU,SAAArU,GAAAC,EAAAC,GAyCA,QAAAulB,SAAAzlB,EAAAvE,EAAAC,GASA,MARAD,GAAA4Y,SAAA5Y,IAAA,EACAC,IAAAzF,GACAyF,EAAAD,EACAA,EAAA,GAEAC,EAAA2Y,SAAA3Y,IAAA,EAEAsE,EAAAqU,SAAArU,GACAqE,YAAArE,EAAAvE,EAAAC,GAkCA,QAAAgqB,QAAAzlB,EAAAC,EAAAylB,GA2BA,GA1BAA,GAAA,iBAAAA,IAAA5V,eAAA9P,EAAAC,EAAAylB,KACAzlB,EAAAylB,EAAA1vB,GAEA0vB,IAAA1vB,IACA,iBAAAiK,IACAylB,EAAAzlB,EACAA,EAAAjK,GAEA,iBAAAgK,KACA0lB,EAAA1lB,EACAA,EAAAhK,IAGAgK,IAAAhK,GAAAiK,IAAAjK,GACAgK,EAAA,EACAC,EAAA,IAGAD,EAAAoU,SAAApU,IAAA,EACAC,IAAAjK,GACAiK,EAAAD,EACAA,EAAA,GAEAC,EAAAmU,SAAAnU,IAAA,GAGAD,EAAAC,EAAA,CACA,GAAA0lB,GAAA3lB,CACAA,GAAAC,EACAA,EAAA0lB,EAEA,GAAAD,GAAA1lB,EAAA,GAAAC,EAAA,GACA,GAAA8d,GAAAxU,IACA,OAAA1N,IAAAmE,EAAA+d,GAAA9d,EAAAD,EAAA4lB,GAAA,QAAA7H,EAAA,IAAA7qB,OAAA,KAAA+M,GAEA,MAAAoJ,YAAArJ,EAAAC,GA6CA,QAAA4lB,YAAAhtB,GACA,MAAAitB,IAAAjuB,SAAAgB,GAAAktB,eAoBA,QAAA5U,QAAAtY,GAEA,MADAA,GAAAhB,SAAAgB,GACAA,KAAAuY,QAAA4U,GAAA7uB,cAAAia,QAAA6U,GAAA,IA0BA,QAAAC,UAAArtB,EAAAstB,EAAAC,GACAvtB,EAAAhB,SAAAgB,GACAstB,EAAA/a,aAAA+a,EAEA,IAAAjzB,GAAA2F,EAAA3F,MAMA,OALAkzB,OAAApwB,EACA9C,EACA4M,UAAA6C,UAAAyjB,GAAA,EAAAlzB,GAEAkzB,GAAAD,EAAAjzB,OACAkzB,GAAA,GAAAvtB,EAAAoQ,QAAAkd,EAAAC,MAqCA,QAAAC,QAAAxtB,GAEA,MADAA,GAAAhB,SAAAgB,GACAA,GAAAytB,GAAAvtB,KAAAF,GACAA,EAAAuY,QAAAmV,GAAAjvB,gBACAuB,EAkBA,QAAA2tB,cAAA3tB,GAEA,MADAA,GAAAhB,SAAAgB,GACAA,GAAA4tB,GAAA1tB,KAAAF,GACAA,EAAAuY,QAAAsV,GAAA,QACA7tB,EA8FA,QAAA8tB,KAAA9tB,EAAA3F,EAAA8gB,GACAnb,EAAAhB,SAAAgB,GACA3F,EAAAyP,UAAAzP,EAEA,IAAA0zB,GAAA1zB,EAAA0F,WAAAC,GAAA,CACA,KAAA3F,GAAA0zB,GAAA1zB,EACA,MAAA2F,EAEA,IAAAyR,IAAApX,EAAA0zB,GAAA,CACA,OACA7S,eAAAzK,GAAAgB,GAAA0J,GACAnb,EACAkb,cAAArK,GAAAY,GAAA0J,GA2BA,QAAA6S,QAAAhuB,EAAA3F,EAAA8gB,GACAnb,EAAAhB,SAAAgB,GACA3F,EAAAyP,UAAAzP,EAEA,IAAA0zB,GAAA1zB,EAAA0F,WAAAC,GAAA,CACA,OAAA3F,MAAA0zB,EACA/tB,EAAAkb,cAAA7gB,EAAA0zB,EAAA5S,GACAnb,EA0BA,QAAAiuB,UAAAjuB,EAAA3F,EAAA8gB,GACAnb,EAAAhB,SAAAgB,GACA3F,EAAAyP,UAAAzP,EAEA,IAAA0zB,GAAA1zB,EAAA0F,WAAAC,GAAA,CACA,OAAA3F,MAAA0zB,EACA7S,cAAA7gB,EAAA0zB,EAAA5S,GAAAnb,EACAA,EA2BA,QAAAkuB,UAAAluB,EAAAmuB,EAAAnX,GASA,MANAA,IAAA,MAAAmX,EACAA,EAAA,EACOA,IACPA,MAEAnuB,EAAAhB,SAAAgB,GAAAuY,QAAAoS,GAAA,IACAyD,GAAApuB,EAAAmuB,IAAAE,GAAAnuB,KAAAF,GAAA,QAyBA,QAAAsuB,QAAAtuB,EAAA3C,EAAA2Z,GAMA,MAJA3Z,IADA2Z,EAAAC,eAAAjX,EAAA3C,EAAA2Z,GAAA3Z,IAAAF,GACA,EAEA2M,UAAAzM,GAEAyT,WAAA9R,SAAAgB,GAAA3C,GAsBA,QAAAkb,WACA,GAAAne,GAAAud,UACA3X,EAAAhB,SAAA5E,EAAA,GAEA,OAAAA,GAAAC,OAAA,EAAA2F,EAAAuuB,GAAAj0B,KAAA0F,EAAA5F,EAAA,GAAAA,EAAA,IA+CA,QAAAiiB,OAAArc,EAAAyhB,EAAA+M,GAKA,MAJAA,IAAA,gBAAAA,IAAAvX,eAAAjX,EAAAyhB,EAAA+M,KACA/M,EAAA+M,EAAArxB,IAEAqxB,MAAArxB,EAAA2E,EAAA0sB,IAAA,IAIAxuB,EAAAhB,SAAAgB,GACAA,IACA,gBAAAyhB,IACA,MAAAA,IAAAmI,SAAAnI,MAEAA,EAAAlP,aAAAkP,GACA,IAAAA,GAAAxhB,GAAAC,KAAAF,IACA2T,UAAAtT,cAAAL,GAAA,EAAAwuB,GAGAC,GAAAn0B,KAAA0F,EAAAyhB,EAAA+M,OAmDA,QAAAE,YAAA1uB,EAAAstB,EAAAC,GAGA,MAFAvtB,GAAAhB,SAAAgB,GACAutB,EAAAtmB,UAAA6C,UAAAyjB,GAAA,EAAAvtB,EAAA3F,QACA2F,EAAA2hB,YAAApP,aAAA+a,GAAAC,MA0GA,QAAAoB,UAAA3uB,EAAA0lB,EAAA1O,GAIA,GAAA4X,GAAAjuB,OAAAkuB,gBAEA7X,IAAAC,eAAAjX,EAAA0lB,EAAA1O,KACA0O,EAAAvoB,GAEA6C,EAAAhB,SAAAgB,GACA0lB,EAAAoJ,MAA+BpJ,EAAAkJ,EAAA3oB,iBAE/B,IAIA8oB,GACAC,EALAC,EAAAH,MAAmCpJ,EAAAuJ,QAAAL,EAAAK,QAAAhpB,kBACnCipB,EAAAroB,KAAAooB,GACAE,EAAAzxB,WAAAuxB,EAAAC,GAIAt0B,EAAA,EACAw0B,EAAA1J,EAAA0J,aAAAC,GACA1oB,EAAA,WAGA2oB,EAAAC,GACA7J,EAAA8H,QAAA6B,IAAA1oB,OAAA,IACAyoB,EAAAzoB,OAAA,KACAyoB,IAAAI,GAAAC,GAAAJ,IAAA1oB,OAAA,KACA+e,EAAAgK,UAAAL,IAAA1oB,OAAA,KACA,KAGAgpB,EAAA,kBACA,aAAAjK,GACAA,EAAAiK,UACA,6BAAAC,GAAA,KACA,IAEA5vB,GAAAuY,QAAA+W,EAAA,SAAAhvB,EAAAuvB,EAAAC,EAAAC,EAAAC,EAAAp0B,GAsBA,MArBAk0B,OAAAC,GAGAppB,GAAA3G,EAAA6T,MAAAjZ,EAAAgB,GAAA2c,QAAA0X,GAAArxB,kBAGAixB,IACAd,GAAA,EACApoB,GAAA,YAAAkpB,EAAA,UAEAG,IACAhB,GAAA,EACAroB,GAAA,OAAuBqpB,EAAA,eAEvBF,IACAnpB,GAAA,iBAAAmpB,EAAA,+BAEAl1B,EAAAgB,EAAA0E,EAAAjG,OAIAiG,IAGAqG,GAAA,MAIA,IAAAupB,GAAAxK,EAAAwK,QACAA,KACAvpB,EAAA,iBAA8BA,EAAA,SAG9BA,GAAAqoB,EAAAroB,EAAA4R,QAAA4X,GAAA,IAAAxpB,GACA4R,QAAA6X,GAAA,MACA7X,QAAA8X,GAAA,OAGA1pB,EAAA,aAAAupB,GAAA,gBACAA,EACA,GACA,wBAEA,qBACAnB,EACA,mBACA,KAEAC,EACA,uFAEA,OAEAroB,EACA,eAEA,IAAAxL,GAAAm1B,GAAA,WACA,MAAAC,UAAArB,EAAAS,EAAA,UAAAhpB,GACA1M,MAAAkD,EAAAgyB,IAMA,IADAh0B,EAAAwL,SACAmiB,QAAA3tB,GACA,KAAAA,EAEA,OAAAA,GAwBA,QAAAq1B,SAAAz2B,GACA,MAAAiF,UAAAjF,GAAAmzB,cAwBA,QAAAuD,SAAA12B,GACA,MAAAiF,UAAAjF,GAAA22B,cAyBA,QAAAC,MAAA3wB,EAAAmb,EAAAnE,GAEA,GADAhX,EAAAhB,SAAAgB,GACAA,IAAAgX,GAAAmE,IAAAhe,GACA,MAAA6C,GAAAuY,QAAAoS,GAAA,GAEA,KAAA3qB,KAAAmb,EAAA5I,aAAA4I,IACA,MAAAnb,EAEA,IAAAjC,GAAAsC,cAAAL,GACAhC,EAAAqC,cAAA8a,GACAxY,EAAA7E,gBAAAC,EAAAC,GACA4E,EAAA3E,cAAAF,EAAAC,GAAA,CAEA,OAAA2V,WAAA5V,EAAA4E,EAAAC,GAAAsV,KAAA,IAsBA,QAAA0Y,SAAA5wB,EAAAmb,EAAAnE,GAEA,GADAhX,EAAAhB,SAAAgB,GACAA,IAAAgX,GAAAmE,IAAAhe,GACA,MAAA6C,GAAAuY,QAAAsY,GAAA,GAEA,KAAA7wB,KAAAmb,EAAA5I,aAAA4I,IACA,MAAAnb,EAEA,IAAAjC,GAAAsC,cAAAL,GACA4C,EAAA3E,cAAAF,EAAAsC,cAAA8a,IAAA,CAEA,OAAAxH,WAAA5V,EAAA,EAAA6E,GAAAsV,KAAA,IAsBA,QAAA4Y,WAAA9wB,EAAAmb,EAAAnE,GAEA,GADAhX,EAAAhB,SAAAgB,GACAA,IAAAgX,GAAAmE,IAAAhe,GACA,MAAA6C,GAAAuY,QAAAwY,GAAA,GAEA,KAAA/wB,KAAAmb,EAAA5I,aAAA4I,IACA,MAAAnb,EAEA,IAAAjC,GAAAsC,cAAAL,GACA2C,EAAA7E,gBAAAC,EAAAsC,cAAA8a,GAEA,OAAAxH,WAAA5V,EAAA4E,GAAAuV,KAAA,IAwCA,QAAA8Y,UAAAhxB,EAAA0lB,GACA,GAAArrB,GAAA42B,EACAC,EAAAC,CAEA,IAAAzpB,SAAAge,GAAA,CACA,GAAAjE,GAAA,aAAAiE,KAAAjE,WACApnB,GAAA,UAAAqrB,GAAA5b,UAAA4b,EAAArrB,UACA62B,EAAA,YAAAxL,GAAAnT,aAAAmT,EAAAwL,YAEAlxB,EAAAhB,SAAAgB,EAEA,IAAA+tB,GAAA/tB,EAAA3F,MACA,IAAA4F,GAAAC,KAAAF,GAAA,CACA,GAAAjC,GAAAsC,cAAAL,EACA+tB,GAAAhwB,EAAA1D,OAEA,GAAAA,GAAA0zB,EACA,MAAA/tB,EAEA,IAAA4C,GAAAvI,EAAA0F,WAAAmxB,EACA,MAAAtuB,EACA,MAAAsuB,EAEA,IAAA/1B,GAAA4C,EACA4V,UAAA5V,EAAA,EAAA6E,GAAAsV,KAAA,IACAlY,EAAA6T,MAAA,EAAAjR,EAEA,IAAA6e,IAAAtkB,EACA,MAAAhC,GAAA+1B,CAKA,IAHAnzB,IACA6E,GAAAzH,EAAAd,OAAAuI,GAEAgnB,SAAAnI,IACA,GAAAzhB,EAAA6T,MAAAjR,GAAAwuB,OAAA3P,GAAA,CACA,GAAAnhB,GACA+wB,EAAAl2B,CAMA,KAJAsmB,EAAAhoB,SACAgoB,EAAA8N,EAAA9N,EAAA9a,OAAA3H,SAAA2V,GAAAC,KAAA6M,IAAA,MAEAA,EAAArhB,UAAA,EACAE,EAAAmhB,EAAA7M,KAAAyc,IACA,GAAAC,GAAAhxB,EAAA1F,KAEAO,KAAA0Y,MAAA,EAAAyd,IAAAn0B,EAAAyF,EAAA0uB,QAEO,IAAAtxB,EAAAoQ,QAAAmC,aAAAkP,GAAA7e,MAAA,CACP,GAAAhI,GAAAO,EAAAwmB,YAAAF,EACA7mB,GAAA,KACAO,IAAA0Y,MAAA,EAAAjZ,IAGA,MAAAO,GAAA+1B,EAsBA,QAAAK,UAAAvxB,GAEA,MADAA,GAAAhB,SAAAgB,GACAA,GAAAwxB,GAAAtxB,KAAAF,GACAA,EAAAuY,QAAAkZ,GAAAlxB,kBACAP,EAiEA,QAAAqY,OAAArY,EAAAupB,EAAAvS,GAOA,MANAhX,GAAAhB,SAAAgB,GACAupB,EAAAvS,EAAA7Z,EAAAosB,EAEAA,IAAApsB,IACAosB,EAAAmI,GAAAxxB,KAAAF,GAAA2xB,GAAAC,IAEA5xB,EAAAM,MAAAipB,OAkGA,QAAAsI,MAAAvQ,GACA,GAAAjnB,GAAAinB,IAAAjnB,OAAA,EACAugB,EAAAjL,aASA,OAPA2R,GAAAjnB,EAAAmB,SAAA8lB,EAAA,SAAA1nB,GACA,qBAAAA,GAAA,GACA,SAAAsP,IAAAC,EAEA,QAAAyR,EAAAhhB,EAAA,IAAAA,EAAA,SAGAkd,KAAA,SAAA1c,GAEA,IADA,GAAAQ,GAAA,KACAA,EAAAP,GAAA,CACA,GAAAT,GAAA0nB,EAAA1mB,EACA,IAAAX,MAAAL,EAAA,GAAAwH,KAAAhH,GACA,MAAAH,OAAAL,EAAA,GAAAwH,KAAAhH,MA2BA,QAAA03B,UAAAnrB,GACA,MAAAiC,cAAAvB,UAAAV,GAAA,IAoBA,QAAAorB,UAAAh4B,GACA,kBACA,MAAAA,IAmEA,QAAAgU,UAAAhU,GACA,MAAAA,GA6CA,QAAAW,UAAAR,GACA,MAAA4T,cAAA,kBAAA5T,KAAAmN,UAAAnN,GAAA,IA2BA,QAAA83B,SAAArrB,GACA,MAAAsH,aAAA5G,UAAAV,GAAA,IA2BA,QAAAsrB,iBAAArnB,EAAAzE,GACA,MAAA6H,qBAAApD,EAAAvD,UAAAlB,GAAA,IAkGA,QAAA+rB,OAAA30B,EAAAoJ,EAAA+e,GACA,GAAAloB,GAAAqJ,KAAAF,GACAwrB,EAAA1nB,cAAA9D,EAAAnJ,EAEA,OAAAkoB,GACAhe,SAAAf,KAAAwrB,EAAA93B,SAAAmD,EAAAnD,UACAqrB,EAAA/e,EACAA,EAAApJ,EACAA,EAAA6D,KACA+wB,EAAA1nB,cAAA9D,EAAAE,KAAAF,IAEA,IAAA4c,KAAA7b,SAAAge,IAAA,SAAAA,OAAAnC,OACAzb,EAAA4C,WAAAnN,EAqBA,OAnBA1C,WAAAs3B,EAAA,SAAApa,GACA,GAAA7d,GAAAyM,EAAAoR,EACAxa,GAAAwa,GAAA7d,EACA4N,IACAvK,EAAAmb,UAAAX,GAAA,WACA,GAAA5W,GAAAC,KAAAG,SACA,IAAAgiB,GAAApiB,EAAA,CACA,GAAAhG,GAAAoC,EAAA6D,KAAAC,aACA6R,EAAA/X,EAAAmG,YAAAW,UAAAb,KAAAE,YAIA,OAFA4R,GAAA3T,MAA4BrF,OAAAE,KAAAud,UAAAxd,QAAAoD,IAC5BpC,EAAAoG,UAAAJ,EACAhG,EAEA,MAAAjB,GAAAD,MAAAsD,EAAA7B,WAAA0F,KAAArH,SAAA4d,gBAKApa,EAgBA,QAAA60B,cAIA,MAHA5a,IAAA6a,IAAAjxB,OACAoW,GAAA6a,EAAAC,IAEAlxB,KAkBA,QAAAmxB,SAwBA,QAAAC,QAAAn1B,GAEA,MADAA,GAAAyM,UAAAzM,GACAyZ,KAAA,SAAA1c,GACA,MAAAmV,SAAAnV,EAAAiD,KAkGA,QAAA6Q,UAAAtD,GACA,MAAAC,OAAAD,GAAAqF,aAAAlF,MAAAH,IAAAsF,iBAAAtF,GAwBA,QAAA6nB,YAAAl1B,GACA,gBAAAqN,GACA,aAAArN,EAAAJ,EAAAwN,QAAApN,EAAAqN,IAwGA,QAAA8nB,OAAAr1B,EAAA3C,GAEA,GADA2C,EAAAyM,UAAAzM,GACA,EAAAA,KAAA0T,EACA,QAEA,IAAAnW,GAAAkH,EACAzH,EAAA2I,GAAA3F,EAAAyE,EAEApH,GAAAiV,YAAAjV,GACA2C,GAAAyE,CAGA,KADA,GAAA3G,GAAAiC,UAAA/C,EAAAK,KACAE,EAAAyC,GACA3C,EAAAE,EAEA,OAAAO,GA6BA,QAAAw3B,QAAA54B,GACA,MAAA8G,IAAA9G,GACAyB,SAAAzB,EAAAgR,OAEAnB,SAAA7P,OAAAkI,UAAAyR,GAAA3Z,IAoBA,QAAA64B,UAAAC,GACA,GAAAC,KAAAC,EACA,OAAA/zB,UAAA6zB,GAAAC,EA2GA,QAAAE,KAAAx4B,GACA,MAAAA,MAAAH,OACAsP,aAAAnP,EAAAuT,SAAA5C,QACAhO,EA2BA,QAAA81B,OAAAz4B,EAAAE,GACA,MAAAF,MAAAH,OACAsP,aAAAnP,EAAAmV,YAAAjV,GAAAyQ,QACAhO,EAiBA,QAAA+1B,MAAA14B,GACA,MAAAmC,UAAAnC,EAAAuT,UA2BA,QAAAolB,QAAA34B,EAAAE,GACA,MAAAiC,UAAAnC,EAAAmV,YAAAjV,IAqBA,QAAA04B,KAAA54B,GACA,MAAAA,MAAAH,OACAsP,aAAAnP,EAAAuT,SAAAO,QACAnR,EA2BA,QAAAk2B,OAAA74B,EAAAE,GACA,MAAAF,MAAAH,OACAsP,aAAAnP,EAAAmV,YAAAjV,GAAA4T,QACAnR,EA8EA,QAAAm2B,KAAA94B,GACA,MAAAA,MAAAH,OACAuC,QAAApC,EAAAuT,UACA,EA2BA,QAAAwlB,OAAA/4B,EAAAE,GACA,MAAAF,MAAAH,OACAuC,QAAApC,EAAAmV,YAAAjV,IACA,EAxkcAgG,IAAA2xB,GAAAmB,YAAqC9yB,EAAA2xB,GAAAoB,KAAAjc,GAAAkc,KAAAlc,EAGrC,IAAAmc,GAAAjzB,EAAAizB,KACAC,EAAAlzB,EAAAkzB,MACAzX,EAAAzb,EAAAyb,KACAoT,EAAA7uB,EAAA6uB,OACArmB,GAAAxI,EAAAwI,UAGA2qB,GAAAnzB,EAAAjF,MAAAid,UACArS,GAAA3F,EAAAvC,OAAAua,UACAob,GAAApzB,EAAAmf,OAAAnH,UAGA6H,GAAA7f,EAAA6vB,SAAA7X,UAAA1Z,SAGAgC,GAAAqF,GAAArF,eAGA+xB,GAAA,EAGApJ,GAAApJ,GAAAjmB,KAAA6D,QAOAwgB,GAAAtY,GAAArH,SAGAszB,GAAA9a,GAAA6a,EAGA7I,GAAA+F,EAAA,IACAhP,GAAAjmB,KAAA0G,IAAAuX,QAAAsV,GAAA,QACAtV,QAAA,uEAIAwb,GAAAC,GAAAtzB,EAAAqzB,OAAA52B,EACA82B,GAAAvzB,EAAAuzB,QACAC,GAAAxzB,EAAAwzB,OACA/f,GAAAzT,EAAAyT,WACA0S,GAAAnmB,EAAAmmB,aACAsN,GAAAF,MAAAE,UAAAh3B,EACAuhB,GAAAvgB,OAAAugB,sBACA2L,GAAA,iBAAAA,GAAA6J,OAAA/0B,UAAAkrB,GAAAltB,EACA4L,GAAA5K,OAAA+sB,OACA/C,GAAA9hB,GAAA8hB,qBACA/e,GAAA1I,EAAA0I,WACA1E,GAAAmvB,GAAAnvB,OAGAmM,GAAAsL,EAAAiY,KACA3jB,GAAA0L,EAAAkY,MACA5V,GAAAtgB,OAAAm2B,eACAtL,GAAAtoB,EAAAqoB,SACArH,GAAAmS,GAAA3b,KACA9J,GAAAjQ,OAAA0I,KACA2E,GAAA2Q,EAAA6W,IACAhwB,GAAAmZ,EAAAiX,IACAhF,GAAA1tB,EAAAwtB,SACAxd,GAAAyL,EAAAyQ,OACA2B,GAAAuF,GAAAvb,QACA0J,GAAA4R,GAAAza,QACAqV,GAAAqF,GAAAzX,MAGAkY,GAAAhW,UAAA7d,EAAA,YACAuE,GAAAsZ,UAAA7d,EAAA,OACA8zB,GAAAjW,UAAA7d,EAAA,WACA+zB,GAAAlW,UAAA7d,EAAA,OACAg0B,GAAAnW,UAAA7d,EAAA,WACAqD,GAAAwa,UAAApgB,OAAA,UAGAw2B,GAAAD,IAAA,GAAAA,IAGA/L,IAAAR,GAAA7tB,MAAqDowB,QAAA,GAAe,WAGpEvM,MAGAyW,GAAAtU,SAAAiU,IACAM,GAAAvU,SAAArb,IACA6vB,GAAAxU,SAAAkU,IACAO,GAAAzU,SAAAmU,IACAO,GAAA1U,SAAAoU,IAGAO,GAAAf,MAAAxb,UAAAvb,EACA6X,GAAAigB,MAAAvK,QAAAvtB,EACAqV,GAAAyiB,MAAAj2B,SAAA7B,CAoKAwD,QAAAkuB,kBAQArB,OAAA0H,GAQAxF,SAAAyF,GAQA/F,YAAAI,GAQAU,SAAA,GAQAjB,SAQAoD,EAAA1xB,SAKAA,OAAA+X,UAAAxX,WAAAwX,UACA/X,OAAA+X,UAAA5E,YAAAnT,OAEAI,cAAA2X,UAAA7P,WAAA3H,WAAAwX,WACA3X,cAAA2X,UAAA5E,YAAA/S,cAuHAD,YAAA4X,UAAA7P,WAAA3H,WAAAwX,WACA5X,YAAA4X,UAAA5E,YAAAhT,YAgGA2C,KAAAiV,UAAA/U,MAAAE,UACAJ,KAAAiV,UAAA,OAAA1U,WACAP,KAAAiV,UAAArT,IAAApB,QACAR,KAAAiV,UAAA7a,IAAAsG,QACAV,KAAAiV,UAAA7e,IAAAuK,QA8GAC,UAAAqU,UAAA/U,MAAAW,eACAD,UAAAqU,UAAA,OAAAnU,gBACAF,UAAAqU,UAAArT,IAAAV,aACAN,UAAAqU,UAAA7a,IAAA+G,aACAP,UAAAqU,UAAA7e,IAAAgL,aA4FAC,SAAA4T,UAAA/U,MAAAoB,cACAD,SAAA4T,UAAA,OAAAxT,eACAJ,SAAA4T,UAAArT,IAAAD,YACAN,SAAA4T,UAAA7a,IAAAyH,YACAR,SAAA4T,UAAA7e,IAAA0L,YAmDAC,SAAAkT,UAAA1e,IAAAwL,SAAAkT,UAAAnZ,KAAAkG,YACAD,SAAAkT,UAAA7a,IAAA6H,YAqFAC,MAAA+S,UAAA/U,MAAAiC,WACAD,MAAA+S,UAAA,OAAA7S,YACAF,MAAA+S,UAAArT,IAAAS,SACAH,MAAA+S,UAAA7a,IAAAkI,SACAJ,MAAA+S,UAAA7e,IAAAmM,QAwVA,IAAAS,IAAAyQ,eAAA7M,YAUAka,GAAArN,eAAA3M,iBAAA,GA4IAD,GAAA8M,gBAYA5M,GAAA4M,eAAA,EAwaA+c,MAAAhM,GAAA7tB,MAAiDowB,QAAA,GAAe,aAChErc,WAAA,SAAA9Q,GACA,MAAA2B,iBAAAi1B,GAAA52B,KA2dA,IAAAof,IAAAgY,GAAA,SAAAz6B,EAAAkF,GAEA,MADAu1B,IAAA96B,IAAAK,EAAAkF,GACAlF,GAFA6T,SA41CA4E,GAAA8hB,IAAA,EAAA50B,WAAA,GAAA40B,KAAA,WAAAhiB,EAAA,SAAA9W,GACA,UAAA84B,IAAA94B,IADA42B,KAiXAhZ,GAAAob,GAAA,SAAAz6B,GACA,MAAAy6B,IAAAtvB,IAAAnL,IADAq4B,KAkEAlK,GAAApY,aAAA,SAwEAyO,MACAjI,WAAA,WACA,UAYA,IAAAyH,IAAAQ,GAAA,SAAAnhB,GAEA,IADA,GAAApC,MACAoC,GACA7B,UAAAP,EAAAsb,WAAAlZ,IACAA,EAAA8N,aAAA9N,EAEA,OAAApC,IANAsb,YAsBA8d,IAAA1sB,OAAA,GAAA0sB,IAAA,GAAAa,aAAA,MAAApY,IACA/X,IAAA4C,OAAA,GAAA5C,MAAAsX,GACAiY,IAAA3sB,OAAA2sB,GAAAa,YAAAC,GACAb,IAAA5sB,OAAA,GAAA4sB,MAAAjY,GACAkY,IAAA7sB,OAAA,GAAA6sB,MAAAxK,KACAriB,OAAA,SAAA9N,GACA,GAAAoB,GAAAwjB,GAAArkB,KAAAP,GACA0d,EAAAtc,GAAAgN,EAAApO,EAAA+Z,YAAA3W,EACAo4B,EAAA9d,EAAA6I,SAAA7I,GAAAta,CAEA,IAAAo4B,EACA,OAAAA,GACA,IAAAX,IAAA,MAAA5X,GACA,KAAA6X,IAAA,MAAAtY,EACA,KAAAuY,IAAA,MAAAQ,EACA,KAAAP,IAAA,MAAAvY,EACA,KAAAwY,IAAA,MAAA9K,GAGA,MAAA/uB,IAgdA,IAAA8gB,IAAA,WACA,GAAAuZ,GAAA,EACAC,EAAA,CAEA,iBAAAp5B,EAAAtC,GACA,GAAA27B,GAAA/O,KACAgP,EAAAC,GAAAF,EAAAD,EAGA,IADAA,EAAAC,EACAC,EAAA,GACA,KAAAH,GAAAK,EACA,MAAAx5B,OAGAm5B,GAAA,CAEA,OAAA7Y,IAAAtgB,EAAAtC,OAWA2Z,GAAAyT,QAAA,SAAAnnB,GACA,GAAA7E,KAIA,OAHA6D,UAAAgB,GAAAuY,QAAAud,GAAA,SAAAx1B,EAAA4G,EAAA6uB,EAAA/1B,GACA7E,EAAAoE,KAAAw2B,EAAA/1B,EAAAuY,QAAAyd,GAAA,MAAA9uB,GAAA5G,KAEAnF,IAuLA86B,GAAAnf,KAAA,SAAAtc,EAAAmB,GACA,MAAAwT,mBAAA3U,GACA6O,eAAA7O,EAAAyP,YAAAtO,EAAA,EAAAwT,mBAAA,SA4BA+mB,GAAApf,KAAA,SAAAtc,EAAAmB,GACA,GAAAjB,GAAA0R,KAAAzQ,EAIA,OAHAwT,mBAAAzU,KACAA,EAAAyC,GAEAgS,kBAAA3U,GACA6O,eAAA7O,EAAAyP,YAAAtO,EAAA,EAAAwT,mBAAA,GAAAQ,YAAAjV,SAyBAy7B,GAAArf,KAAA,SAAAtc,EAAAmB,GACA,GAAAJ,GAAA6Q,KAAAzQ,EAIA,OAHAwT,mBAAA5T,KACAA,EAAA4B,GAEAgS,kBAAA3U,GACA6O,eAAA7O,EAAAyP,YAAAtO,EAAA,EAAAwT,mBAAA,GAAAhS,EAAA5B,QAkdA66B,GAAAtf,KAAA,SAAApL,GACA,GAAA2qB,GAAA76B,SAAAkQ,EAAA8H,oBACA,OAAA6iB,GAAAh8B,QAAAg8B,EAAA,KAAA3qB,EAAA,GACAD,iBAAA4qB,QA2BAC,GAAAxf,KAAA,SAAApL,GACA,GAAAhR,GAAA0R,KAAAV,GACA2qB,EAAA76B,SAAAkQ,EAAA8H,oBAOA,OALA9Y,KAAA0R,KAAAiqB,GACA37B,EAAAyC,EAEAk5B,EAAA5xB,MAEA4xB,EAAAh8B,QAAAg8B,EAAA,KAAA3qB,EAAA,GACAD,iBAAA4qB,EAAA1mB,YAAAjV,SAyBA67B,GAAAzf,KAAA,SAAApL,GACA,GAAAnQ,GAAA6Q,KAAAV,GACA2qB,EAAA76B,SAAAkQ,EAAA8H,oBAOA,OALAjY,KAAA6Q,KAAAiqB,GACA96B,EAAA4B,EAEAk5B,EAAA5xB,MAEA4xB,EAAAh8B,QAAAg8B,EAAA,KAAA3qB,EAAA,GACAD,iBAAA4qB,EAAAl5B,EAAA5B,QAwIAi7B,GAAA1f,KAAA+K,SA+GA4U,GAAA3f,KAAA,SAAAtc,EAAA8V,GACAA,EAAArG,YAAAqG,EAAA,EAEA,IAAAjW,GAAAG,IAAAH,OAAA,EACAc,EAAA2L,OAAAtM,EAAA8V,EAMA,OAJAD,YAAA7V,EAAAgB,SAAA8U,EAAA,SAAA1V,GACA,MAAA4U,SAAA5U,EAAAP,IAAAO,MACOqC,KAAAkY,mBAEPha,IAgfAu7B,GAAA5f,KAAA,SAAApL,GACA,MAAAgH,UAAAzI,YAAAyB,EAAA,EAAAyD,mBAAA,MA0BAwnB,GAAA7f,KAAA,SAAApL,GACA,GAAAhR,GAAA0R,KAAAV,EAIA,OAHAyD,mBAAAzU,KACAA,EAAAyC,GAEAuV,SAAAzI,YAAAyB,EAAA,EAAAyD,mBAAA,GAAAQ,YAAAjV,MAuBAk8B,GAAA9f,KAAA,SAAApL,GACA,GAAAnQ,GAAA6Q,KAAAV,EAIA,OAHAyD,mBAAA5T,KACAA,EAAA4B,GAEAuV,SAAAzI,YAAAyB,EAAA,EAAAyD,mBAAA,GAAAhS,EAAA5B,KAsKAs7B,GAAA/f,KAAA,SAAAtc,EAAAmB,GACA,MAAAwT,mBAAA3U,GACA6O,eAAA7O,EAAAmB,QAsBAm7B,GAAAhgB,KAAA,SAAApL,GACA,MAAA0H,SAAAnY,YAAAyQ,EAAAyD,sBA0BA4nB,GAAAjgB,KAAA,SAAApL,GACA,GAAAhR,GAAA0R,KAAAV,EAIA,OAHAyD,mBAAAzU,KACAA,EAAAyC,GAEAiW,QAAAnY,YAAAyQ,EAAAyD,mBAAAQ,YAAAjV,MAuBAs8B,GAAAlgB,KAAA,SAAApL,GACA,GAAAnQ,GAAA6Q,KAAAV,EAIA,OAHAyD,mBAAA5T,KACAA,EAAA4B,GAEAiW,QAAAnY,YAAAyQ,EAAAyD,mBAAAhS,EAAA5B,KAmBA07B,GAAAngB,KAAAoM,OA4DAgU,GAAApgB,KAAA,SAAApL,GACA,GAAArR,GAAAqR,EAAArR,OACAK,EAAAL,EAAA,EAAAqR,EAAArR,EAAA,GAAA8C,CAGA,OADAzC,GAAA,kBAAAA,IAAAgR,EAAAjH,MAAA/J,GAAAyC,EACAimB,UAAA1X,EAAAhR,KAkHAy8B,GAAArgB,KAAA,SAAA/P,GACAA,EAAAkD,YAAAlD,EAAA,EACA,IAAA1M,GAAA0M,EAAA1M,OACAsI,EAAAtI,EAAA0M,EAAA,KACAhN,EAAAqH,KAAAC,YACAoiB,EAAA,SAAAlmB,GAA0C,MAAAuJ,QAAAvJ,EAAAwJ,GAE1C,SAAA1M,EAAA,GAAA+G,KAAAE,YAAAjH,SACAN,YAAA+G,cAAA0O,QAAA7M,IAGA5I,IAAA8Z,MAAAlR,MAAAtI,EAAA,MACAN,EAAAuH,YAAA/B,MACArF,KAAAif,KACA/e,MAAAqpB,GACAtpB,QAAAgD,IAEA,GAAA4D,eAAAhH,EAAAqH,KAAAG,WAAA4X,KAAA,SAAA3e,GAIA,MAHAH,KAAAG,EAAAH,QACAG,EAAA+E,KAAApC,GAEA3C,KAZA4G,KAAA+X,KAAAsK,KA+PA2T,GAAA1gB,iBAAA,SAAAvb,EAAApB,EAAAsC,GACA2E,GAAA1G,KAAAa,EAAAkB,KAAAlB,EAAAkB,GAAAlB,EAAAkB,GAAA,IAoUAg7B,GAAA3gB,iBAAA,SAAAvb,EAAApB,EAAAsC,GACA2E,GAAA1G,KAAAa,EAAAkB,GACAlB,EAAAkB,GAAAkD,KAAAxF,GAEAoB,EAAAkB,IAAAtC,KAsEAu9B,GAAAxgB,KAAA,SAAA5a,EAAA0O,EAAAxQ,GACA,GAAAQ,GAAA,GACAkN,EAAA,kBAAA8C,GACA2sB,EAAA1sB,MAAAD,GACAzP,EAAAqT,YAAAtS,GAAAT,MAAAS,EAAA7B,UAMA,OAJAoM,IAAAvK,EAAA,SAAAnC,GACA,GAAAG,GAAA4N,EAAA8C,EAAA2sB,GAAA,MAAAx9B,IAAA6Q,GAAAzN,CACAhC,KAAAP,GAAAV,EAAAD,MAAAC,EAAAH,EAAAK,GAAA8R,WAAAnS,EAAA6Q,EAAAxQ,KAEAe,IAgCAq8B,GAAA9gB,iBAAA,SAAAvb,EAAApB,EAAAsC,GACAlB,EAAAkB,GAAAtC,IAmIA09B,GAAA/gB,iBAAA,SAAAvb,EAAApB,EAAAsC,GACAlB,EAAAkB,EAAA,KAAAkD,KAAAxF,IACK,WAAc,gBA6TnB29B,GAAA5gB,KAAA,SAAA5a,EAAA2G,GACA,SAAA3G,EACA,QAEA,IAAA7B,GAAAwI,EAAAxI,MAUA,OATAA,GAAA,GAAA4c,eAAA/a,EAAA2G,EAAA,GAAAA,EAAA,IACAA,KACOxI,EAAA,GAAA4c,eAAApU,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACPA,KAAA,KAEAA,EAAA,GAAAA,EAAAxI,QAAAwG,GAAAgC,EAAA,IACAA,EAAA,GACAoH,YAAApH,EAAA,EAAAoY,uBAEAxL,YAAAvT,EAAA2G,QAsBA8jB,GAAAgN,EAAAhN,IAoIAgR,GAAA7gB,KAAA,SAAA5c,EAAAC,EAAAwb,GACA,GAAArJ,GAAAsL,CACA,IAAAjC,EAAAtb,OAAA,CACA,GAAAub,GAAAjW,eAAAgW,EAAAkD,UAAA8e,IACArrB,IAAAqN,EAEA,MAAA8C,eAAAviB,EAAAoS,EAAAnS,EAAAwb,EAAAC,KAgDAgiB,GAAA9gB,KAAA,SAAAvZ,EAAAlB,EAAAsZ,GACA,GAAArJ,GAAAsL,EAAA4C,CACA,IAAA7E,EAAAtb,OAAA,CACA,GAAAub,GAAAjW,eAAAgW,EAAAkD,UAAA+e,IACAtrB,IAAAqN,EAEA,MAAA8C,eAAApgB,EAAAiQ,EAAA/O,EAAAoY,EAAAC,KAgSAiiB,GAAA/gB,KAAA,SAAA5c,EAAAE,GACA,MAAA4O,WAAA9O,EAAA,EAAAE,KAsBA09B,GAAAhhB,KAAA,SAAA5c,EAAA+O,EAAA7O,GACA,MAAA4O,WAAA9O,EAAAqhB,SAAAtS,IAAA,EAAA7O,IA0FA+sB,SAAAG,MAAAxiB,QAqFA,IAAAizB,IAAAjhB,KAAA,SAAA5c,EAAA0kB,GACAA,EAAA,GAAAA,EAAAvkB,QAAAwG,GAAA+d,EAAA,IACApjB,SAAAojB,EAAA,GAAAnhB,UAAAkS,gBACAnU,SAAAyO,YAAA2U,EAAA,EAAA3D,uBAAAxd,UAAAkS,eAEA,IAAAqoB,GAAApZ,EAAAvkB,MACA,OAAAyc,MAAA,SAAA1c,GAIA,IAHA,GAAAQ,GAAA,GACAP,EAAA2I,GAAA5I,EAAAC,OAAA29B,KAEAp9B,EAAAP,GACAD,EAAAQ,GAAAgkB,EAAAhkB,GAAAN,KAAA8G,KAAAhH,EAAAQ,GAEA,OAAAX,OAAAC,EAAAkH,KAAAhH,OAqCA0tB,GAAAhR,KAAA,SAAA5c,EAAAyb,GACA,GAAAC,GAAAjW,eAAAgW,EAAAkD,UAAAiP,IACA,OAAArL,eAAAviB,EAAAyf,EAAAxc,EAAAwY,EAAAC,KAmCAqiB,GAAAnhB,KAAA,SAAA5c,EAAAyb,GACA,GAAAC,GAAAjW,eAAAgW,EAAAkD,UAAAof,IACA,OAAAxb,eAAAviB,EAAA4hB,EAAA3e,EAAAwY,EAAAC,KAyBAsiB,GAAAphB,KAAA,SAAA5c,EAAAoW,GACA,MAAAmM,eAAAviB,EAAA0f,EAAAzc,MAAA8M,YAAAqG,EAAA,MAibA6nB,GAAA3c,0BAAArQ,QAyBAitB,GAAA5c,0BAAA,SAAAzhB,EAAA+E;AACA,MAAA/E,IAAA+E,IAoDA+B,GAAApF,MAAAoF,QA0HAoH,GAAA8rB,GAAA,SAAAh6B,GACA,MAAAA,aAAAg6B,KADAhC,UAAA,GA82BAsG,GAAA7c,0BAAAlN,QAyBAgqB,GAAA9c,0BAAA,SAAAzhB,EAAA+E,GACA,MAAAA,IAAA/E,IA4SAw+B,GAAA3hB,eAAA,SAAArZ,EAAAoJ,GACA,GAAAgiB,IAAAzJ,YAAAvY,IAAA6H,YAAA7H,GAEA,WADAC,YAAAD,EAAAE,KAAAF,GAAApJ,EAGA,QAAAlB,KAAAsK,GACA3F,GAAA1G,KAAAqM,EAAAtK,IACAkK,YAAAhJ,EAAAlB,EAAAsK,EAAAtK,MAoCAm8B,GAAA5hB,eAAA,SAAArZ,EAAAoJ,GACA,GAAAgiB,IAAAzJ,YAAAvY,IAAA6H,YAAA7H,GAEA,WADAC,YAAAD,EAAAoI,OAAApI,GAAApJ,EAGA,QAAAlB,KAAAsK,GACAJ,YAAAhJ,EAAAlB,EAAAsK,EAAAtK,MAiCAyyB,GAAAlY,eAAA,SAAArZ,EAAAoJ,EAAAmI,EAAAtH,GACAZ,WAAAD,EAAAoI,OAAApI,GAAApJ,EAAAiK,KA+BAixB,GAAA7hB,eAAA,SAAArZ,EAAAoJ,EAAAmI,EAAAtH,GACAZ,WAAAD,EAAAE,KAAAF,GAAApJ,EAAAiK,KAuBAkxB,GAAA5hB,KAAA,SAAAvZ,EAAAwJ,GACA,MAAAD,QAAAvJ,EAAA0M,YAAAlD,EAAA,MA+DAysB,GAAA1c,KAAA,SAAA1c,GAEA,MADAA,GAAAmF,KAAApC,EAAA8I,kBACAhM,MAAA60B,GAAA3xB,EAAA/C,KAuBAu+B,GAAA7hB,KAAA,SAAA1c,GAEA,MADAA,GAAAmF,KAAApC,EAAAijB,eACAnmB,MAAA2+B,GAAAz7B,EAAA/C,KAsXAy+B,GAAAle,eAAA,SAAAxf,EAAApB,EAAAsC,GACAlB,EAAApB,GAAAsC,GACK01B,SAAAhkB,WA6BL+qB,GAAAne,eAAA,SAAAxf,EAAApB,EAAAsC,GACA2E,GAAA1G,KAAAa,EAAApB,GACAoB,EAAApB,GAAAwF,KAAAlD,GAEAlB,EAAApB,IAAAsC,IAEKsT,aAoBLopB,GAAAjiB,KAAA5K,YAmMA8sB,GAAApiB,eAAA,SAAArZ,EAAAoJ,EAAAmI,GACAD,UAAAtR,EAAAoJ,EAAAmI,KAyCA8pB,GAAAhiB,eAAA,SAAArZ,EAAAoJ,EAAAmI,EAAAtH,GACAqH,UAAAtR,EAAAoJ,EAAAmI,EAAAtH,KAsBAyxB,GAAAniB,KAAA,SAAAvZ,EAAAC,GACA,aAAAD,MAGAC,EAAAhC,SAAAyO,YAAAzM,EAAA,GAAAuN,OACA+E,SAAAvS,EAAA8L,eAAA2G,aAAAzS,GAAAC,OAgDAi2B,GAAA3c,KAAA,SAAAvZ,EAAAC,GACA,aAAAD,KAAgCuS,SAAAvS,EAAA/B,SAAAyO,YAAAzM,EAAA,GAAAuN,UAkKhCuT,GAAAhC,cAAAzV,MA0BAqyB,GAAA5c,cAAAvN,QA6XAoqB,GAAAhhB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GAEA,MADAw+B,KAAAlM,cACA/xB,GAAAP,EAAAoyB,WAAAoM,QAoKAC,GAAAlhB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GACA,MAAAO,IAAAP,EAAA,QAAAw+B,EAAAlM,gBAuBAoM,GAAAnhB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GACA,MAAAO,IAAAP,EAAA,QAAAw+B,EAAAlM,gBAoBAqM,GAAAzhB,gBAAA,eA6NA0hB,GAAArhB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GACA,MAAAO,IAAAP,EAAA,QAAAw+B,EAAAlM,gBAgEAuM,GAAAthB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GACA,MAAAO,IAAAP,EAAA,QAAAqyB,GAAAmM,KAwhBAM,GAAAvhB,iBAAA,SAAAhd,EAAAi+B,EAAAx+B,GACA,MAAAO,IAAAP,EAAA,QAAAw+B,EAAA1I,gBAoBAzD,GAAAnV,gBAAA,eAuDAwY,GAAAxZ,KAAA,SAAA5c,EAAAE,GACA,IACA,MAAAH,OAAAC,EAAAiD,EAAA/C,GACO,MAAA6E,GACP,MAAA6pB,SAAA7pB,KAAA,GAAA20B,GAAA30B,MA8BA06B,GAAA7iB,KAAA,SAAAvZ,EAAA40B,GAKA,MAJAt3B,WAAAoP,YAAAkoB,EAAA,YAAA91B,GACAA,EAAA0O,MAAA1O,GACAkB,EAAAlB,GAAAs7B,GAAAp6B,EAAAlB,GAAAkB,KAEAA,IA4HAq8B,GAAA5gB,aAuBA6gB,GAAA7gB,YAAA,GAoJA8gB,GAAAhjB,KAAA,SAAAlM,EAAAxQ,GACA,gBAAAmD,GACA,MAAA2O,YAAA3O,EAAAqN,EAAAxQ,MA2BA2/B,GAAAjjB,KAAA,SAAAvZ,EAAAnD,GACA,gBAAAwQ,GACA,MAAAsB,YAAA3O,EAAAqN,EAAAxQ,MAgKA4/B,GAAAjf,WAAAvf,UA0BAy+B,GAAAlf,WAAAhgB,YA0BAm/B,GAAAnf,WAAA/e,WAgGAm+B,GAAA7e,cAsCA8e,GAAA9e,aAAA,GA+GAthB,GAAA6gB,oBAAA,SAAAwf,EAAAC,GACA,MAAAD,GAAAC,IAwBAlG,GAAAlY,YAAA,QAiBAqe,GAAA1f,oBAAA,SAAA2f,EAAAC,GACA,MAAAD,GAAAC,IAwBApG,GAAAnY,YAAA,SA2KAwe,GAAA7f,oBAAA,SAAA8f,EAAAC,GACA,MAAAD,GAAAC,IAwBAC,GAAA3e,YAAA,SAiBA4e,GAAAjgB,oBAAA,SAAAkgB,EAAAC,GACA,MAAAD,GAAAC,GA2lBA,OAniBAr6B,QAAA0kB,YACA1kB,OAAAsZ,QACAtZ,OAAA43B,UACA53B,OAAA63B,YACA73B,OAAAmuB,gBACAnuB,OAAA83B,cACA93B,OAAA+3B,MACA/3B,OAAA2kB,cACA3kB,OAAAg3B,QACAh3B,OAAAg5B,WACAh5B,OAAAi3B,WACAj3B,OAAAonB,oBACApnB,OAAA4iB,YACA5iB,OAAA6f,YACA7f,OAAA8f,gBACA9f,OAAA+f,cACA/f,OAAAkxB,UACAlxB,OAAAmxB,kBACAnxB,OAAAoxB,kBACApxB,OAAAy2B,WACAz2B,OAAAuqB,cACAvqB,OAAA4kB,YACA5kB,OAAA6kB,sBACA7kB,OAAA8kB,kBACA9kB,OAAA6yB,YACA7yB,OAAAg4B,gBACAh4B,OAAAk3B,SACAl3B,OAAAm3B,SACAn3B,OAAAs1B,cACAt1B,OAAAu1B,gBACAv1B,OAAAw1B,kBACAx1B,OAAAggB,UACAhgB,OAAAigB,oBACAjgB,OAAAkgB,8BACAlgB,OAAAmgB,oBACAngB,OAAAogB,UACApgB,OAAAyjB,cACAzjB,OAAA6jB,gBACA7jB,OAAA8jB,wBACA9jB,OAAA+jB,0BACA/jB,OAAAugB,gBACAvgB,OAAAwgB,wBACAxgB,OAAAygB,0BACAzgB,OAAAumB,UACAvmB,OAAAi5B,QACAj5B,OAAAk5B,aACAl5B,OAAA0gB,oBACA1gB,OAAA+qB,oBACA/qB,OAAAgrB,wBACAhrB,OAAA02B,WACA12B,OAAA6gB,gBACA7gB,OAAAy1B,gBACAz1B,OAAA21B,kBACA31B,OAAA41B,oBACA51B,OAAAk4B,UACAl4B,OAAAm4B,YACAn4B,OAAA22B,aACA32B,OAAAjG,kBACAiG,OAAA62B,SACA72B,OAAAkG,UACAlG,OAAAoO,cACApO,OAAAhH,QACAgH,OAAAqrB,gBACArrB,OAAAsrB,oBACAtrB,OAAAqxB,gBACArxB,OAAAsxB,gCACAtxB,OAAAwmB,gBACAxmB,OAAAq4B,SACAr4B,OAAAi4B,aACAj4B,OAAAm5B,UACAn5B,OAAAo5B,YACAp5B,OAAAuxB,YACAvxB,OAAA4mB,cACA5mB,OAAA6xB,cACA7xB,OAAAs4B,QACAt4B,OAAAurB,cACAvrB,OAAA6mB,UACA7mB,OAAAikB,gBACAjkB,OAAAq5B,QACAr5B,OAAAo3B,YACAp3B,OAAAs5B,aACAt5B,OAAAu5B,YACAv5B,OAAAmnB,WACAnnB,OAAAs3B,gBACAt3B,OAAA82B,aACA92B,OAAA8yB,QACA9yB,OAAAwrB,cACAxrB,OAAAuN,kBACAvN,OAAA8xB,sBACA9xB,OAAA61B,QACA71B,OAAAkhB,gBACAlhB,OAAAmhB,oBACAnhB,OAAAohB,wBACAphB,OAAA81B,UACA91B,OAAAw5B,SACAx5B,OAAAy5B,cACAz5B,OAAAu3B,SACAv3B,OAAAokB,cACApkB,OAAAqhB,cACArhB,OAAAmW,UACAnW,OAAAyY,gBACAzY,OAAAskB,sBACAtkB,OAAA9G,QACA8G,OAAAyrB,gBACAzrB,OAAAwkB,gBACAxkB,OAAAkT,YACAlT,OAAA+2B,UACA/2B,OAAA6hB,sBACA7hB,OAAA8hB,0BACA9hB,OAAA0b,YACA1b,OAAA+mB,cACA/mB,OAAA+hB,UACA/hB,OAAAgiB,UACAhiB,OAAAiiB,oBACAjiB,OAAAkiB,8BACAliB,OAAAmiB,oBACAniB,OAAA6iB,QACA7iB,OAAAgnB,kBACAhnB,OAAAwY,UACAxY,OAAAkjB,gBACAljB,OAAA2d,WACA3d,OAAAu4B,aACAv4B,OAAAgyB,cACAhyB,OAAA2O,4BACA3O,OAAA0rB,oBACA1rB,OAAAinB,YACAjnB,OAAA+1B,SACA/1B,OAAAg2B,WACAh2B,OAAAi2B,aACAj2B,OAAAoiB,UACApiB,OAAAqiB,cACAriB,OAAAsiB,kBACAtiB,OAAA2rB,YACA3rB,OAAAuiB,YACAviB,OAAAyiB,oBACAziB,OAAA4rB,cACA5rB,OAAA6rB,sBACA7rB,OAAAhF,cACAgF,OAAA8rB,kBACA9rB,OAAAk2B,WACAl2B,OAAA0X,YACA1X,OAAAknB,UACAlnB,OAAAm2B,OACAn2B,OAAAo2B,SACAp2B,OAAAq2B,WACAr2B,OAAAs2B,OACAt2B,OAAA0iB,oBACA1iB,OAAA2iB,4BACA3iB,OAAAu2B,WAGAv2B,OAAA+C,QAAA4a,GACA3d,OAAAs6B,UAAA/B,GACAv4B,OAAAu6B,OAAA1C,GACA73B,OAAAw6B,WAAArM,GAGAoD,MAAAvxB,eAKAA,OAAA3G,OACA2G,OAAA2vB,WACA3vB,OAAAw4B,aACAx4B,OAAAqsB,sBACArsB,OAAAyzB,QACAzzB,OAAA+rB,YACA/rB,OAAAwB,YACAxB,OAAAsnB,oBACAtnB,OAAAunB,4BACAvnB,OAAAqnB,oBACArnB,OAAA2X,cACA3X,OAAA45B,UACA55B,OAAA0sB,kBACA1sB,OAAAyF,MACAzF,OAAA6sB,cACA7sB,OAAAgtB,0BACAhtB,OAAAwjB,YACAxjB,OAAA0jB,UACA1jB,OAAAqgB,oBACArgB,OAAAyqB,gBACAzqB,OAAA2jB,kBACA3jB,OAAAsgB,4BACAtgB,OAAA0qB,wBACA1qB,OAAA0zB,SACA1zB,OAAAjB,gBACAiB,OAAAgkB,0BACAhkB,OAAA2qB,YACA3qB,OAAA4qB,sBACA5qB,OAAA6qB,cACA7qB,OAAA8qB,wBACA9qB,OAAA0E,QACA1E,OAAAw3B,MACAx3B,OAAAy3B,OACAz3B,OAAA9C,QACA8C,OAAAiO,YACAjO,OAAA4gB,UACA5gB,OAAAoN,kBACApN,OAAA2I,kBACA3I,OAAAyP,gBACAzP,OAAAgsB,gBACAhsB,OAAAo4B,UACAp4B,OAAA0O,wBACA1O,OAAAE,WACAF,OAAAynB,4BACAznB,OAAA6N,wBACA7N,OAAAwO,oCACAxO,OAAA2nB,oBACA3nB,OAAAsH,YACAtH,OAAA4nB,cACA5nB,OAAA6nB,oBACA7nB,OAAA+nB,gBACA/nB,OAAAioB,gBACAjoB,OAAAkoB,wBACAloB,OAAAmoB,gBACAnoB,OAAAooB,kBACApoB,OAAA+J,sBACA/J,OAAAsoB,oBACAtoB,OAAAoe,kBACApe,OAAAuoB,YACAvoB,OAAAwoB,gBACAxoB,OAAAyoB,wBACAzoB,OAAA0oB,YACA1oB,OAAA6d,kBACA7d,OAAAqG,YACArG,OAAA+oB,cACA/oB,OAAA2oB,kBACA3oB,OAAA+G,kBACA/G,OAAAC,0BACAD,OAAAyO,4BACAzO,OAAAipB,kBACAjpB,OAAAkpB,4BACAlpB,OAAAmpB,YACAnpB,OAAAqe,kBACAre,OAAAiJ,kBACAjJ,OAAAsM,0BACAtM,OAAAqpB,wBACArpB,OAAAspB,oBACAtpB,OAAAwpB,oBACAxpB,OAAAuX,UACAvX,OAAA04B,aACA14B,OAAAyL,UACAzL,OAAAghB,wBACAhhB,OAAA24B,aACA34B,OAAA44B,cACA54B,OAAA03B,MACA13B,OAAA23B,OACA33B,OAAAqyB,QACAryB,OAAAsyB,YACAtyB,OAAAuyB,UACAvyB,OAAAwyB,cACAxyB,OAAAyyB,QACAzyB,OAAA0yB,YACA1yB,OAAA+5B,YACA/5B,OAAAihB,QACAjhB,OAAAyxB,sBACAzxB,OAAA4xB,UACA5xB,OAAAgmB,OACAhmB,OAAAmtB,QACAntB,OAAAqtB,cACArtB,OAAAstB,kBACAttB,OAAAutB,kBACAvtB,OAAAisB,cACAjsB,OAAAkkB,cACAlkB,OAAAmkB,wBACAnkB,OAAA2tB,cACA3tB,OAAA4X,gBACA5X,OAAAxF,cACAwF,OAAAk6B,SACAl6B,OAAAF,0BACAE,OAAAqkB,cACArkB,OAAAlB,UACAkB,OAAA64B,aACA74B,OAAAykB,UACAzkB,OAAAuhB,wBACAvhB,OAAAwhB,4BACAxhB,OAAAyhB,4BACAzhB,OAAA0hB,gCACA1hB,OAAA2hB,oCACA3hB,OAAA4hB,oCACA5hB,OAAA84B,aACA94B,OAAA+tB,sBACA/tB,OAAAm6B,YACAn6B,OAAA2yB,QACA3yB,OAAA4yB,YACA5yB,OAAAguB,kBACAhuB,OAAA+xB,YACA/xB,OAAA2pB,kBACA3pB,OAAAmJ,oBACAnJ,OAAAoJ,kBACApJ,OAAA6vB,gBACA7vB,OAAA4a,kBACA5a,OAAAsqB,4BACAtqB,OAAA3B,kBACA2B,OAAA8vB,gBACA9vB,OAAAgwB,UACAhwB,OAAAiwB,gBACAjwB,OAAAmwB,oBACAnwB,OAAAqwB,kBACArwB,OAAA4wB,kBACA5wB,OAAAiyB,kBACAjyB,OAAA+4B,aACA/4B,OAAAssB,cAGAtsB,OAAAy6B,KAAA17B,QACAiB,OAAA06B,UAAA1W,aACAhkB,OAAA26B,MAAA/Z,KAEA2Q,MAAAvxB,OAAA,WACA,GAAAgG,KAMA,OALA0D,YAAA1J,OAAA,SAAAzG,EAAA6d,GACA/W,GAAA1G,KAAAqG,OAAA+X,UAAAX,KACApR,EAAAoR,GAAA7d,KAGAyM,MACW4c,OAAA,IAWX5iB,OAAA46B,UAGA1gC,WAAA,yEAAAkd,GACApX,OAAAoX,GAAA1Z,YAAAsC,SAIA9F,WAAA,wBAAAkd,EAAAnd,GACAkG,YAAA4X,UAAAX,GAAA,SAAA1a,GACA,GAAAm+B,GAAAp6B,KAAAO,YACA,IAAA65B,IAAA5gC,EACA,UAAAkG,aAAAM,KAEA/D,OAAAF,EAAA,EAAAqO,GAAA1B,UAAAzM,GAAA,EAEA,IAAAlC,GAAAiG,KAAAe,OASA,OARAq5B,GACArgC,EAAA0G,cAAAmB,GAAA3F,EAAAlC,EAAA0G,eAEA1G,EAAA4G,UAAAxC,MACAE,KAAAuD,GAAA3F,EAAAyE,GACAuB,KAAA0U,GAAA5c,EAAAuG,QAAA,gBAGAvG,GAGA2F,YAAA4X,UAAAX,EAAA,kBAAA1a,GACA,MAAA+D,MAAAgY,UAAArB,GAAA1a,GAAA+b,aAKAve,WAAA,qCAAAkd,EAAAnd,GACA,GAAAyI,GAAAzI,EAAA,EACA6gC,EAAAp4B,GAAAG,GAAAH,GAAAq4B,CAEA56B,aAAA4X,UAAAX,GAAA,SAAArd,GACA,GAAAS,GAAAiG,KAAAe,OAMA,OALAhH,GAAAyG,cAAArC,MACA7E,SAAAiV,YAAAjV,EAAA,GACA2I,SAEAlI,EAAAwG,aAAAxG,EAAAwG,cAAA85B,EACAtgC,KAKAN,WAAA,wBAAAkd,EAAAnd,GACA,GAAA+gC,GAAA,QAAA/gC,EAAA,WAEAkG,aAAA4X,UAAAX,GAAA,WACA,MAAA3W,MAAAu6B,GAAA,GAAA5hC,QAAA,MAKAc,WAAA,2BAAAkd,EAAAnd,GACA,GAAAghC,GAAA,QAAAhhC,EAAA,WAEAkG,aAAA4X,UAAAX,GAAA,WACA,MAAA3W,MAAAO,aAAA,GAAAb,aAAAM,WAAAw6B,GAAA,MAIA96B,YAAA4X,UAAA+H,QAAA,WACA,MAAArf,MAAAgjB,OAAArW,WAGAjN,YAAA4X,UAAA2L,KAAA,SAAArpB,GACA,MAAAoG,MAAAgjB,OAAAppB,GAAAumB,QAGAzgB,YAAA4X,UAAA4L,SAAA,SAAAtpB,GACA,MAAAoG,MAAAgY,UAAAiL,KAAArpB,IAGA8F,YAAA4X,UAAA4e,UAAAxgB,KAAA,SAAAlM,EAAAxQ,GACA,wBAAAwQ,GACA,GAAA9J,aAAAM,MAEAA,KAAAzH,IAAA,SAAAI,GACA,MAAAmS,YAAAnS,EAAA6Q,EAAAxQ,OAIA0G,YAAA4X,UAAAqM,OAAA,SAAA/pB,GAEA,MADAA,GAAA2U,YAAA3U,EAAA,GACAoG,KAAAgjB,OAAA,SAAArqB,GACA,OAAAiB,EAAAjB,MAIA+G,YAAA4X,UAAA7E,MAAA,SAAAlR,EAAAC,GACAD,EAAAmH,UAAAnH,EAEA,IAAAxH,GAAAiG,IACA,OAAAjG,GAAAwG,eAAAgB,EAAA,KAAAC,GACA,GAAA9B,aAAA3F,IAEA,EAAAwH,EACAxH,IAAAynB,WAAAjgB,GACOA,IACPxH,IAAAwlB,KAAAhe,IAEAC,IAAAzF,IACAyF,EAAAkH,UAAAlH,GACAzH,EAAA,EAAAyH,EAAAzH,EAAAylB,WAAAhe,GAAAzH,EAAAwnB,KAAA/f,EAAAD,IAEAxH,IAGA2F,YAAA4X,UAAAmK,eAAA,SAAA7nB,GACA,MAAAoG,MAAAgY,UAAA0J,UAAA9nB,GAAAoe,WAGAtY,YAAA4X,UAAAmL,QAAA,WACA,MAAAziB,MAAAuhB,KAAA7gB,IAIAuI,WAAAvJ,YAAA4X,UAAA,SAAAxe,EAAA6d,GACA,GAAA8jB,GAAA,qCAAA37B,KAAA6X,GACA+jB,EAAA,kBAAA57B,KAAA6X,GACAgkB,EAAAp7B,OAAAm7B,EAAA,gBAAA/jB,EAAA,YAAAA,GACAikB,EAAAF,GAAA,QAAA57B,KAAA6X,EAEAgkB,KAGAp7B,OAAA+X,UAAAX,GAAA,WACA,GAAAhe,GAAAqH,KAAAC,YACAjH,EAAA0hC,GAAA,GAAAnkB,UACAskB,EAAAliC,YAAA+G,aACApG,EAAAN,EAAA,GACA8hC,EAAAD,GAAAp7B,GAAA9G,GAEA0pB,EAAA,SAAA1pB,GACA,GAAAoB,GAAA4gC,EAAA9hC,MAAA0G,OAAAjF,WAAA3B,GAAAK,GACA,OAAA0hC,IAAA36B,EAAAhG,EAAA,GAAAA,EAGA+gC,IAAAL,GAAA,kBAAAnhC,IAAA,GAAAA,EAAAL,SAEA4hC,EAAAC,GAAA,EAEA,IAAA/6B,GAAAC,KAAAG,UACA46B,IAAA/6B,KAAAE,YAAAjH,OACA+hC,EAAAJ,IAAA76B,EACAk7B,EAAAJ,IAAAE,CAEA,KAAAH,GAAAE,EAAA,CACAniC,EAAAsiC,EAAAtiC,EAAA,GAAA+G,aAAAM,KACA,IAAAjG,GAAAjB,EAAAD,MAAAF,EAAAK,EAEA,OADAe,GAAAmG,YAAA/B,MAAmCrF,KAAAif,KAAA/e,MAAAqpB,GAAAtpB,QAAAgD,IACnC,GAAA4D,eAAA5F,EAAAgG,GAEA,MAAAi7B,IAAAC,EACAniC,EAAAD,MAAAmH,KAAAhH,IAEAe,EAAAiG,KAAA+X,KAAAsK,GACA2Y,EAAAN,EAAA3gC,EAAApB,QAAA,GAAAoB,EAAApB,QAAAoB,OAKAN,WAAA,yDAAAkd,GACA,GAAA7d,GAAA25B,GAAA9b,GACAukB,EAAA,0BAAAp8B,KAAA6X,GAAA,aACAikB,EAAA,kBAAA97B,KAAA6X,EAEApX,QAAA+X,UAAAX,GAAA,WACA,GAAA3d,GAAAud,SACA,IAAAqkB,IAAA56B,KAAAG,UAAA,CACA,GAAAxH,GAAAqH,KAAArH,OACA,OAAAG,GAAAD,MAAA4G,GAAA9G,QAAAK,GAEA,MAAAgH,MAAAk7B,GAAA,SAAAviC,GACA,MAAAG,GAAAD,MAAA4G,GAAA9G,QAAAK,QAMAiQ,WAAAvJ,YAAA4X,UAAA,SAAAxe,EAAA6d,GACA,GAAAgkB,GAAAp7B,OAAAoX,EACA,IAAAgkB,EAAA,CACA,GAAA1/B,GAAA0/B,EAAA1e,KAAA,GACAkf,EAAApe,GAAA9hB,KAAA8hB,GAAA9hB,MAEAkgC,GAAAh9B,MAAoB8d,KAAAtF,EAAA7d,KAAA6hC,OAIpB5d,GAAApF,oBAAA5b,EAAAqd,GAAA6C,QACAA,KAAA,UACAnjB,KAAAiD,IAIA2D,YAAA4X,UAAAvW,MAAAH,UACAlB,YAAA4X,UAAAU,QAAAlX,YACApB,YAAA4X,UAAA3e,MAAAqI,UAGAzB,OAAA+X,UAAAggB,GAAAvB,GACAx2B,OAAA+X,UAAA6K,MAAAG,aACA/iB,OAAA+X,UAAA8jB,OAAA7Y,cACAhjB,OAAA+X,UAAArZ,KAAAukB,YACAjjB,OAAA+X,UAAAmB,MAAAkK,aACApjB,OAAA+X,UAAAU,QAAA4K,eACArjB,OAAA+X,UAAA+jB,OAAA97B,OAAA+X,UAAAgS,QAAA/pB,OAAA+X,UAAA3e,MAAAmqB,aAEAmG,KACA1pB,OAAA+X,UAAA2R,IAAAvG,mBAEAnjB,OAl0fA,GAAAxD,GAGAo+B,EAAA,SAGAt4B,EAAA,IAGAkG,EAAA,sBAGAjF,EAAA,4BAGAtE,EAAA,yBAGAgY,EAAA,EACA4C,EAAA,EACAuB,EAAA,EACArC,EAAA,EACAe,EAAA,GACAd,EAAA,GACAmC,EAAA,GACArC,EAAA,IACAG,EAAA,IACAc,EAAA,IAGA7M,EAAA,EACAT,EAAA,EAGA6jB,EAAA,GACAE,EAAA,MAGA0E,EAAA,IACAD,EAAA,GAGApyB,EAAA,EACAD,EAAA,EACAm4B,EAAA,EAGAjpB,EAAA,IACA1B,EAAA,iBACAyZ,EAAA,uBACA3tB,EAAA,IAGAiF,EAAA,WACAsQ,EAAAtQ,EAAA,EACA0P,EAAA1P,IAAA,EAGAsG,EAAA,qBACAwE,EAAA,iBACAsQ,EAAA,mBACAC,EAAA,gBACAC,EAAA,iBACArV,EAAA,oBACAC,EAAA,6BACAuU,EAAA,eACAgB,EAAA,kBACApV,EAAA,kBACAmtB,EAAA,mBACA9X,EAAA,kBACAhB,EAAA,eACAiB,EAAA,kBACAE,EAAA,kBACAuM,EAAA,mBACAE,EAAA,mBAEAnN,GAAA,uBACAD,GAAA,oBACAmC,GAAA,wBACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,6BACAC,GAAA,uBACAC,GAAA,uBAGAwQ,GAAA,iBACAC,GAAA,qBACAC,GAAA,gCAGAoB,GAAA,gCACA/D,GAAA,YACA8D,GAAAjC,OAAAkC,GAAA9qB,QACA8mB,GAAA8B,OAAA7B,GAAA/mB,QAGAuuB,GAAA,mBACAC,GAAA,kBACA3F,GAAA,mBAGAxP,GAAA,mDACAD,GAAA,QACA+V,GAAA,sEAMAjI,GAAA,sBACAD,GAAA2B,OAAA1B,GAAAlnB,QAGAgkB,GAAA,aACAoG,GAAA,OACAF,GAAA,OAGAe,GAAA,gBAGAoE,GAAA,WAMAvG,GAAA,kCAGA9a,GAAA,OAGA0Z,GAAA,OAGArD,GAAA,qBAGAH,GAAA,aAGApB,GAAA,8BAGAqB,GAAA,cAGAhL,GAAA,mBAGAqN,GAAA,0CAGAkC,GAAA,OAGAY,GAAA,yBAGAyM,GAAA,kBACAC,GAAA,iCACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,4BACAC,GAAA,uBACAC,GAAA,+CACAC,GAAA,kBACAC,GAAA,+JACAC,GAAA,4BACAC,GAAA,iBACAC,GAAAN,GAAAC,GAAAC,GAAAC,GAGAI,GAAA,OACAC,GAAA,IAAAb,GAAA,IACAc,GAAA,IAAAH,GAAA,IACAI,GAAA,IAAAd,GAAAC,GAAA,IACAc,GAAA,OACAC,GAAA,IAAAd,GAAA,IACAe,GAAA,IAAAd,GAAA,IACAe,GAAA,KAAAnB,GAAAW,GAAAK,GAAAb,GAAAC,GAAAK,GAAA,IACAW,GAAA,2BACAC,GAAA,MAAAN,GAAA,IAAAK,GAAA,IACAE,GAAA,KAAAtB,GAAA,IACAuB,GAAA,kCACAC,GAAA,qCACAC,GAAA,IAAAhB,GAAA,IACAiB,GAAA,UAGAC,GAAA,MAAAT,GAAA,IAAAC,GAAA,IACAS,GAAA,MAAAH,GAAA,IAAAN,GAAA,IACAU,GAAA,MAAAjB,GAAA,yBACAkB,GAAA,MAAAlB,GAAA,yBACAmB,GAAAV,GAAA,IACAW,GAAA,IAAAtB,GAAA,KACAuB,GAAA,MAAAP,GAAA,OAAAJ,GAAAC,GAAAC,IAAAhmB,KAAA,SAAAwmB,GAAAD,GAAA,KACAG,GAAAF,GAAAD,GAAAE,GACAE,GAAA,OAAAlB,GAAAM,GAAAC,IAAAhmB,KAAA,SAAA0mB,GACAE,GAAA,OAAAd,GAAAP,GAAA,IAAAA,GAAAQ,GAAAC,GAAAX,IAAArlB,KAAA,SAGAM,GAAA+W,OAAA+N,GAAA,KAMAlQ,GAAAmC,OAAAkO,GAAA,KAGAt9B,GAAAovB,OAAAuO,GAAA,MAAAA,GAAA,KAAAgB,GAAAF,GAAA,KAGAjN,GAAApC,QACA4O,GAAA,IAAAP,GAAA,IAAAW,GAAA,OAAAf,GAAAW,GAAA,KAAAjmB,KAAA,SACAomB,GAAA,IAAAE,GAAA,OAAAhB,GAAAW,GAAAE,GAAA,KAAAnmB,KAAA,SACAimB,GAAA,IAAAE,GAAA,IAAAE,GACAJ,GAAA,IAAAK,GACAd,GACAmB,IACA3mB,KAAA,UAGAjY,GAAAsvB,OAAA,IAAA6O,GAAA1B,GAAAC,GAAAC,GAAAQ,GAAA,KAGA1L,GAAA,sEAGAgC,IACA,yEACA,uEACA,iEACA,uEACA,uDAIA9D,GAAA,GAGA7F,KACAA,IAAA5K,IAAA4K,GAAA3K,IACA2K,GAAA1K,IAAA0K,GAAAzK,IACAyK,GAAAxK,IAAAwK,GAAAvK,IACAuK,GAAAtK,IAAAsK,GAAArK,IACAqK,GAAApK,KAAA,EACAoK,GAAA3hB,GAAA2hB,GAAAnd,GACAmd,GAAA9M,IAAA8M,GAAA7M,GACA6M,GAAA/M,IAAA+M,GAAA5M,GACA4M,GAAA3M,GAAA2M,GAAAhiB,GACAgiB,GAAAxN,GAAAwN,GAAAxM,GACAwM,GAAA5hB,GAAA4hB,GAAAvM,GACAuM,GAAAvN,GAAAuN,GAAAtM,GACAsM,GAAAG,IAAA,CAGA,IAAA3hB,MACAA,IAAAH,GAAAG,GAAAqE,GACArE,GAAA0U,IAAA1U,GAAAyU,IACAzU,GAAA2U,GAAA3U,GAAA4U,GACA5U,GAAA4W,IAAA5W,GAAA6W,IACA7W,GAAA8W,IAAA9W,GAAA+W,IACA/W,GAAAgX,IAAAhX,GAAAgU,GACAhU,GAAAgV,GAAAhV,GAAAJ,GACAI,GAAAiV,GAAAjV,GAAAiU,GACAjU,GAAAkV,GAAAlV,GAAAoV,GACApV,GAAAiX,IAAAjX,GAAAkX,IACAlX,GAAAmX,IAAAnX,GAAAoX,KAAA,EACApX,GAAA6U,GAAA7U,GAAAR,GACAQ,GAAA2hB,IAAA,CAGA,IAAA1rB,KACAugC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,MAIAjkC,IACAkkC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,QACAC,IAAA,SAIA1iC,IACA2iC,QAAU,IACVC,OAAS,IACTC,OAAS,IACTC,SAAW,IACXC,QAAU,IACVC,QAAU,KAIVC,IACAC,YAAA,EACAnmC,QAAA,GAIAsB,IACA8kC,KAAA,KACAV,IAAA,IACAW,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAIAhX,GAAAiX,WACAjZ,GAAAmD,SAGA+V,GAAAR,SAAApqC,WAAAovB,SACApvB,EACA8D,EAGA+mC,GAAAT,SAAArqC,WAAAqvB,SACArvB,EACA+D,EAGA62B,GAAAkQ,OAAA7qC,UAAA4qC,GACAA,GACA9mC,EAGAgnC,GAAAjmC,YAAA+lC,IAAAC,IAAA,gBAAAzqC,OAGA2qC,GAAAlmC,YAAAulC,SAAAY,cAGAC,GAAApmC,YAAAulC,SAAAc,kBAGAC,GAAAtmC,YAAAulC,SAAAriC,cAQAoW,GAAA2sB,IACAG,MAAAE,OAAAD,SAAAD,IACAF,IAAAI,IAAAjU,SAAA,iBAk9eA8B,GAAA5xB,gBAOA6jC,IAAAF,QAA+B/R,KAM/B74B,EAAA,WACA,MAAA64B,KACK/3B,KAAAjB,EAAAC,EAAAD,EAAAD,KAAAI,IAAA2D,IAAA/D,EAAAC,QAAAG,MAeJc,KAAA8G,QFc6B9G,KAAKjB,EAASC,EAAoB,KAAKF,GAAU,WAAa,MAAOgI,WAI7FqjC,IACA,SAASrrC,EAAQC,EAASC,GAK/B,YGr4fD,IAAAorC,GAAAprC,EAAmD,GACnDqrC,EAAArrC,EAA0B,IAI1BsrC,EAAAtrC,EAAqC,KAErCurC,EAAAvrC,EAA+B,KAC/BwrC,EAAAxrC,EAGO,KACPyrC,EAAAzrC,EAA4B,KAqB5B0rC,EAAA,WAKE,QAAAA,KAAoBC,GALtB,GAAAC,GAAA9jC,IAKsBA,MAAA6jC,oBAFpB7jC,KAAA+jC,QAAkB,EAKhBF,EAAkBG,OAAOC,UAAU,SAACC,GAClCA,EAAQC,SACRL,EAAKC,QAAS,IAKpB,MAhCAH,KAAAQ,YAACd,EAAAe,WACCC,SAAU,oBAEVC,SACAC,QAAStsC,EAAQ,MACjBusC,YAAaf,EAAAgB,0BAA2Bf,EAAAgB,eACxCC,cAAetB,EAAAuB,kBAAkBC,KACjCvX,SAAUr1B,EAAQ,KAElB6sC,eAGDxB,EAAAyB,cAEEx7B,KAAM,OAAQyS,KAAM,gBAAiBgpB,UAAWzB,EAAA0B,0BHq4f1CC,WAAW,qBAAsB1B,EAAoB2B,oBACtDxB,OGn4fK3rC,GAAA2rC,IAAGA,GH24fVyB,IACA,SAASrtC,EAAQC,GIj7fvBD,EAAAC,QAAA,mrEJu7fMqtC,IACA,SAASttC,EAAQC,GAKtB,YKl6fD,SAAAstC,gBAA+BC,GAC7B,MAAO,UAACtZ,EAAgBjxB,GACtB,GAAkBc,SAAdypC,EAAyB,CAE3B,GAAIC,GAAW,MACf,IAAiB1pC,SAAb0pC,GAAuC,SAAbA,EAC5B,KAAM,IAAIjT,OAAM,8CAElB,IAAsB,WAAlBiT,EAASxpB,KACXupB,EAAYvtC,EAAAytC,oBACP,IAAsB,YAAlBD,EAASxpB,KAClBupB,EAAYvtC,EAAA0tC,qBACP,IAAsB,WAAlBF,EAASxpB,KAGlB,KAAM,IAAIuW,OAAM,qDAAqDiT,EAASxpB,KAAI,IAFlFupB,GAAYvtC,EAAA2tC,iBAMhB,GAAIC,GAAa9oC,OAAO+oC,yBAAyB5Z,EAAQjxB,EACrD4qC,GACF9oC,OAAOgpC,eAAe7Z,EAAQjxB,GAC5BgJ,IAAK4hC,EAAW5hC,IAChBxL,IAAK,SAAAoV,GACHg4B,EAAWptC,IAAI+sC,EAAU33B,KAE3Bm4B,YAAY,EACZC,cAAc,IAGhBlpC,OAAOgpC,eAAe7Z,EAAQjxB,GAC5BgJ,IAAK,WACH,MAAOjE,MAAK,KAAO/E,IAErBxC,IAAK,SAAUoV,GACb7N,KAAK,KAAO/E,GAAOuqC,EAAU33B,IAE/Bm4B,YAAY,EACZC,cAAc,KA1DXhuC,EAAAytC,gBAAkB,SAAC/sC,GAC5B,MAAc,QAAVA,GAA4BoD,SAAVpD,GAAwC,gBAAVA,GAC3CA,EAEFA,EAAMiF,YAGJ3F,EAAA0tC,iBAAmB,SAAChtC,GAC7B,MAAc,QAAVA,GAA4BoD,SAAVpD,GAAwC,iBAAVA,GAC3CA,EAEmB,SAArBA,EAAMiF,YAGJ3F,EAAA2tC,gBAAkB,SAACjtC,GAC5B,MAAc,UAAVA,GAA8BoD,SAAVpD,GAAwC,gBAAVA,GAC7CA,EAEFiqC,WAAWjqC,EAAMiF,aAEV3F,EAAAstC,eAAcA,gBLw+fxBW,GACA,SAASluC,EAAQC,GAKtB,YM7/fYA,GAAAkuC,sBACXC,OAAQ,SACRC,MAAO,SAWIpuC,EAAAquC,YACXC,QAAS,UACTC,UAAW,YACXC,QAAS,UAcExuC,GAAAyuC,eACXC,UAAW,YACXC,UAAW,YACXC,QAAS,WAIE5uC,EAAA6uC,eACXC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,MAAO,SAKIjvC,EAAAkvC,UACXC,UAAW,aACXC,KAAM,OACNC,SAAU,YACVC,SAAU,YACVC,OAAQ,SACRC,QAAS,UACTC,OAAQ,SACRC,GAAI,gBACJC,IAAK,MACLC,IAAK,MACLC,QAAS,UACTC,OAAQ,UAIG9vC,EAAA+vC,YAAc/vC,EAAAkvC,SAASC,UAAWnvC,EAAAkvC,SAASE,KACtDpvC,EAAAkvC,SAASG,SAAUrvC,EAAAkvC,SAASI,SAC5BtvC,EAAAkvC,SAASK,OAAQvvC,EAAAkvC,SAASM,SACfxvC,EAAAgwC,cAAgBhwC,EAAAkvC,SAASO,OAAQzvC,EAAAkvC,SAASQ,GAAI1vC,EAAAkvC,SAASS,IAAK3vC,EAAAkvC,SAASU,IAChF5vC,EAAAkvC,SAASW,QAAS7vC,EAAAkvC,SAASY,OAI7B,IAAAG,GAAA,mBAAAA,mBAIA,MAAAA,kBAJajwC,GAAAiwC,eAAcA,EAOdjwC,EAAAkwC,QACXC,KAAM,OACNC,OAAQ,UAGGpwC,EAAAqwC,YACXC,SAAU,WACVC,SAAU,WACVC,YAAa,cACbC,SAAU,WAIZ,IAAAC,GAAA,mBAAAA,gBAKA,MAAAA,eALa1wC,GAAA0wC,YAAWA,EA2CX1wC,EAAA2wC,aACXC,QAAS,UACTC,OAAQ,SACRC,OAAQ,SACRC,KAAM,OAaR,IAAAC,GAAA,mBAAAA,cAIA,MAAAA,aAJahxC,GAAAgxC,UAASA,EAyBThxC,EAAAixC,SACXC,UAAW,SAAUxwC,GACnB,MAAQA,GAAMwe,QAAQ,KAAM,KAAK2U,eAEnCsd,gBAAiB,kBACjBC,gBAAiB,kBACjBC,cAAe,gBACfC,qBAAsB,uBACtBC,eAAgB,iBAChBC,WAAY,aACZC,cAAe,gBACfC,cAAe,gBACfC,MAAO,QACPC,OAAQ,SACRC,YAAa,cACbC,SAAU,WACVC,QAAS,UACTC,YAAa,cACbC,SAAU,WACVC,aAAc,eACdC,cAAe,gBACfC,gBAAiB,kBACjBC,OAAQ,SACRC,IAAK,QN86fDC,IACA,SAASxyC,EAAQC,EAASC,GAK/B,YOjogBD,IAAAorC,GAAAprC,EAAkC,GAGlCuyC,EAAA,mBAAAA,qBAKA,MAHEA,kBAAAnzB,UAAA2T,UAAA,SAAUtyB,EAAYK,GACpB,MAAOL,GAAM+xC,kBAJjBD,iBAAArG,YAACd,EAAAqH,MAAM1uB,KAAM,iBPyogBJkpB,WAAW,yBACZsF,oBOzogBKxyC,GAAAwyC,iBAAgBA,GPipgBvBG,IACA,SAAS5yC,EAAQC,EAASC,GAK/B,YQ3pgBD,IAAA2yC,GAAA3yC,EAAgC,GAChCorC,EAAAprC,EAAkC,GAClC4yC,EAAA5yC,EAGE,IAIF6yC,EAAA,mBAAAA,gBAeA,MAdEA,aAAAzzB,UAAA2T,UAAA,SAAUtyB,EAAeK,GAKvB,QAAAH,OAAemyC,GACb,MAAOA,GAAIp0B,OAAO,GAAG0Y,cAAgB0b,EAAIv4B,MAAM,GALjD,GADuB,SAAAzZ,UACnB6xC,EAAAI,QAAQtyC,GAAQ,MAAOA,EAC3B,KAAKkyC,EAAAjtB,SAASjlB,GACZ,KAAM,IAAImyC,GAAAI,6BAA6BH,YAAapyC,EAMtD,OAAIK,GAAKC,OACAN,EAAMsiB,MAAMjiB,EAAK,IAAIT,IAAIM,OAAOie,KAAK9d,EAAK,IAE5CH,MAAMF,IAdjBoyC,YAAA3G,YAACd,EAAAqH,MAAM1uB,KAAM,YR2qgBJkpB,WAAW,yBACZ4F,eQ3qgBK9yC,GAAA8yC,YAAWA,GRmrgBlBI,GACA,SAASnzC,EAAQC,EAASC,GAK/B,YSzrgBD,SAAAu9B,SAAwB36B,EAAYswC,GAElC,IAAKtwC,EAAY,MAAO7C,GAAAk5B,IACxB,IAAI33B,GAAQsB,EAAWkU,QAAQo8B,EAK/B,OAJc,KAAV5xC,GAAgB4xC,EAAQxrC,eAAe,QACzCpG,EAAQsB,EAAWkU,QAAQiiB,EAAEhO,KAAKnoB,GAAa42B,GAAI0Z,EAAQ1Z,OACzDl4B,EAAQ,IAAIsB,EAAWwI,OAAO9J,EAAO,GAElC,WACLsB,EAAWwI,OAAO9J,EAAO,EAAG4xC,IAKhC,QAAAC,aAA4Bn7B,EAAKC,GAC/B,GAAIX,GAAO,CAEyB,MAAhCU,EAAItS,WAAWoR,QAAQ,MAAgD,KAAjCmB,EAAKvS,WAAWoR,QAAQ,OAChEQ,EAAO,GAIT,KAAK,GAFDupB,MAEKuS,EAAIp7B,EAAUC,GAALm7B,EAAWA,GAAK97B,EAEhCupB,EAAM56B,KAAKmtC,EAGb,OAAOvS,GAKT,QAAAhB,WAA0B9b,GACxB,MAAOA,GAAK9E,QAAQo0B,EAAsB,SAAUta,EAAG5Q,EAAWljB,EAAQ3C,GACxE,MAAOA,GAAS2C,EAAOmyB,cAAgBnyB,IAI3C,QAAAquC,cAAgCC,EAAwBrlB,GACtD,QAAAK,MAAcilB,GACZ,MAAO,IAAIC,GAAAC,WAAc,SAAAz1B,GAAM,MAAAu1B,GAAIzH,UAAU9tB,KAG/C,MALsD,UAAAiQ,OAAA,GAMlDK,KADGL,EACEqlB,EAAQvR,MAAM,SAAC2R,EAAQC,EAAK7a,GAAM,MAAA4Z,GAAAprC,QAAQosC,KAAeA,EAAG5yC,SAAW4yC,IACvEJ,GAtDX,GAAYxa,GAAC/4B,EAAM,KACnByzC,EAAAzzC,EAAyB,GACzB2yC,EAAA3yC,EAAsB,EAGTD,GAAAk5B,KAAO,aAIJl5B,EAAAw9B,QAAOA,QAcPx9B,EAAAozC,YAAWA,WAiB3B,IAAME,GAAuB,iBACbtzC,GAAA8/B,UAASA,UAMT9/B,EAAAuzC,aAAYA,cTwsgBtBO,IACA,SAAS/zC,EAAQC,EAASC,GAK/B,YU5vgBD,IAAAorC,GAAAprC,EAAkC,GAMlC8zC,EAAA,mBAAAA,0BASA,MAPEA,uBAAA10B,UAAA2T,UAAA,SAAU1wB,EAAqB0xC,GV0vgBxB,GU1vgByBC,GAAAD,EAAA,EAC9B,IAAyB,IAArBC,EAAUjzC,OACZ,MAAOsB,EAET,IAAI4xC,GAAMD,EAAU3zC,IAAI,SAAC6zC,GAAoB,MAAAA,GAAK1a,IAClD,OAAOn3B,GAAOyoB,OAAO,SAACopB,GAAoB,MAAyB,KAAzBD,EAAIn9B,QAAQo9B,EAAK1a,OAX/Dsa,sBAAA5H,YAACd,EAAAqH,MACC1uB,KAAM,oBACNowB,MAAM,IV0wgBClH,WAAW,yBACZ6G,yBUzwgBK/zC,GAAA+zC,sBAAqBA,GVixgB5BM,IACA,SAASt0C,EAAQC,GW7xgBvBD,EAAAC,QAAA,4rCXmygBMs0C,IACA,SAASv0C,EAAQC,GYpygBvBD,EAAAC,QAAA,ymCZ0ygBMu0C,IACA,SAASx0C,EAAQC,EAASC,GAK/B,Ya5ygBD,IAAAorC,GAAAprC,EAAwE,GACxEu0C,EAAAv0C,EAA6D,IAC7Dw0C,EAAAx0C,EAAwB,KACxBy0C,EAAAz0C,EAA4B,KAC5B00C,EAAA10C,EAAqD,KACrD20C,EAAA30C,EAGO,IAEP40C,EAAA50C,EAAuC,KACvC60C,EAAA70C,EAA8B,IAC9B80C,EAAA90C,EAAoC,KACpC2yC,EAAA3yC,EAAmC,GACnC+0C,EAAA/0C,EAA0B,IAC1Bg1C,EAAAh1C,EAA2B,IAC3Bi1C,EAAAj1C,EAAgE,KACpD+4B,EAAC/4B,EAAM,IA2BnBk1C,EAAA,WA4BE,QAAAA,oBAAoBC,GAAArtC,KAAAqtC,qBAzBXrtC,KAAAstC,YASCttC,KAAAutC,MAAQ,GAAIjK,GAAAkK,aACZxtC,KAAAytC,QAAU,GAAInK,GAAAkK,aAMxBxtC,KAAA0tC,cAAwB,GAIhB1tC,KAAA2tC,mBAsJV,MA5IE5wC,QAAAgpC,eAAIqH,mBAAA91B,UAAA,kBbwvgBGrT,IaxvgBP,WAEE,MAAQjE,MAAK4tC,WAAa/C,EAAA3iB,SAASloB,KAAK4tC,WACpC5tC,KAAK4tC,UAAa/C,EAAAvhC,WAAWtJ,KAAK4tC,WAAc5tC,KAAK4tC,YAAc,GbyvgBlE5H,YAAY,EACZC,cAAc,IavvgBrBmH,mBAAA91B,UAAAu2B,SAAA,cAAA/J,GAAA9jC,KAGM8tC,EAAO9tC,KAAKylC,SAEZsI,EAAW/tC,KAAKguC,mBAChBhuC,KAAKguC,mBACLhuC,KAAKqtC,mBAAmBY,OAAOH,EAAKI,UAAWluC,KAAKmuC,cACxDnuC,MAAKouC,cAAgBL,EAAS9J,UAAU,SAAAjmC,GACtC8lC,EAAK6J,mBACL7J,EAAKuK,YAAcrwC,EACnB8lC,EAAKwK,UAAU5c,GAAK31B,OACpBiC,EAAKM,QAAQ,SAAC8tC,GAA4B,MAAAtI,GAAK6J,gBAAgBvB,EAAK1a,IAAM0a,IACtEpuC,EAAK/E,QAEP6qC,EAAKyK,uBAOXxxC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,uBbovgBGrT,IapvgBP,WACE,MAAOjE,MAAKwuC,sBbsvgBP/1C,IajvgBP,SAAwBE,GAElBqH,KAAKwuC,uBAAyB71C,IAChCqH,KAAKsuC,UAAU5c,GAAK,QAEtB1xB,KAAKwuC,qBAAuB71C,CAC5B,IAAI81C,GAAQzuC,KAAK0uC,YACZ1uC,KAAKsuC,UAAU5c,IAAM+c,EAAMx1C,QAC9B+G,KAAK2uC,uBAAuBF,EAAM,GAAG/c,KbmvgBlCsU,YAAY,EACZC,cAAc,IahvgBrBlpC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,cbmvgBGrT,IanvgBP,WACE,GAAI1J,GAASyF,KAAKquC,YAChBpmB,MAAMjoB,KAAK4uC,uBAAyB5uC,KAAK4uC,oBACrC5uC,KAAKquC,YAAcpd,EAAEjO,OAAOhjB,KAAKquC,aAAc3c,GAAI1xB,KAAK4uC,wBAU9D,OAJsB,KAAlBr0C,EAAOtB,QAET+G,KAAK2uC,uBAAuBp0C,EAAO,GAAGm3B,IAEjCn3B,GbmvgBFyrC,YAAY,EACZC,cAAc,IajvgBrBlpC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,kBbovgBGrT,IapvgBP,WACE,OAAQipC,EAAA2B,aAAa7uC,KAAKylC,SAASyI,YbsvgB9BlI,YAAY,EACZC,cAAc,IapvgBrBlpC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,gBbuvgBGrT,IavvgBP,WACE,MAAKjE,MAAKsuC,UAAU5c,GAGb1xB,KAAK2tC,gBAAgB3tC,KAAKsuC,UAAU5c,IAH3C,Qb4vgBKsU,YAAY,EACZC,cAAc,IatvgBrBlpC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,mBbyvgBGrT,IazvgBP,WACE,IAAKjE,KAAKsuC,UAAU5c,GAClB,QAGF,IAAAua,IAAA,KAAK/7B,EAAA+7B,EAAA,GAAK97B,EAAA87B,EAAA,EAEV,OAAOgB,GAAA5B,YAAYn7B,EAAKC,Ib0vgBnB61B,YAAY,EACZC,cAAc,IatvgBrBmH,mBAAA91B,UAAAi3B,kBAAA,WAIOvuC,KAAKsuC,UAAU5c,IAAiC,IAA3B1xB,KAAK0uC,WAAWz1C,SACxC+G,KAAKsuC,UAAU5c,GAAK1xB,KAAK0uC,WAAW,GAAGhd,IAEzC1xB,KAAK2uC,uBAAuB3uC,KAAKsuC,UAAU5c,KAI7C0b,mBAAA91B,UAAAq3B,uBAAA,SAAuBjd,GACrB1xB,KAAKsuC,UAAU5c,GAAKA,EACpB1xB,KAAK8uC,kBAAoB9uC,KAAK2tC,gBAAgBjc,GAE9C1xB,KAAK0tC,cAAgB1tC,KAAK8uC,kBAAkB7yB,KAE5Cjc,KAAK+uC,gBAAkB/uC,KAAK8uC,kBAAkBE,QAAUnC,EAAAjE,YAAYC,SAGtEuE,mBAAA91B,UAAA23B,eAAA,WACEjvC,KAAKutC,MAAM2B,MACTf,cAAenuC,KAAKmuC,cACpBG,WACE5c,GAAI1xB,KAAKsuC,UAAU5c,GACnB/4B,MAAOqH,KAAKsuC,UAAU31C,UAK5By0C,mBAAA91B,UAAA63B,kBAAA,WACEnvC,KAAKytC,QAAQyB,MACXZ,UAAWtuC,KAAKsuC,UAChBH,cAAenuC,KAAKmuC,iBAIxBpxC,OAAAgpC,eAAIqH,mBAAA91B,UAAA,mBbkvgBGrT,IalvgBP,WAEE,OAAO,GbovgBF+hC,YAAY,EACZC,cAAc,IalvgBrBmH,mBAAA91B,UAAA83B,wBAAA,SAAwBz2C,GACtBqH,KAAKsuC,UAAU31C,MAAQA,GAGzBy0C,mBAAA91B,UAAA+3B,YAAA,WACErvC,KAAKouC,cAAckB,eArKrBlL,YAACd,EAAAiM,Qb45gBMpK,WAAW,cAAeuH,EAAmB8C,YAC9CpC,mBAAmB91B,UAAW,YAAa,Qa55gBjD8sB,YAACd,EAAAiM,Qb+5gBMpK,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,WAAY,Qa/5gBhD8sB,YAACd,EAAAiM,Qbk6gBMpK,WAAW,cAAe9qC,QAC3B+yC,mBAAmB91B,UAAW,WAAY,Qaj6gBhD8sB,YAACd,EAAAiM,MAAM,kBbo6gBApK,WAAW,cAAe1mB,SAC3B2uB,mBAAmB91B,UAAW,gBAAiB,Qan6gBrD8sB,YAACd,EAAAiM,MAAM,abs6gBApK,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,YAAa;Aal6gBjD8sB,YAACd,EAAAmM,Sbq6gBMtK,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,QAAS,Qar6gB7C8sB,YAACd,EAAAmM,Sbw6gBMtK,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,UAAW,Qah6gB/C8sB,YAACd,EAAAiM,MAAM,uBbm6gBApK,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,qBAAsB,Qaz3gB1D8sB,YAACd,EAAAiM,MAAM,sBACNpC,EAAA5H,eAAe4H,EAAAvH,iBb43gBTT,WAAW,cAAepoC,SAC3BqwC,mBAAmB91B,UAAW,sBAAuB,Max8gB7D81B,mBAAAhJ,YAACd,EAAAe,WACCC,SAAU,iBACVC,OAAQoI,EAAA+C,cAAe1C,EAAAhB,uBACvBze,SAAUr1B,EAAQ,KAClBssC,QAAStsC,EAAQ,MACjBusC,YAAagI,EAAAkD,MAAO7C,EAAA8C,yBAA0B7C,EAAA8C,gBAC5CpD,EAAAqD,SAAUrD,EAAAsD,aAActD,EAAAuD,mBb48gBnB7K,WAAW,qBAAsByH,EAAqBqD,qBACvD7C,sBa18gBKn1C,GAAAm1C,mBAAkBA,Gbk9gBzB8C,IACA,SAASl4C,EAAQC,EAASC,GAK/B,YcnghBD,IAAAorC,GAAAprC,EAAkC,GAClCu0C,EAAAv0C,EAA0B,IAGpBi4C,EAAmB,IACnBC,EAAc,GAGpBV,EAAA,mBAAAA,kBAmBA,MAjBEA,eAAAp4B,UAAA2T,UAAA,SAAUtyB,EAAeq2C,GAEvB,GAFuB,SAAAA,MAAsBvC,EAAA7D,YAAYE,QAErDkG,IAAWvC,EAAA7D,YAAYI,KAAM,MAAOvqB,QAAO9lB,GAAO42B,MACtD,IAAIjO,GAAO0tB,IAAWvC,EAAA7D,YAAYC,QAAU,IAAM,EAClD,QAAKlwC,GAASsvB,MAAMtvB,GAAe,IAAM2oB,EAGrC0tB,IAAWvC,EAAA7D,YAAYC,QAClBlwC,EAAQ,IAEbq2C,IAAWvC,EAAA7D,YAAYG,QAClBpwC,GAASw3C,GACfC,EAA4C,MAA5Bz3C,EAAQw3C,IAA2BE,QAAQ,GAAK,IAG5D13C,EAAM+xC,kBAlBjBgF,cAAAtL,YAACd,EAAAqH,MAAM1uB,KAAM,cduhhBJkpB,WAAW,yBACZuK,iBcvhhBKz3C,GAAAy3C,cAAaA,Gd+hhBpBY,IACA,SAASt4C,EAAQC,Ge7ihBvBD,EAAAC,QAAA,8cfmjhBMs4C,IACA,SAASv4C,EAAQC,EAASC,GAK/B,YgBpjhBD,IAAAorC,GAAAprC,EAA2C,GAE3Cs4C,EAAAt4C,EAAgE,KAChEu0C,EAAAv0C,EAAoB,IACpB+0C,EAAA/0C,EAAsB,IAEtB60C,EAAA70C,EAA8B,IAC9Bi1C,EAAAj1C,EAA+C,KAY/Cu4C,EAAA,WAQE,QAAAA,qBAAoBC,GAAA1wC,KAAA0wC,cAFpB1wC,KAAA2wC,QAAkB,EAmDpB,MA5CE5zC,QAAAgpC,eAAI0K,oBAAAn5B,UAAA,mBhBiihBGrT,IgBjihBP,WACE,MAAOjE,MAAK0uC,WAAa1uC,KAAK0uC,WAAWkC,UhBmihBpC5K,YAAY,EACZC,cAAc,IgBjihBrBlpC,OAAAgpC,eAAI0K,oBAAAn5B,UAAA,mBhBoihBGrT,IgBpihBP,WACE,MAAOjE,MAAK0uC,WAAa1uC,KAAK0uC,WAAWmC,UhBsihBpC7K,YAAY,EACZC,cAAc,IgBnihBrBlpC,OAAAgpC,eAAI0K,oBAAAn5B,UAAA,mBhBsihBGrT,IgBtihBP,WACE,MAAOjE,MAAK0uC,WAAa1uC,KAAK0uC,WAAWoC,UhBwihBpC9K,YAAY,EACZC,cAAc,IgBrihBrBwK,oBAAAn5B,UAAA63B,kBAAA,SAAkB4B,GAEhB9D,EAAAxX,QAAQz1B,KAAK0uC,WAAWqC,EAAM5C,eAAgB4C,EAAMzC,WACpDtuC,KAAKgxC,eAAe,mBAAoBD,IAG1CN,oBAAAn5B,UAAA23B,eAAA,SAAe8B,GAEb/wC,KAAK0uC,WAAWqC,EAAM5C,eACnBhwC,KAAK4yC,EAAMzC,WACdtuC,KAAKgxC,eAAe,iBAAkBD,IAIxCN,oBAAAn5B,UAAA25B,mBAAA,SAAmB9C,GACjBnuC,KAAK0uC,WAAWP,GAAehwC,MAC7BxF,MAAO,KAIH83C,oBAAAn5B,UAAA05B,eAAR,SAAuB/uC,EAAc8uC,GACnC/wC,KAAK0wC,YAAYQ,cAAcC,cAAc,GAAIC,aAAYnvC,GAE3DovC,QACE/C,UAAWyC,EAAMzC,UACjBH,cAAe4C,EAAM5C,mBAlD3B/J,YAACd,EAAAiM,MAAM,QhBwlhBApK,WAAW,cAAepoC,SAC3B0zC,oBAAoBn5B,UAAW,aAAc,QgBxlhBnD8sB,YAACd,EAAAiM,MAAM,iBhB2lhBApK,WAAW,cAAepoC,SAC3B0zC,oBAAoBn5B,UAAW,WAAY,QgB3lhBjD8sB,YAACd,EAAAiM,MAAM,WACNpC,EAAA5H,eAAe4H,EAAAxH,kBhB8lhBTR,WAAW,cAAemM,UAC3Bb,oBAAoBn5B,UAAW,SAAU,QgB7mhBjDm5B,oBAAArM,YAACd,EAAAe,WAECC,SAAU,kBAEViN,YAAa,sDAEb/M,QAAStsC,EAAQ,MACjBusC,YAAagI,EAAAkD,MAAOa,EAAApD,mBAAoBL,EAAA8C,mBhB8mhBjC1K,WAAW,qBAAsB7B,EAAOkO,cACzCf,uBgB7mhBKx4C,GAAAw4C,oBAAmBA,GhBqnhB1BgB,IACA,SAASz5C,EAAQC,GAKtB,YiBvohBD,IAAAu3C,GAAA,mBAAAA,cAIA,MAAAA,aAJav3C,GAAAu3C,UAASA,GjBkphBhBkC,IACA,SAAS15C,EAAQC,EAASC,GAK/B,YkBhqhBD,IAAAorC,GAAAprC,EAAgC,GAChCy5C,EAAAz5C,EAAoC,KACpCqrC,EAAArrC,EAA0B,IAM1B05C,EAAA,WAGE,QAAAA,uBAAoBC,EAAoCC,GAApC9xC,KAAA6xC,gBAAoC7xC,KAAA8xC,eAc1D,MATEF,uBAAAt6B,UAAAu2B,SAAA,WACE,GAAIkE,GAA0B/xC,KAAK8xC,aAAa7tC,IAAI,WACpD,IAAI8tC,EAAe,CACjB,GAAIC,GAAWhyC,KAAK6xC,cAAcI,QAAQF,EAC1CC,GAASh7B,SAAShX,KAAK8xC,gBAhB7BF,sBAAAxN,YAACd,EAAAe,WACCC,SAAU,gBACV/W,SAAUr1B,EAAQ,OlB+qhBXitC,WAAW,qBAAsBwM,EAAkBO,YAAa3O,EAAoB4O,eACrFP,yBkB9qhBK35C,GAAA25C,sBAAqBA,GlBsrhB5BQ,IACA,SAASp6C,EAAQC,GmBnshBvBD,EAAAC,QAAA,yFnByshBMo6C,IACA,SAASr6C,EAAQC,EAASC,GAE/B,YoB5shBD,IAAAo6C,GAAAp6C,EAAoC,KACpCorC,EAAAprC,EAAgC,GAShCysC,EAAA,WAEE,QAAAA,eAAoBkN,GAAA7xC,KAAA6xC,gBAYtB,MARElN,eAAArtB,UAAAi7B,MAAA,SAAMtwC,GACJ,GAAI+vC,GAAWhyC,KAAK6xC,cAAcI,QAAQhwC,EAC1C+vC,GAASO,QAAQtO,UACf,SAAAuO,GAAO,MAAAC,SAAQC,IAAIF,IACnB,SAAAG,GAAS,MAAAF,SAAQE,MAAMA,IACvB,WAAM,MAAAF,SAAQC,IAAI,sBAfxB/N,cAAAP,YAACd,EAAAe,WACCC,SAAU,OACV/W,SAAUr1B,EAAQ,OpButhBXitC,WAAW,qBAAsBmN,EAAeJ,eACjDvN,iBoBtthBK1sC,GAAA0sC,cAAaA,GpB8thBpBiO,IACA,SAAS56C,EAAQC,GqBzuhBvBD,EAAAC,QAAA,0qBrB+uhBM46C,IACA,SAAS76C,EAAQC,EAASC,GAK/B,YsBhvhBD,IAAAorC,GAAAprC,EAYO,GACPu0C,EAAAv0C,EAA+D,IACnD+4B,EAAC/4B,EAAM,IACnB20C,EAAA30C,EAA0B,IAC1By0C,EAAAz0C,EAA4B,KAC5B46C,EAAA56C,EAA4B,KAE5Bi1C,EAAAj1C,EAA8C,KAS9C66C,EAAA,WAGE,QAAAA,iBAAoBrC,GAAA1wC,KAAA0wC,cAqBtB,MAhBE3zC,QAAAgpC,eAAIgN,gBAAAz7B,UAAA,iBtB4thBGrT,IsB5thBP,WACE,MAAOjE,MAAK0wC,YAAYQ,etB8thBnBlL,YAAY,EACZC,cAAc,IsBtthBb8M,gBAAAz7B,UAAA07B,UAAR,SAAkBC,GAChBA,EAAGC,iBACHD,EAAGE,mBAJL/O,YAACd,EAAA8P,aAAa,SAAU,WACvB9P,EAAA8P,aAAa,UAAW,WtBouhBlBjO,WAAW,cAAehW,UAC1BgW,WAAW,qBAAsBpoC,SACjCooC,WAAW,oBAAqB,SACjC4N,gBAAgBz7B,UAAW,YAAa,MsB5vhBhDy7B,gBAAA3O,YAACd,EAAA+P,WACC/O,SAAU,uBtBgwhBHa,WAAW,qBAAsB7B,EAAOkO,cACzCuB,mBsB9vhBK96C,GAAA86C,gBAAeA,CA2C5B,IAAAnD,GAAA,WAuBE,QAAAA,0BAAY0D,EAAwBC,EAAsBC,EACtCC,GAxBtB,GAAA3P,GAAA9jC,IAwBsBA,MAAAyzC,iBAjBazzC,KAAA0zC,gBAA0B,GAClD1zC,KAAA/G,OAAiB,EACjB+G,KAAA2zC,UAAoB,SAEpB3zC,KAAA4zC,QAAkB,IAK3B5zC,KAAA6zC,SAAmB,EACT7zC,KAAA6d,MAAQ,GAAIylB,GAAAkK,aAgDtBxtC,KAAA8zC,SAAW,SAAC7iB,KAMZjxB,KAAA+zC,UAAY,aA9CVR,EAAUS,cAAgBh0C,KAC1BA,KAAKszC,WAAaA,EAClBtzC,KAAKwzC,OAASA,EACdxzC,KAAKi0C,oBAAsBj0C,KAAKyzC,eAAexP,UAAU,SAACtrC,GAAU,MAAAmrC,GAAKoQ,aAAev7C,IAuJ5F,MAnJEoE,QAAAgpC,eAAI6J,yBAAAt4B,UAAA,ctBithBGrT,IsBjthBP,WACE,MAAOjE,MAAKgvC,SAAWnC,EAAAjE,YAAYC,QAAU,MAAQ,KtBmthBhD7C,YAAY,EACZC,cAAc,IsBjthBrB2J,yBAAAt4B,UAAAu2B,SAAA,WAEE7tC,KAAKrH,MAAQqH,KAAKm0C,QAClBn0C,KAAK8zC,SAAS9zC,KAAKrH,MACnB,IAAI+1C,GAAa1uC,KAAKszC,WAAWpC,cAAcxC,WAC3C0F,EAAWnjB,EAAEhO,KAAKyrB,EAAY,SAACtC,GAAc,MAAsC,KAAtCA,EAAKgI,SAASplC,QAAQ,cAAoBolC,QAE3Fp0C,MAAKq0C,uBAAyBD,EAASj9B,QAAQ,WAAY,gBAO7Dy4B,yBAAAt4B,UAAA+3B,YAAA,WACErvC,KAAKi0C,oBAAoB3E,eAO3BM,yBAAAt4B,UAAAg9B,WAAA,SAAW37C,GACTqH,KAAKrH,MAAQA,GAmBfi3C,yBAAAt4B,UAAAi9B,iBAAA,SAAiBp+B,GACfnW,KAAK8zC,SAAW39B,GAOlBy5B,yBAAAt4B,UAAAk9B,kBAAA,SAAkBr+B,GAChBnW,KAAK+zC,UAAY59B,GAInBy5B,yBAAAt4B,UAAAm9B,UAAA,WAEE,GAAIz0C,KAAKyzC,eAAeiB,MAAO,CAG7B10C,KAAK6zC,SAAU,CAEf,IAAIc,GAAe30C,KAAK40C,gBAAgB1D,cAEpC2D,EAAO70C,IACXA,MAAKwzC,OAAOsB,IAAI,WACVH,IACFA,EAAaI,QACbJ,EAAaK,UAEfH,EAAKI,aAOXrF,yBAAAt4B,UAAA49B,eAAA,SAAenE,GACb,GAAIp4C,GAAQo4C,EAAM7kB,OAAOvzB,KACrBqH,MAAK/G,QAAUN,EAAMM,OAAS+G,KAAK/G,SACrCN,EAAQA,EAAMw8C,OAAO,EAAGn1C,KAAK/G,SAIR,WAAnB+G,KAAK2zC,YACPh7C,GAASA,GACPqH,KAAKrH,QAAUA,IACjBqH,KAAKrH,MAAQA,EACbqH,KAAK6d,MAAMqxB,KAAKlvC,KAAKrH,OACrBqH,KAAKi1C,WAOTrF,yBAAAt4B,UAAA89B,eAAA,aAIAxF,yBAAAt4B,UAAA+9B,eAAA,WACEr1C,KAAKi1C,SACLj1C,KAAK6zC,SAAU,GAGjBjE,yBAAAt4B,UAAAg+B,eAAA,SAAevE,GACTA,EAAM7kB,OAAOvzB,MAAMM,OAAS+G,KAAK/G,SACnC83C,EAAM7kB,OAAOvzB,MAAQo4C,EAAM7kB,OAAOvzB,MAAMw8C,OAAO,EAAGn1C,KAAK/G,UAKnD22C,yBAAAt4B,UAAAi+B,gBAAR,SAAwBrE,GAEtB,MAAOA,GAAcsE,aAGf5F,yBAAAt4B,UAAAm+B,gBAAR,SAAwBvE,EAAoBwE,GAC1CxE,EAAcyE,MAAMD,MAAQA,EAAQ,GAAK,MAInC9F,yBAAAt4B,UAAA29B,OAAR,WAaE,GAAIt8C,GAAQqH,KAAKrH,MAAQ,EACzBqH,MAAKy1C,gBAAgBz1C,KAAK40C,gBAAgB1D,eACtCv4C,EAAMM,OAAS,GAAK+G,KAAK0zC,gBAAmB,IA1KlDtP,YAACd,EAAAsS,UAAU7C,GtBm1hBJ5N,WAAW,cAAe4N,IAC3BnD,yBAAyBt4B,UAAW,kBAAmB,QsBn1hB7D8sB,YAACd,EAAAiM,QtBs1hBMpK,WAAW,cAAe1mB,SAC3BmxB,yBAAyBt4B,UAAW,UAAW,QsBr1hBrD8sB,YAACd,EAAAiM,MAAM,oBACNpC,EAAA5H,eAAe4H,EAAAvH,iBtBw1hBTT,WAAW,cAAe0Q,SAC3BjG,yBAAyBt4B,UAAW,kBAAmB,QsBx1hB7D8sB,YAACd,EAAAiM,QtB21hBMpK,WAAW,cAAe0Q,SAC3BjG,yBAAyBt4B,UAAW,SAAU,QsB31hBpD8sB,YAACd,EAAAiM,QtB81hBMpK,WAAW,cAAe1mB,SAC3BmxB,yBAAyBt4B,UAAW,YAAa,QsB91hBvD8sB,YAACd,EAAAiM,QtBi2hBMpK,WAAW,cAAe1mB,SAC3BmxB,yBAAyBt4B,UAAW,SAAU,QsBj2hBpD8sB,YAACd,EAAAiM,QtBo2hBMpK,WAAW,cAAe1mB,SAC3BmxB,yBAAyBt4B,UAAW,UAAW,QsB/1hBrD8sB,YAACd,EAAAmM,StBk2hBMtK,WAAW,cAAepoC,SAC3B6yC,yBAAyBt4B,UAAW,QAAS,QsBr4hBrDs4B,yBAAAxL,YAACd,EAAAe,WACCC,SAAU,oBACV/W,SAAU,iiBAWVgX,OAAQoI,EAAA+C,eACRjL,YAAagI,EAAAqJ,gBAAiB/C,GAC9BvO,QAAStsC,EAAQ,QtB+3hBVitC,WAAW,qBAAsB7B,EAAOkO,WAAY/E,EAASsJ,UAAWzS,EAAO0S,OAAQlD,EAAiBmD,iBACzGrG,4BsB93hBK33C,GAAA23C,yBAAwBA,GtBs4hB/BsG,IACA,SAASl+C,EAAQC,GuBn9hBvBD,EAAAC,QAAA,2zCvBy9hBMk+C,IACA,SAASn+C,EAAQC,GwB19hBvBD,EAAAC,QAAA,krDxBg+hBMm+C,IACA,SAASp+C,EAAQC,EAASC,GAE/B,YyBh+hBD,IAAAorC,GAAAprC,EAAgC,GAChCm+C,EAAAn+C,EAAqD,KACrDo+C,EAAAp+C,EAA+B,IAC/Bq+C,EAAAr+C,EAA+B,KAE/B46C,EAAA56C,EAA4B,KAC5B40C,EAAA50C,EAAuC,KACvC60C,EAAA70C,EAA8B,IAU9BwsC,EAAA,WAKE,QAAAA,2BAAoB+O,EACA+C,EACAC,GAPtB,GAAA3S,GAAA9jC,IAKsBA,MAAAyzC,iBACAzzC,KAAAw2C,qBACAx2C,KAAAy2C,oBAElBz2C,KAAKy2C,kBAAkBC,eACpBzS,UAAU,SAAA0S,GAAU,MAAA7S,GAAK8S,kBAAkBD,KAiElD,MA7DE55C,QAAAgpC,eAAIrB,0BAAAptB,UAAA,OzBs9hBGrT,IyBt9hBP,WACE,MAAOjE,MAAK62C,gBACR72C,KAAK82C,MAAMC,YAAY/2C,KAAK62C,iBAC5B,GzBw9hBC7Q,YAAY,EACZC,cAAc,IyBt9hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,YzBy9hBGrT,IyBz9hBP,WACE,MAAOjE,MAAK82C,MAAQ92C,KAAK82C,MAAME,SAAW,GzB29hBrChR,YAAY,EACZC,cAAc,IyBz9hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,UzB49hBGrT,IyB59hBP,WACE,MAAOjE,MAAK82C,MAAQ92C,KAAK82C,MAAMG,OAAS,GzB89hBnCjR,YAAY,EACZC,cAAc,IyB59hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,WzB+9hBGrT,IyB/9hBP,WACE,MAAOjE,MAAK82C,MAAQ92C,KAAK82C,MAAMI,QAAU,GzBi+hBpClR,YAAY,EACZC,cAAc,IyB/9hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,czBk+hBGrT,IyBl+hBP,WACE,MAAOjE,MAAK82C,MAAQ92C,KAAK82C,MAAMK,WAAa,GzBo+hBvCnR,YAAY,EACZC,cAAc,IyBl+hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,ezBq+hBGrT,IyBr+hBP,WACE,MAAOjE,MAAK82C,MAAQ92C,KAAK82C,MAAMM,YAAc,GzBu+hBxCpR,YAAY,EACZC,cAAc,IyBr+hBrBvB,0BAAAptB,UAAAs/B,kBAAA,SAAkBD,GAChB32C,KAAK82C,MAAQ92C,KAAKw2C,mBACf1sB,OAAO9pB,KAAKy2C,kBAAkBY,WACjCr3C,KAAK62C,gBAAkBF,GAIzBjS,0BAAAptB,UAAAggC,KAAA,WACEt3C,KAAKy2C,kBAAkBa,QAGzB5S,0BAAAptB,UAAAigC,MAAA,WACEv3C,KAAKy2C,kBAAkBc,SAGzBx6C,OAAAgpC,eAAIrB,0BAAAptB,UAAA,iBzBo+hBGrT,IyBp+hBP,WACE,MAAOjE,MAAKy2C,kBAAkBe,QzBs+hBzBxR,YAAY,EACZC,cAAc,IyBp+hBrBlpC,OAAAgpC,eAAIrB,0BAAAptB,UAAA,sBzBu+hBGrT,IyBv+hBP,WACE,MAAOjE,MAAKyzC,eAAeiB,MAAQ,YAAc,czBy+hB5C1O,YAAY,EACZC,cAAc,IyBv+hBrBvB,0BAAAptB,UAAAmgC,mBAAA,SAAmBx7B,GACjBjc,KAAKq3C,UAAUp7B,KAAOA,GAGxByoB,0BAAAptB,UAAAogC,eAAA,WACE13C,KAAKyzC,eAAekE,UAGtB56C,OAAAgpC,eAAIrB,0BAAAptB,UAAA,azBw+hBGrT,IyBx+hBP,WACE,MAAOjE,MAAKy2C,kBAAkBY,WzB0+hBzBrR,YAAY,EACZC,cAAc,IyB1jiBvBvB,0BAAAN,YAACd,EAAAe,WACCC,SAAU,qBACV/W,SAAUr1B,EAAQ,KAClBssC,QAAStsC,EAAQ,MACjBqsC,OAAQgS,EAAA9L,kBACRhG,YAAaqI,EAAA8C,yBAA0B7C,EAAA8C,mBzB+jiBhC1K,WAAW,qBAAsB2N,EAAiBmD,cAAeI,EAAsBuB,kBAAmBtB,EAAoBuB,oBAC/HnT,6ByB9jiBKzsC,GAAAysC,0BAAyBA,GzBskiBhCoT,IACA,SAAS9/C,EAAQC,G0B3liBvBD,EAAAC,QAAA,iU1BimiBM8/C,IACA,SAAS//C,EAAQC,G2BlmiBvBD,EAAAC,QAAA,gqC3BwmiBM+/C,IACA,SAAShgD,EAAQC,EAASC,GAE/B,Y4BxmiBD,IAAAorC,GAAAprC,EAA+B,GAE/B+/C,EAAA//C,EAA6B,KACjB+4B,EAAC/4B,EAAM,IACnBg1C,EAAAh1C,EAA2B,IAC3Bu0C,EAAAv0C,EAAyB,IAQzBggD,EAAA,WAGE,QAAAA,6BAAoBC,EAAyCC,GAAzCp4C,KAAAm4C,kBAAyCn4C,KAAAo4C,eAyC/D,MAtCEr7C,QAAAgpC,eAAImS,4BAAA5gC,UAAA,Q5BomiBGrT,I4BpmiBP,WAGE,GAAI0xC,KACJ,OAAQ31C,MAAKq4C,KACXr4C,KAAKo4C,aACFE,aAAat4C,KAAKq4C,MAAM9/C,IAAI,SAAAggD,GAE7B,MADA5C,GAAM,sBAAwB,QAAQ4C,EAAKC,QAAO,KAC3C7C,IAJSA,G5BymiBf3P,YAAY,EACZC,cAAc,I4BhmiBrBlpC,OAAAgpC,eAAImS,4BAAA5gC,UAAA,gB5BmmiBGrT,I4BnmiBP,WACE,MAAOjE,MAAKq4C,MAAQr4C,KAAKq4C,KAAKI,SAAWhM,EAAAnE,WAAWI,U5BqmiB/C1C,YAAY,EACZC,cAAc,I4BnmiBrBlpC,OAAAgpC,eAAImS,4BAAA5gC,UAAA,e5BsmiBGrT,I4BtmiBP,WAGE,GAAI0xC,KACJ,OAAQ31C,MAAKq4C,KACXr4C,KAAKo4C,aACFE,aAAat4C,KAAKq4C,MAAM9/C,IAAI,SAAAggD,GAE7B,MADA5C,GAAM,sBAAwB,QAAQ4C,EAAKG,UAAS,KAC7C/C,IAJSA,G5B2miBf3P,YAAY,EACZC,cAAc,I4BlmiBrBlpC,OAAAgpC,eAAImS,4BAAA5gC,UAAA,oB5BqmiBGrT,I4BrmiBP,WACE,GAAI00C,GAAY34C,KAAKm4C,gBAAgBS,SAAS54C,KAAKq4C,KAAKp2C,KACxD,OAASjC,MAAKq4C,MAASr4C,KAAKq4C,KAAKQ,KAE/B74C,KAAKq4C,KAAKQ,KAAKtgD,IAAI,SAAAugD,GAAK,MAAA7nB,GAAEhO,KAAK01B,GAAYjnB,GAAIonB,EAAEpnB,KAAK+mB,a5BumiBnDzS,YAAY,EACZC,cAAc,I4BjpiBrB7B,YAACd,EAAAiM,Q5BqpiBMpK,WAAW,cAAepoC,SAC3Bm7C,4BAA4B5gC,UAAW,OAAQ,Q4B7piBvD4gC,4BAAA9T,YAACd,EAAAe,WACCC,SAAU,uBACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,O5BiqiBXitC,WAAW,qBAAsB8S,EAAmBc,eAAgB7L,EAAe8L,gBACpFd,+B4B/piBKjgD,GAAAigD,4BAA2BA,G5BuqiBlCe,IACA,SAASjhD,EAAQC,G6BxriBvBD,EAAAC,QAAA,yqB7B8riBMihD,IACA,SAASlhD,EAAQC,G8B/riBvBD,EAAAC,QAAA,0yB9BqsiBMkhD,IACA,SAASnhD,EAAQC,EAASC,GAE/B,Y+BxsiBD,IAAAorC,GAAAprC,EAAuC,GAEvCq+C,EAAAr+C,EAA+B,KAC/BkhD,EAAAlhD,EAA0C,KAE1Cg1C,EAAAh1C,EAA2B,IAE3Bo+C,EAAAp+C,EAA+B,IAC/Bm+C,EAAAn+C,EAAuD,KAUvDmhD,EAAA,WAKE,QAAAA,2BAAoB7C,EACAC,GADAz2C,KAAAw2C,qBACAx2C,KAAAy2C,oBAsBtB,MAjBE4C,2BAAA/hC,UAAAu2B,SAAA,WACE7tC,KAAK82C,MAAQ92C,KAAKw2C,mBACf8C,gBAAwBt5C,KAAKq4C,OAGlCt7C,OAAAgpC,eAAIsT,0BAAA/hC,UAAA,a/BuriBGrT,I+BvriBP,WACE,MAAOjE,MAAK82C,MAAMyC,K/ByriBbvT,YAAY,EACZC,cAAc,I+BvriBrBlpC,OAAAgpC,eAAIsT,0BAAA/hC,UAAA,U/B0riBGrT,I+B1riBP,WACE,OAAQjE,KAAKw5C,U/B4riBRxT,YAAY,EACZC,cAAc,I+B1riBrBlpC,OAAAgpC,eAAIsT,0BAAA/hC,UAAA,Y/B6riBGrT,I+B7riBP,WACE,MAAOipC,GAAA2B,aAAa7uC,KAAKq4C,KAAKp2C,O/B+riBzB+jC,YAAY,EACZC,cAAc,I+BvtiBrB7B,YAACd,EAAAiM,Q/B2tiBMpK,WAAW,cAAepoC,SAC3Bs8C,0BAA0B/hC,UAAW,OAAQ,Q+BtuiBrD+hC,0BAAAjV,YAACd,EAAAe,WACCC,SAAU,qBACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBqsC,OAAQgS,EAAA9L,kBACRhG,YAAa2U,EAAAlB,+B/B0uiBN/S,WAAW,qBAAsBkR,EAAsBuB,kBAAmBtB,EAAoBuB,oBAC/FwB,6B+BxuiBKphD,GAAAohD,0BAAyBA,G/BgviBhCI,IACA,SAASzhD,EAAQC,GgCnwiBvBD,EAAAC,QAAA,mvBhCywiBMyhD,IACA,SAAS1hD,EAAQC,GiC1wiBvBD,EAAAC,QAAA,szCjCgxiBM0hD,IACA,SAAS3hD,EAAQC,EAASC,GAE/B,YkChxiBD,IAAAorC,GAAAprC,EAAuC,GAEvCkhD,EAAAlhD,EAA0C,KAC1Cg1C,EAAAh1C,EAAyC,IACzCu0C,EAAAv0C,EAAyE,IACzEo+C,EAAAp+C,EAA+B,IAGnB+4B,GAFZ/4B,EAAuD,KAE1CA,EAAM,KAUnB0hD,EAAA,WAUE,QAAAA,wBAAoBC,EAAqCpD,GAArCz2C,KAAA65C,gBAAqC75C,KAAAy2C,oBAqG3D,MAjGE15C,QAAAgpC,eAAI6T,uBAAAtiC,UAAA,YlCiwiBGrT,IkCjwiBP,WACE,MAAOipC,GAAA2B,aAAa7uC,KAAK85C,WlCmwiBpB9T,YAAY,EACZC,cAAc,IkCjwiBrBlpC,OAAAgpC,eAAI6T,uBAAAtiC,UAAA,UlCowiBGrT,IkCpwiBP,WACE,OAAQipC,EAAA2B,aAAa7uC,KAAK85C,WlCswiBrB9T,YAAY,EACZC,cAAc,IkCpwiBrB2T,uBAAAtiC,UAAAu2B,SAAA,aAuBA+L,uBAAAtiC,UAAAyiC,gBAAA,SAAgBC,GAGd,GAAIrE,MACA4C,EAAOv4C,KAAK65C,cACbI,mBAAmBD,EAAOtoB,GAE7B,OADAikB,GAAM,sBAAwB,QAAQ4C,EAAKC,QAAO,KAC3C7C,GAITiE,uBAAAtiC,UAAA4iC,QAAA,SAAQj+B,GACN,MAAQjc,MAAKq4C,KAAsBr4C,KAAKq4C,KAAM8B,MAAMl+B,GAAQ,GAAxC,GAGtBlf,OAAAgpC,eAAI6T,uBAAAtiC,UAAA,alCgwiBGrT,IkChwiBP,WACE,OAAQ,WAAY,UAAW,gBlCkwiB1B+hC,YAAY,EACZC,cAAc,IkChwiBb2T,uBAAAtiC,UAAA8iC,oBAAR,SAA4BC,EAAuBp+B,GACjD,GAAIq+B,GAAWrpB,EAAE9O,MAAMk4B,GAAS94B,KAAK,GAAGhpB,IAAI,SAAAyhD,GAC1C,OAAQtoB,GAAIsoB,EAAOtoB,MAClB/4B,OACH,QACE8/C,OAAQhM,EAAAnE,WAAWE,SACnBvmC,KAAMjC,KAAK85C,SACX79B,KAAMA,EACNs+B,MAAO,IAEPJ,OACEK,OAAQ,MAGV3B,QACAwB,QAASC,IAILV,uBAAAtiC,UAAAmjC,kBAAR,SAA0Bx+B,GACxB,GAAIy+B,IACFjC,OAAQhM,EAAAnE,WAAWE,SACnBvmC,KAAMjC,KAAK85C,SACX79B,KAAMA,EACNs+B,MAAO,IACPJ,OACEnD,SAAU,EACVE,QAAS,EACTE,YAAa,GAGfuD,MAAO,IACPjM,YACEkC,SACAC,SACAC,UAGF+H,QACAwB,YAEE50C,GAAQ,WAAY,UAAW,eAC/BxK,EAAMwK,EAAKwrB,EAAEzF,OAAO,EAAG/lB,EAAKxM,OAAS,GAGzC,OAFAyhD,GAAKP,MAAMl/C,GAAOg2B,EAAEzF,OAAO,IAAK,KAEzBkvB,GA1GTtW,YAACd,EAAAiM,QlC02iBMpK,WAAW,cAAepoC,SAC3B68C,uBAAuBtiC,UAAW,OAAQ,QkCz2iBhD8sB,YAACd,EAAAiM,MAAM,alC42iBApK,WAAW,cAAe1mB,SAC3Bm7B,uBAAuBtiC,UAAW,WAAY,QkC52iBpD8sB,YAACd,EAAAiM,MAAM,uBlC+2iBApK,WAAW,cAAe1mB,SAC3Bm7B,uBAAuBtiC,UAAW,oBAAqB,QkC/2iB7D8sB,YAACd,EAAAiM,MAAM,elCk3iBApK,WAAW,cAAe1mB,SAC3Bm7B,uBAAuBtiC,UAAW,aAAc,QkCj4iBxDsiC,uBAAAxV,YAACd,EAAAe,WACCC,SAAU,iBACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBusC,YAAa2U,EAAAlB,+BlCq4iBN/S,WAAW,qBAAsB+H,EAAe8L,aAAc1C,EAAoBuB,oBACnF+B,0BkCn4iBK3hD,GAAA2hD,uBAAsBA,GlC24iB7BgB,IACA,SAAS5iD,EAAQC,GmCj6iBvBD,EAAAC,QAAA,yXnCu6iBM4iD,IACA,SAAS7iD,EAAQC,GoCx6iBvBD,EAAAC,QAAA,mUpC86iBM6iD,IACA,SAAS9iD,EAAQC,EAASC,GAK/B,YqC/6iBD,IAAAorC,GAAAprC,EAAwB,GACxB6iD,EAAA7iD,EAAwC,KACxC8iD,EAAA9iD,EAAoC,KACpCqrC,EAAArrC,EAAkC,IAClCo+C,EAAAp+C,EAA+B,IAU/B+iD,EAAA,WAME,QAAAA,yBAAoBnJ,EACA2E,EACAyE,GAFAl7C,KAAA8xC,eACA9xC,KAAAy2C,oBACAz2C,KAAAk7C,UAElBl7C,KAAKm7C,UAAsBrJ,EAAa7tC,IAAI,YA2BhD,MAtBEg3C,yBAAA3jC,UAAA8jC,KAAA,WACEp7C,KAAKk7C,QAAQG,UAAU,eAGzBt+C,OAAAgpC,eAAIkV,wBAAA3jC,UAAA,SrC+5iBGrT,IqC/5iBP,WAEE,GAAIo0C,GAAOr4C,KAAKy2C,kBAAkB6E,SAASt7C,KAAKm7C,UAGhD,OAAO9C,IAAQA,OrC85iBVrS,YAAY,EACZC,cAAc,IqC55iBrBlpC,OAAAgpC,eAAIkV,wBAAA3jC,UAAA,crC+5iBGrT,IqC/5iBP,WAEE,GAAIs3C,GAAQv7C,KAAKu7C,KAEjB,OAAOA,GAAMtiD,OAASsiD,EAAM,GAAK,QrC+5iB5BvV,YAAY,EACZC,cAAc,IqC75iBrBgV,wBAAA3jC,UAAAkkC,iBAAA,aAzCFP,wBAAA7W,YAACd,EAAAe,WACCC,SAAU,kBACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBusC,YAAasW,EAAA1B,0BAA2B2B,EAAAS,yBrC68iBjCtW,WAAW,qBAAsB5B,EAAoB4O,YAAamE,EAAoBuB,iBAAkBtU,EAAoBmY,UAC7HT,2BqC38iBKhjD,GAAAgjD,wBAAuBA,GrCm9iB9BU,IACA,SAAS3jD,EAAQC,GsCv+iBvBD,EAAAC,QAAA,09DtC6+iBM2jD,IACA,SAAS5jD,EAAQC,GuC9+iBvBD,EAAAC,QAAA,gJvCo/iBM4jD,IACA,SAAS7jD,EAAQC,EAASC,GAE/B,YwCp/iBD,IAAAorC,GAAAprC,EAAwB,GAExB4jD,EAAA5jD,EAAqC,KACrCqrC,EAAArrC,EAA6D,IAC7D6jD,EAAA7jD,EAAsC,KACtCo+C,EAAAp+C,EAA+B,IAC/B8jD,EAAA9jD,EAAoC,KAUpC+jD,EAAA,WAME,QAAAA,oBAAoBf,EACAzE,EACA3E,GAFA9xC,KAAAk7C,UACAl7C,KAAAy2C,oBACAz2C,KAAA8xC,eAClB9xC,KAAKq3C,UAAYr3C,KAAKy2C,kBAAkBY,SAExC,IAAI3lB,GAAKogB,EAAa7tC,IAAI,KACtBytB,IAAI+kB,EAAkByF,KAAKxqB,GAOnC,MAHEuqB,oBAAA3kC,UAAA+jC,SAAA,SAASp5C,GACPjC,KAAKk7C,QAAQG,UAAU,iBAAkBvB,SAAU73C,MAxBvDg6C,mBAAA7X,YAACd,EAAAe,WAECC,SAAU,YACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBusC,YAAaqX,EAAAlC,0BxCogjBNzU,WAAW,qBAAsB5B,EAAoBmY,OAAQpF,EAAoBuB,iBAAkBtU,EAAoB4O,eACxH8J,sBwCngjBKhkD,GAAAgkD,mBAAkBA,CAiC/B,IAAA/W,GAAA,mBAAAA,2BAEA,MAbAA,wBAAAd,YAACd,EAAAe,WACC9W,SAAU,kCACVkX,YAAalB,EAAA4Y,gBAEd5Y,EAAAyB,cACEx7B,KAAM,aAAcyS,KAAM,YAAagpB,UAAWgX,EAAoBG,cAAc,IACpF5yC,KAAM,uBAAwByS,KAAM,gBAAiBgpB,UAAW8W,EAAAd,0BAChEzxC,KAAM,0BAA2ByS,KAAM,eAAgBgpB,UAAW+W,EAAApK,yBxCu/iB5DzM,WAAW,yBACZD;GwCp/iBKjtC,GAAAitC,uBAAsBA,GxC4/iB7BmX,IACA,SAASrkD,EAAQC,GAKtB,YyC1ijBYA,GAAAqkD,mBACXC,OAAQ,SACRC,KAAM,OAGR,IAAAC,GAAA,mBAAAA,qBAIA,MAAAA,oBAJaxkD,GAAAwkD,iBAAgBA,CAM7B,IAAAC,GAAA,mBAAAA,kBAOA,MAAAA,iBAPazkD,GAAAykD,cAAaA,CAS1B,IAAAC,GAAA,mBAAAA,aAOE38C,KAAA48C,QAA4B,GAAIH,GAChCz8C,KAAA06C,KAAsB,GAAIgC,GAG5B,MAAAC,aAXa1kD,GAAA0kD,UAASA,GzCojjBhBE,IACA,SAAS7kD,EAAQC,EAASC,GAK/B,Y0CtljBD,IAAAu0C,GAAAv0C,EAAsD,GAczCD,GAAA6kD,YACXrE,OAAQhM,EAAAnE,WAAWI,SACnBzmC,KAAMwqC,EAAAtF,SAASC,UACfnrB,KAAM,wBACN0+B,MAAO,KACPJ,MAAO,IACPJ,OACEnD,SAAU,EACVE,QAAS,IACTE,YAAa,GAEf1I,YACEkC,QAEElf,GAAI,GACJ/4B,MAAO,IAGTk4C,SACAC,UAGF+H,QACAwB,YAIWpiD,EAAA8kD,YAAc,WACzB,GAAIC,KAIJ,OAHAA,GAAOvQ,EAAAnE,WAAWE,WAAa,IAAK,IAAK,KACzCwU,EAAOvQ,EAAAnE,WAAWC,WAAa,IAAK,IAAK,KACzCyU,EAAOvQ,EAAAnE,WAAWI,WAAa,IAAK,IAAK,KAClCsU,M1C2kjBHC,IACA,SAASjlD,EAAQC,G2C9njBvBD,EAAAC,QAAA,ojG3CoojBMilD,IACA,SAASllD,EAAQC,G4CrojBvBD,EAAAC,QAAA,mnK5C2ojBMklD,IACA,SAASnlD,EAAQC,EAASC,GAK/B,Y6C7ojBD,IAAAorC,GAAAprC,EAAuC,GACvCklD,EAAAllD,EAA0B,KAC1BmlD,EAAAnlD,EAA2B,KAE3BolD,EAAAplD,EAAkC,KAClCq+C,EAAAr+C,EAA+B,KAC/Bu0C,EAAAv0C,EAAyD,IAEzDg1C,EAAAh1C,EAAyD,IACzD20C,EAAA30C,EAAoB,IACpB60C,EAAA70C,EAA8B,IAC9B40C,EAAA50C,EAAuC,KACvCqlD,EAAArlD,EAAgC,KAChCslD,EAAAtlD,EAA+B,KAE/BulD,EAAAvlD,EAAmC,KACvB+4B,EAAC/4B,EAAM,IAiBnBujD,EAAA,WAWE,QAAAA,uBAAoBrD,GAAAp4C,KAAAo4C,eA+KtB,MA3KEr7C,QAAAgpC,eAAI0V,sBAAAnkC,UAAA,Y7CinjBGrT,I6CjnjBP,WACE,MAAOjE,MAAKo4C,aAAasF,U7CmnjBpB1X,YAAY,EACZC,cAAc,I6CjnjBrBwV,sBAAAnkC,UAAAu2B,SAAA,cAAA/J,GAAA9jC,IAOE,OALAA,MAAK29C,iBAAmB39C,KAAKq4C,KAAKp2C,KAClCjC,KAAK49C,oBAEL59C,KAAK69C,qBACL79C,KAAK89C,mBACE7sB,EAAE3yB,QAAQ0B,KAAKo4C,aAAa0F,gBAAiB,SAACC,EAAGC,GACtD,MAAAla,GAAKga,gBAAgB3/C,MACnBxF,MAAOqlD,EACPC,MAAOF,OASbtC,sBAAAnkC,UAAAsmC,kBAAA,SAAkB9D,GAAlB,GAAAhW,GAAA9jC,IACE85C,GAAWA,GAAY95C,KAAK29C,iBAC5B39C,KAAKo4C,aACF8F,iBAAiBpE,GAEjB7V,UAAU,SAAAka,GAAc,MAAAra,GAAKsa,eAAeD,EAAYrE,MAa7D2B,sBAAAnkC,UAAA8mC,eAAA,SAAeD,EAA4BrE,GAIzC,GADA95C,KAAKm+C,WAAaA,EACdn+C,KAAKq4C,KAAKp2C,OAAS63C,EAAU,CAC/B,GAAIzB,GAAO8F,EAAW5C,MAAMv7C,KAAKq4C,KAAKI,QAAQ,EACzCJ,KACHr4C,KAAKq4C,KAAKI,OAAShM,EAAAnE,WAAWE,SAC9B6P,EAAO8F,EAAW5C,MAAMv7C,KAAKq4C,KAAKI,QAAQ,IAE5Cz4C,KAAKq4C,KAAKp8B,KAAOo8B,EAAKp8B,KAExBjc,KAAK29C,iBAAmB39C,KAAKq4C,KAAKp2C,KAAO63C,EACzC95C,KAAKq+C,eAAiBr+C,KAAKo4C,aAAakG,gBAAgBxE,GACxD95C,KAAK69C,sBAOPpC,sBAAAnkC,UAAAumC,mBAAA,WACE,GAAI79C,KAAKw5C,SAAU,CACjB,GAAI7C,GAAiB32C,KAAKq4C,IACtBr4C,MAAKu+C,eACF5H,EAAOwD,MAAMqE,QAChB7H,EAAOwD,MAAMqE,MAAQx+C,KAAKo4C,aACvBqG,sBAAsB9H,EAAO10C,OAGlC00C,EAAOwD,MAAMqE,MAAQ,SAM3BzhD,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,S7C6mjBGrT,I6C7mjBP,WAEE,MAAOjE,MAAKm+C,WAAan+C,KAAKm+C,WAAW5C,MAAMv7C,KAAKq4C,KAAKI,Y7C8mjBpDzS,YAAY,EACZC,cAAc,I6C3mjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,iB7C8mjBGrT,I6C9mjBP,WACE,MAAOjE,MAAKm+C,WAAan+C,KAAKm+C,WAAW9D,Y7CgnjBpCrU,YAAY,EACZC,cAAc,I6C9mjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,W7CinjBGrT,I6CjnjBP,WACE,MAAOjE,MAAKq4C,KAAKgC,S7CmnjBZrU,YAAY,EACZC,cAAc,I6ChnjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,a7CmnjBGrT,I6CnnjBP,WACE,MAAOjE,MAAKq4C,KAAKI,SAAWhM,EAAAnE,WAAWC,U7CqnjBlCvC,YAAY,EACZC,cAAc,I6CnnjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,U7CsnjBGrT,I6CtnjBP,WACE,MAAOjE,MAAKq4C,OAASr4C,KAAKw5C,U7CwnjBrBxT,YAAY,EACZC,cAAc,I6CtnjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,Y7CynjBGrT,I6CznjBP,WACE,MAAOipC,GAAA2B,aAAa7uC,KAAKq4C,KAAKp2C,O7C2njBzB+jC,YAAY,EACZC,cAAc,I6CznjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,oB7C4njBGrT,I6C5njBP,WACE,MAAOjE,MAAKw5C,U7C8njBPxT,YAAY,EACZC,cAAc,I6C5njBrBwV,sBAAAnkC,UAAAonC,gBAAA,SAAgBjG,GAEdz4C,KAAKq4C,KAAKp8B,KAAOjc,KAAKu7C,MAAM,GAAGt/B,KAC/Bjc,KAAKq4C,KAAKkC,MAAQv6C,KAAKo4C,aAAa4E,OAAOvE,GAAQ,GAC/Cz4C,KAAK2+C,SAEH3+C,KAAK4+C,UACP5+C,KAAKq4C,KAAKgC,UAAY3oB,GAAI1xB,KAAK6+C,cAAc,GAAGntB,KAEhD1xB,KAAKq4C,KAAKgC,aAOhBoB,sBAAAnkC,UAAAwnC,qBAAA,SAAqBC,EAAUpmD,GACpBqH,KAAKq4C,KAAM8B,MAAM4E,GAAYpmD,GAGxC8iD,sBAAAnkC,UAAA0nC,qBAAA,SAAqBrmD,GACVqH,KAAKq4C,KAAM8B,MAAMqE,MAAM7lD,MAAQA,GAG1C8iD,sBAAAnkC,UAAA2nC,oBAAA,SAAoBnF,GAElB95C,KAAK49C,kBAAkB9D,IAIzB/8C,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,kB7CunjBGrT,I6CvnjBP,WACE,GAAIhC,GAAOjC,KAAKq4C,KAAKp2C,IACrB,OAAOA,KAASwqC,EAAAtF,SAASS,KAAO3lC,IAASwqC,EAAAtF,SAASY,Q7CynjB7C/B,YAAY,EACZC,cAAc,I6CvnjBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,mB7C0njBGrT,I6C1njBP,WACE,MAAOjE,MAAKq4C,KAAKp2C,OAASwqC,EAAAtF,SAASS,IAC/B,sBACA,mB7C4njBC5B,YAAY,EACZC,cAAc,I6C1njBrBlpC,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,U7C6njBGrT,I6C7njBP,WACE,MAAOjE,MAAKo4C,aAAa4E,OAAOh9C,KAAKq4C,KAAKI,S7C+njBrCzS,YAAY,EACZC,cAAc,I6C7njBrBwV,sBAAAnkC,UAAA4nC,oBAAA,SAAoBvmD,GACXqH,KAAKq4C,KAAMsC,MAAQhiD,GAG5B8iD,sBAAAnkC,UAAA6nC,mBAAA,SAAmB5E,KAInBx9C,OAAAgpC,eAAI0V,sBAAAnkC,UAAA,Y7C6njBGrT,I6C7njBP,WAEE,OACEm7C,MAAOp/C,KAAKq4C,KAAKkC,MACjB9B,OAAQz4C,KAAKq4C,KAAKI,OAClBvK,UAAWluC,KAAKq4C,KAAKp2C,O7CgojBlB+jC,YAAY,EACZC,cAAc,I6CrzjBrB7B,YAACd,EAAAiM,Q7CyzjBMpK,WAAW,cAAepoC,SAC3B0+C,sBAAsBnkC,UAAW,OAAQ,Q6Cx0jBjDmkC,sBAAArX,YAACd,EAAAe,WACCC,SAAU,gBACVC,OAAQ6Y,EAAArS,YAAawL,EAAA9L,kBAIrBjG,QAAStsC,EAAQ,MAEjBq1B,SAAUr1B,EAAQ,KAClBusC,YAAa4Y,EAAAgC,aAAc/B,EAAA7M,oBAAqB5D,EAAA8C,MAC9C5C,EAAA8C,gBAAiB/C,EAAA8C,yBAA0B2N,EAAA+B,kBAC3C9B,EAAA+B,iBAAkB9B,EAAA+B,wB7C00jBbra,WAAW,qBAAsB+H,EAAe8L,gBACjDyC,yB6Cz0jBKxjD,GAAAwjD,sBAAqBA,G7Ci1jB5BgE,IACA,SAASznD,EAAQC,G8Cv3jBvBD,EAAAC,QAAA,+2F9C63jBMynD,IACA,SAAS1nD,EAAQC,EAASC,GAE/B,Y+C/3jBD,IAAAorC,GAAAprC,EAAmD,GAEnD+/C,EAAA//C,EAAiE,KACjE60C,EAAA70C,EAA8B,IAE9BynD,EAAAznD,EAA8B,IAE9B+0C,EAAA/0C,EAA2B,IAC3Bs4C,EAAAt4C,EAAgD,KAEhDg1C,EAAAh1C,EAA2B,IACf+4B,EAAC/4B,EAAM,IAcnB0nD,EAAA,WAwBE,QAAAA,kBAAoBzH,EAAyC0H,GAAzC7/C,KAAAm4C,kBAAyCn4C,KAAA6/C,MAhB7D7/C,KAAA8/C,kBAEA9/C,KAAA+/C,0BAAoC,EAE5B//C,KAAAggD,kBAEAhgD,KAAAigD,mBAAqB,GAAIN,GAAAO,oBAGzBlgD,KAAAmgD,qBAAuB,GAAIR,GAAAO,oBAI3BlgD,KAAAogD,mBAAqBnT,EAAAzB,aAAaxrC,KAAKigD,oBACvCjgD,KAAAqgD,qBAAuBpT,EAAAzB,aAAaxrC,KAAKmgD,sBAiGnD,MAzFEpjD,QAAAgpC,eAAI6Z,iBAAAtoC,UAAA,Y/C81jBGrT,I+C91jBP,WACE,MAAOipC,GAAA2B,aAAa7uC,KAAKylC,SAASyI,Y/Cg2jB7BlI,YAAY,EACZC,cAAc,I+C91jBrBlpC,OAAAgpC,eAAI6Z,iBAAAtoC,UAAA,U/Ci2jBGrT,I+Cj2jBP,WACE,OAAQjE,KAAKw5C,U/Cm2jBRxT,YAAY,EACZC,cAAc,I+Ch2jBrB2Z,iBAAAtoC,UAAAgpC,kBAAA,cAAAxc,GAAA9jC,IAIEA,MAAKugD,KAAK7uB,IAAM1xB,KAAKugD,KAAK7uB,GAE1B1xB,KAAKwgD,kBAAoBxgD,KAAKggD,eAAehgD,KAAKugD,KAAK7uB,IACvD1xB,KAAKygD,SAAWzgD,KAAKwgD,kBAAkBvkC,KACvCjc,KAAK0gD,WAAa1gD,KAAKwgD,kBAAkB/H,OAGrCz4C,KAAKw5C,UACPx5C,KAAKm4C,gBACFwI,kBAAkB3gD,KAAKwgD,mBAAmBvc,UAAU,SAAA6b,GACrDhc,EAAKgc,eAAiBA,EACjBhc,EAAKyc,KAAKK,SAAQ9c,EAAKyc,KAAKK,OAAS9c,EAAKgc,eAAe,GAAGpuB,IACjEoS,EAAK+c,wBAAwB/c,EAAKyc,KAAKK,UAK3C5gD,KAAK8gD,6BAMP/jD,OAAAgpC,eAAI6Z,iBAAAtoC,UAAA,mB/C01jBGrT,I+C11jBP,WACE,MAAOjE,MAAKwgD,kBACRxgD,KAAKm4C,gBAAgB4I,SAAS/gD,KAAKwgD,mBACnC,I/C41jBCxa,YAAY,EACZC,cAAc,I+C11jBrB2Z,iBAAAtoC,UAAAupC,wBAAA,SAAwBD,GACtB,GAAII,GAAgB/vB,EAAEhO,KAAKjjB,KAAK8/C,gBAAiBpuB,IAAKkvB,GACtD5gD,MAAKihD,kBAAoBD,EAAc/kC,KACvCjc,KAAK+/C,0BAA4BiB,EAAcE,kBAAoB,GAUrEtB,iBAAAtoC,UAAA6pC,sBAAA,SAAsB3I,GAGpB,MAAOA,GAAUx4C,KAAKogD,mBAAqBpgD,KAAKqgD,sBAGlDT,iBAAAtoC,UAAAu2B,SAAA,cAAA/J,GAAA9jC,IAUE,IAPAA,KAAK24C,UAAY34C,KAAKm4C,gBAAgBS,SAAS54C,KAAKylC,SAASyI,WAE7DluC,KAAK24C,UAAUr6C,QAAQ,SAAA2D,GAAQ,MAAA6hC,GAAKkc,eAAe/9C,EAAKyvB,IAAMzvB,IAG9DjC,KAAKsgD,oBAEDtgD,KAAKw5C,SAAU,CACAx5C,KAAKugD,KAAK7uB,EAC3B1xB,MAAK24C,UAAY1nB,EAAEjO,OAAOhjB,KAAK24C,WAAYyI,KAAMphD,KAAKwgD,kBAAkBY,SAIpExB,iBAAAtoC,UAAAwpC,0BAAR,cAAAhd,GAAA9jC,IAEEA,MAAKm4C,gBACFkJ,mBAAmBrhD,KAAKwgD,mBACxBvc,UAAU,SAACqd,GAEVxd,EAAKmc,mBAAmBhiD,KAAKqjD,EAAa9I,SAC1C1U,EAAKqc,qBAAqBliD,KAAKqjD,EAAa5I,cAhHlDtU,YAACd,EAAAiM,Q/Cs8jBMpK,WAAW,cAAepoC,SAC3B6iD,iBAAiBtoC,UAAW,OAAQ,Q+Cr8jB1C8sB,YAACd,EAAAiM,MAAM,iB/Cw8jBApK,WAAW,cAAepoC,SAC3B6iD,iBAAiBtoC,UAAW,WAAY,Q+Cp9jBhDsoC,iBAAAxb,YAACd,EAAAe,WACCC,SAAU,UACViN,YAAa,iDACb/M,QAAStsC,EAAQ,MACjBusC,YAAasI,EAAA8C,gBAAiBW,EAAApD,sB/Cw9jBvBjI,WAAW,qBAAsB8S,EAAmBc,eAAgBzV,EAAOkO,cAC5EoO,oB+Ct9jBK3nD,GAAA2nD,iBAAgBA,G/C89jBvB2B,IACA,SAASvpD,EAAQC,GgDz/jBvBD,EAAAC,QAAA,oYhD+/jBMupD,IACA,SAASxpD,EAAQC,GiDhgkBvBD,EAAAC,QAAA,qQjDsgkBMwpD,IACA,SAASzpD,EAAQC,EAASC,GAE/B,YkDzgkBD,IAAAorC,GAAAprC,EAA+C,GAE/C+/C,EAAA//C,EAAkD,KAElDwpD,EAAAxpD,EAA+B,KAE/B60C,EAAA70C,EAA8B,IAC9Bg1C,EAAAh1C,EAA2B,IAC3Bu0C,EAAAv0C,EAAyB,IACb+4B,EAAC/4B,EAAM,IAenBonD,EAAA,WAWE,QAAAA,mBAAoBnH,EAAyCwJ,GAAzC3hD,KAAAm4C,kBAAyCn4C,KAAA2hD,UAuH/D,MApHErC,mBAAAhoC,UAAAu2B,SAAA,WACE,GAAIiM,GAAW95C,KAAKylC,SAASyI,SAE7BluC,MAAK4hD,WAAa3J,EAAAc,eAAe8I,UAAU/H,EAE3C,IAAIgI,IAAe9hD,KAAK4hD,YAAc1U,EAAA2B,aAAaiL,KAAc95C,KAAK+hD,MAAM9oD,OAAS,CACjF6oD,IACF9hD,KAAKgiD,YAEPhiD,KAAKiiD,cAAgBhK,EAAAc,eAAemJ,aAAapI,IAInD/8C,OAAAgpC,eAAIuZ,kBAAAhoC,UAAA,clD6+jBGrT,IkD7+jBP,WACE,MAAOjE,MAAK+hD,MAAM9oD,OAAS+G,KAAKiiD,eAAiBjiD,KAAK4hD,WAAa,EAAI,IlD++jBlE5b,YAAY,EACZC,cAAc,IkD7+jBrBlpC,OAAAgpC,eAAIuZ,kBAAAhoC,UAAA,iBlDg/jBGrT,IkDh/jBP,WACE,QAASjE,KAAK+hD,MAAM9oD,QlDk/jBf+sC,YAAY,EACZC,cAAc,IkDh/jBrBlpC,OAAAgpC,eAAIuZ,kBAAAhoC,UAAA,sBlDm/jBGrT,IkDn/jBP,WACE,MAAOjE,MAAK4hD,YAAc5hD,KAAKiiD,cAAgB,GlDq/jB1Cjc,YAAY,EACZC,cAAc,IkDn/jBrBqZ,kBAAAhoC,UAAA0qC,UAAA,WAEE9U,EAAA2B,aAAa7uC,KAAKylC,SAASyI,WAAaluC,KAAKmiD,qBAAuBniD,KAAKoiD,oBAI3E9C,kBAAAhoC,UAAA6qC,mBAAA,cAAAre,GAAA9jC,KAIMqiD,EAAeriD,KAAKm4C,gBAAgBS,SAAS54C,KAAKylC,SAASyI,UAE/DmU,GAAepxB,EAAEjO,OAAOq/B,GAAe5J,OAAQhM,EAAAnE,WAAWE,UAC1D,IAAI8Z,MACArf,EAAOjjC,IACXixB,GAAE3yB,QAAQ+jD,EAAc,SAACE,EAA0B7wB,GACjDoS,EAAKqU,gBAAgBkJ,mBAAmBkB,GACrCte,UAAU,SAAAqd,GAETgB,EAAKnkD,MAAMokD,EAAajB,IAEpBgB,EAAKrpD,SAAWopD,EAAappD,QAC/Bg4B,EAAE3yB,QAAQgkD,EAAM,SAACE,GACfD,EAAcC,EAAO,GACrBlB,EAAekB,EAAO,GACtBvf,EAAKwf,SAASF,EAAajB,UASvChC,kBAAAhoC,UAAAorC,qBAAA,cAAA5e,GAAA9jC,IACE,IAAKktC,EAAA2B,aAAa7uC,KAAKylC,SAASyI,WAAhC,CACA,GAAIyU,MAEAN,EAAeriD,KAAKm4C,gBAAgBS,SAAS54C,KAAKylC,SAASyI,UAK/D,OAJAjd,GAAE3yB,QAAQ0B,KAAK+hD,MAAO,SAACxB,EAAmBtvB,GACxC,GAAIsxB,GAActxB,EAAEhO,KAAKo/B,GAAe3wB,GAAI6uB,EAAK7uB,IACjDixB,GAAQpC,EAAK7uB,IAAMoS,EAAKqU,gBAAgBwI,kBAAkB4B,KAErDI,IAGTrD,kBAAAhoC,UAAA8qC,iBAAA,cAAAte,GAAA9jC,KACM4iD,EAAqB5iD,KAAKm4C,gBAAgBS,SAAS54C,KAAKylC,SAASyI,WAAW,EAC5EluC,MAAK6iD,aAGH7iD,KAAK8iD,4BACP9iD,KAAKyiD,SAASG,EAAoB5iD,KAAK8iD,6BAIvC9iD,KAAKm4C,gBAAgBkJ,mBAAmBuB,GACrC3e,UAAU,SAAAqd,GACTxd,EAAKgf,4BAA8BxB,EACnCxd,EAAK2e,SAASG,EAAoBtB,OAK5ChC,kBAAAhoC,UAAAyrC,aAAA,WACE/iD,KAAK+hD,MAAM1+C,OAGLi8C,kBAAAhoC,UAAAmrC,SAAR,SAAiBF,EAA0BjB,GACzC,GAAI9I,GAAU8I,EAAa9I,QAAQ,GAC/BE,EAAY4I,EAAa5I,UAAU,EACnCA,GAAUhnB,KAAO8mB,EAAQ9mB,KAC3BgnB,EAAY4I,EAAa5I,UAAU,GAErC,IAAI6H,IACF7uB,GAAI6wB,EAAY7wB,GAEhB8mB,SACE9mB,GAAI8mB,EAAQ9mB,GACZ/4B,MAAO,GAET+/C,WACEhnB,GAAIgnB,EAAUhnB,GACd/4B,MAAO,GAIX,OADAqH,MAAK+hD,MAAM5jD,KAAKoiD,GACTA,GA5HTnc,YAACd,EAAAiM,QlDumkBMpK,WAAW,cAAe9qC,QAC3BilD,kBAAkBhoC,UAAW,QAAS,QkDtmkB5C8sB,YAACd,EAAAiM,MAAM,iBlDymkBApK,WAAW,cAAepoC,SAC3BuiD,kBAAkBhoC,UAAW,WAAY,QkDrnkBjDgoC,kBAAAlb,YAACd,EAAAe,WACCC,SAAU,WACV/W,SAAUr1B,EAAQ,KAClBssC,QAAStsC,EAAQ,MACjBusC,YAAaid,EAAA9B,iBAAkB7S,EAAA8C,mBlDynkBxB1K,WAAW,qBAAsB8S,EAAmBc,eAAgBzV,EAAO0S,UAC5EsJ,qBkDvnkBKrnD,GAAAqnD,kBAAiBA,GlD+nkBxB0D,IACA,SAAShrD,EAAQC,EAASC,GAE/B,YmD1pkBD,IAAAu0C,GAAAv0C,EAA2D,IAE/C+4B,EAAC/4B,EAAM,IAcnB+qD,EAAA,WA4BE,QAAAA,aAAoBC,EAAqBC,EAAyBC,GAA9CpjD,KAAAkjD,MAAqBljD,KAAAmjD,UAAyBnjD,KAAAojD,YA4CpE,MAtESH,aAAArlD,SAAP,SAAgBylD,GACd,OAAQA,GACN,IAAKC,GAAYC,YACf,MAAO,aAET,KAAKD,GAAYvZ,SACf,MAAO,UAET,KAAKuZ,GAAYtZ,QACf,MAAO,SAET,KAAKsZ,GAAYrZ,YACf,MAAO,aACT,KAAKqZ,GAAYE,OACf,MAAO,QACT,KAAKF,GAAYG,YACf,MAAO,aACT,KAAKH,GAAYI,OACf,MAAO,QACT,KAAKJ,GAAYK,SACf,MAAO,UACT,SACE,KAAM,IAAInxB,OAAM,yBAQtBz1B,OAAAgpC,eAAIkd,YAAA3rC,UAAA,QnD0okBGrT,ImD1okBP,WACE,MAAOjE,MAAKojD,WnD4okBPpd,YAAY,EACZC,cAAc,ImD1okBrBlpC,OAAAgpC,eAAIkd,YAAA3rC,UAAA,MnD6okBGrT,ImD7okBP,WACE,MAAOjE,MAAKkjD,KnD+okBPld,YAAY,EACZC,cAAc,ImD7okBrBlpC,OAAAgpC,eAAIkd,YAAA3rC,UAAA,UnDgpkBGrT,ImDhpkBP,WACE,MAAOjE,MAAKmjD,SnDkpkBPnd,YAAY,EACZC,cAAc,ImDhpkBrBlpC,OAAAgpC,eAAIkd,YAAA3rC,UAAA,cnDmpkBGrT,ImDnpkBP,WACE,MAAOg/C,aAAYrlD,SAASoC,KAAKojD,WAAWt3B,enDqpkBvCka,YAAY,EACZC,cAAc,ImDnpkBrBlpC,OAAAgpC,eAAIkd,YAAA3rC,UAAA,mBnDspkBGrT,ImDtpkBP,WACE,MAAOjE,MAAKojD,WAAaE,EAAYE,QnDwpkBhCxd,YAAY,EACZC,cAAc,ImDrpkBrBlpC,OAAAgpC,eAAIkd,YAAA3rC,UAAA,QnDwpkBGrT,ImDxpkBP,WACE,MAAOjE,MAAKojD,UAAYE,EAAYE,QAClCxjD,KAAKmjD,UAAY1W,EAAAnE,WAAWE,SACxB,YAAc,aAClBya,YAAYrlD,SAASoC,KAAKojD,WAC1B,QAAQtsC,KAAK,IAAMmsC,YAAYrlD,SAASoC,KAAKojD,YnD0pkB1Cpd,YAAY,EACZC,cAAc,ImDtpkBrBgd,YAAA3rC,UAAAssC,qBAAA,SAAqBlV,GACnB,MAAOzd,GAAEhO,KAAKyrB,GAAazyB,KAAMgnC,YAAYrlD,SAASoC,KAAKojD,cAG7DrmD,OAAAgpC,eAAIkd,YAAA3rC,UAAA,iBnDwpkBGrT,ImDxpkBP,WACE,MAAOjE,MAAKojD,YAAcE,EAAYC,anD0pkBjCvd,YAAY,EACZC,cAAc,ImDvpkBvBgd,cAxEahrD,GAAAgrD,YAAWA,EA0ExB,SAAYK,GACVA,IAAA,6BACAA,IAAA,uBACAA,IAAA,qBACAA,IAAA,6BACAA,IAAA,mBACAA,IAAA,6BACAA,IAAA,mBACAA,IAAA,wBARUrrD,EAAAqrD,cAAArrD,EAAAqrD,gBAAZ,IAAYA,GAAArrD,EAAAqrD,WAYCrrD,GAAA4rD,qBAEX,GAAIZ,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYvZ,UACpD,GAAIkZ,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYtZ,SACpD,GAAIiZ,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYrZ,aACpD,GAAIgZ,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYC,aAEpD,GAAIN,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYvZ,UACpD,GAAIkZ,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYtZ,SACpD,GAAIiZ,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYrZ,aACpD,GAAIgZ,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYC,cAIzCtrD,EAAA6rD,uBAEX,GAAIb,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYE,QACpD,GAAIP,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYG,aACpD,GAAIR,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYI,QACpD,GAAIT,GAAY,EAAGxW,EAAAnE,WAAWE,SAAU8a,EAAYK,UAEpD,GAAIV,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYE,QACpD,GAAIP,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYG,aACpD,GAAIR,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYI,QACpD,GAAIT,GAAY,EAAGxW,EAAAnE,WAAWC,SAAU+a,EAAYK,YnDypkBhDI,IACA,SAAS/rD,EAAQC,GoDxxkBvBD,EAAAC,QAAA,wsBpD8xkBM+rD,IACA,SAAShsD,EAAQC,GqD/xkBvBD,EAAAC,QAAA,6IrDqykBMgsD,IACA,SAASjsD,EAAQC,EAASC,GAK/B,YsDvykBD,IAAAorC,GAAAprC,EAAqD,GACrDu0C,EAAAv0C,EAAkC,IAClC20C,EAAA30C,EAAsB,IACtB40C,EAAA50C,EAAuC,KAevCgsD,EAAA,mBAAAA,qBAKYlkD,KAAAmkD,OAAS,GAAI7gB,GAAAkK,aASzB,MAPE0W,mBAAA5sC,UAAA8sC,mBAAA,SAAmBzrD,GACjBqH,KAAKrH,MAAQA,EACbqH,KAAKmkD,OAAOjV,MACVjtC,KAAMjC,KAAKiC,KACXtJ,MAAOqH,KAAKrH,SAThByrC,YAACd,EAAAiM,QtDqykBMpK,WAAW,cAAe1mB,SAC3BylC,kBAAkB5sC,UAAW,OAAQ,QsDrykB3C8sB,YAACd,EAAAiM,QtDwykBMpK,WAAW,cAAe0Q,SAC3BqO,kBAAkB5sC,UAAW,QAAS,QsDvykB5C8sB,YAACd,EAAAmM,StD0ykBMtK,WAAW,cAAepoC,SAC3BmnD,kBAAkB5sC,UAAW,SAAU,QsDvzkB/C4sC,kBAAA9f,YAACd,EAAAe,WACCC,SAAU,sBACViN,YAAa,wDACb9M,YAAaoI,EAAAwX,QAASvX,EAAA8C,0BACtBpL,QAAStsC,EAAQ,QtD2zkBVitC,WAAW,yBACZ+e,qBsDzzkBKjsD,GAAAisD,kBAAiBA,CAuB9B,IAAA7E,GAAA,mBAAAA,iBAaA,MAREA,cAAA/nC,UAAAgtC,KAAA,SAAKroC,GACH,MAAQjc,MAAKm6C,MAAYn6C,KAAKm6C,MAAMl+B,GAAf,GAGvBojC,aAAA/nC,UAAAitC,oBAAA,SAAoBxT,GAClB/wC,KAAKm6C,MAAMpJ,EAAM9uC,MAAQ8uC,EAAMp4C,OARjCyrC,YAACd,EAAAiM,QtD+ykBMpK,WAAW,cAAesH,EAASxD,YACpCoW,aAAa/nC,UAAW,QAAS,QsDzzkBzC+nC,aAAAjb,YAACd,EAAAe,WACCC,SAAU,gBACViN,YAAa,kDACb9M,YAAayf,GACb1f,QAAStsC,EAAQ,QtD6zkBVitC,WAAW,yBACZka,gBsD3zkBKpnD,GAAAonD,aAAYA,GtDm0kBnBmF,IACA,SAASxsD,EAAQC,GuDj3kBvBD,EAAAC,QAAA,g3BvDu3kBMwsD,IACA,SAASzsD,EAAQC,GwDx3kBvBD,EAAAC,QAAA,0xCxD83kBMysD,IACA,SAAS1sD,EAAQC,GyD/3kBvBD,EAAAC,QAAA,4JzDq4kBM0sD,IACA,SAAS3sD,EAAQC,EAASC,GAE/B,Y0Dr4kBD,IAAAorC,GAAAprC,EAUO,GACPklD,EAAAllD,EAA0B,KAEd+4B,EAAC/4B,EAAM,IACnB60C,EAAA70C,EAA8B,IAC9B40C,EAAA50C,EAAuC,KACvCu0C,EAAAv0C,EAAsC,IACtCi1C,EAAAj1C,EAA+C,KAC/Cg1C,EAAAh1C,EAA2B,IAGrB0sD,EAAgC,KAChCC,EAA+B,IAC/BC,EACJ,GAAI32B,QAAO,IAAIy2B,EAA6B,IAAIC,EAA4B,KAExEE,EAAsB,WAEtBC,EAAsB,WAE1B,GAAIC,KAGJ,OAFAA,GAAEL,GAAiCnY,EAAA7D,YAAYC,QAC/Coc,EAAEJ,GAAgCpY,EAAA7D,YAAYE,OACvCmc,KAIHC,EAAwB,oQAa9BC,EAAA,WA+CE,QAAAA,iBAAoBC,EACA1U,EACAmJ,GAFA75C,KAAAolD,UACAplD,KAAA0wC,cACA1wC,KAAA65C,gBAmEtB,MAtGSsL,iBAAAE,YAAP,SAAmB93B,EAAUysB,GAC3B,GAAIvV,IAAcqI,EAAA8C,0BAkBlB0V,EAAA,WAGE,QAAAA,2BACEtlD,KAAKg6C,OAASA,EAMlB,MAHEsL,yBAAAhuC,UAAAiuC,qBAAA,SAAqB5sD,GACnBqH,KAAKg6C,OAAOrhD,MAAQA,GAzBxB2sD,wBAAAlhB,YAACd,EAAAe,WACCC,SAAU,kBACV/W,SAAUA,EACViX,QACE,wNAWFC,WAAYA,I1Dm2kBDU,WAAW,yBACZmgB,2B0Dv1kBZ,OAAOA,IASTH,gBAAA7tC,UAAAu2B,SAAA,WAEO7tC,KAAKg6C,OAAOrhD,QAAOqH,KAAKg6C,OAAOrhD,MAAQ,GACvCqH,KAAKg6C,OAAOtoB,KACf1xB,KAAKg6C,OAAOtoB,GAAK1xB,KAAK2iD,QAAQ,GAAGjxB,KAKrCyzB,gBAAA7tC,UAAAkuC,gBAAA;AACExlD,KAAKylD,kBAAkBzlD,KAAKg6C,OAAOtoB,KAgBrCyzB,gBAAA7tC,UAAAmuC,kBAAA,SAAkB/zB,GAAlB,GAAAoS,GAAA9jC,IAGE,IAAIA,KAAK0lD,oBAAsBh0B,EAA/B,CACA1xB,KAAK0lD,kBAAoBh0B,EACrB1xB,KAAK2lD,eAAe3lD,KAAK2lD,cAAcC,SAE3C,IAAIC,GAAO50B,EAAEhO,KAAKjjB,KAAK2iD,SAAUjxB,GAAIA,IAAKnE,SACtCA,EAAWs4B,EAAK5qC,MAAM6pC,GACvBvsD,IAAI,SAACutD,GACJ,IAAKA,EAAM,MAAO,EAClB,IAAIl1B,GAAUk1B,EAAK5mD,MAAM4lD,GACrB9V,EAASpe,EAAUo0B,EAAoBp0B,EAAQvtB,QAAS,CAC5D,OAAO2rC,GAASkW,EAAsB/tC,QAAQ4tC,EAAqB/V,GAAU8W,IAC5EhvC,KAAK,GAEV9W,MAAKolD,QAAQW,mBACXZ,gBAAgBE,YAAY93B,EAAUvtB,KAAKg6C,QAC3Ch6C,KAAKgmD,0BACLC,KAAK,SAAAC,GAAO,MAAApiB,GAAK6hB,cAAgBO,MAIrCf,gBAAA7tC,UAAA6uC,gBAAA,SAAgBz0B,GACd1xB,KAAKylD,kBAAkB/zB,IAGzByzB,gBAAA7tC,UAAA8uC,wBAAA,SAAwBC,GACtBrmD,KAAKg6C,OAAOqM,SAAWA,GAGzBtpD,OAAAgpC,eAAIof,gBAAA7tC,UAAA,e1D20kBGrT,I0D30kBP,WACE,MAAOjE,MAAK65C,cACTI,mBAAmBj6C,KAAKg6C,OAAOtoB,IAAI8mB,S1D60kBjCxS,YAAY,EACZC,cAAc,I0D57kBrB7B,YAACd,EAAAiM,Q1Dg8kBMpK,WAAW,cAAepoC,SAC3BooD,gBAAgB7tC,UAAW,SAAU,Q0Dh8kB3C8sB,YAACd,EAAAiM,Q1Dm8kBMpK,WAAW,cAAe9qC,QAC3B8qD,gBAAgB7tC,UAAW,UAAW,Q0Dn8kB5C8sB,YAACd,EAAAiM,MAAM,aACNpC,EAAA5H,eAAe4H,EAAAxH,kB1Ds8kBTR,WAAW,cAAemM,UAC3B6T,gBAAgB7tC,UAAW,WAAY,Q0Dj8kB7C8sB,YAACd,EAAAsS,UAAU,eAAgB0Q,KAAMhjB,EAAAijB,mB1Do8kB1BphB,WAAW,cAAe7B,EAAOijB,mBAClCpB,gBAAgB7tC,UAAW,2BAA4B,Q0Dx9kB/D6tC,gBAAA/gB,YAACd,EAAAe,WACCC,SAAU,SACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBqsC,OAAQ6Y,EAAArS,aACRtG,YAAasI,EAAA8C,gBAAiB/C,EAAA8C,4B1D49kBvBzK,WAAW,qBAAsB7B,EAAOkjB,uBAAwBljB,EAAOkO,WAAYtE,EAAe8L,gBACnGmM,mB0D19kBKltD,GAAAktD,gBAAeA,CAgI5B,IAAA5F,GAAA,mBAAAA,qBAOA,MALEnb,aAACd,EAAAiM,Q1Di2kBMpK,WAAW,cAAe9qC,QAC3BklD,iBAAiBjoC,UAAW,UAAW,Q0Dj2kB7C8sB,YAACd,EAAAiM,Q1Do2kBMpK,WAAW,cAAe9qC,QAC3BklD,iBAAiBjoC,UAAW,UAAW,Q0Dn2kB7C8sB,YAACd,EAAAiM,MAAM,aACNpC,EAAA5H,eAAe4H,EAAAxH,kB1Ds2kBTR,WAAW,cAAemM,UAC3BiO,iBAAiBjoC,UAAW,WAAY,Q0Dv3kBhDioC,iBAAAnb,YAACd,EAAAe,WACCC,SAAU,UACVE,QAAS,qDAKTjX,SAAUr1B,EAAQ,KAClBusC,YAAa0gB,K1Du3kBNhgB,WAAW,yBACZoa,oB0Dt3kBKtnD,GAAAsnD,iBAAgBA,G1D83kBvBkH,IACA,SAASzuD,EAAQC,G2DpjlBvBD,EAAAC,QAAA,uoB3D0jlBMyuD,IACA,SAAS1uD,EAAQC,G4D3jlBvBD,EAAAC,QAAA,qG5DiklBM0uD,IACA,SAAS3uD,EAAQC,EAASC,GAE/B,Y6DpklBD,IAAAorC,GAAAprC,EAAuC,GAEvC40C,EAAA50C,EAAuC,KACvC46C,EAAA56C,EAA4B,KAC5Bm+C,EAAAn+C,EAAuD,KAUvDsnD,EAAA,WAME,QAAAA,sBAAoB/L,EACA+C,GADAx2C,KAAAyzC,iBACAzzC,KAAAw2C,qBA6BtB,MAvBEgJ,sBAAAloC,UAAAu2B,SAAA,WACE7tC,KAAK82C,MAAQ92C,KAAKw2C,mBACf8C,gBAAgBt5C,KAAK22C,SAG1B55C,OAAAgpC,eAAIyZ,qBAAAloC,UAAA,Y7DmjlBGrT,I6DnjlBP,WACE,MAAOjE,MAAKyzC,eAAeiB,O7DqjlBtB1O,YAAY,EACZC,cAAc,I6DnjlBrBlpC,OAAAgpC,eAAIyZ,qBAAAloC,UAAA,U7DsjlBGrT,I6DtjlBP,WACE,MAAOjE,MAAK4mD,SAAW5mD,KAAK22C,OAAOwD,MAAMK,OACrCx6C,KAAK82C,MAAM0D,Q7DwjlBVxU,YAAY,EACZC,cAAc,I6DtjlBrBlpC,OAAAgpC,eAAIyZ,qBAAAloC,UAAA,O7DyjlBGrT,I6DzjlBP,WACE,MAAOjE,MAAK82C,MAAM+P,K7D2jlBb7gB,YAAY,EACZC,cAAc,I6DxjlBrBlpC,OAAAgpC,eAAIyZ,qBAAAloC,UAAA,Y7D2jlBGrT,I6D3jlBP,WACE,MAAOjE,MAAK82C,MAAMgQ,c7D6jlBb9gB,YAAY,EACZC,cAAc,I6D7llBrB7B,YAACd,EAAAiM,Q7DimlBMpK,WAAW,cAAepoC,SAC3ByiD,qBAAqBloC,UAAW,SAAU,Q6D3mlBlDkoC,qBAAApb,YAACd,EAAAe,WACCC,SAAU,eACVE,QAAStsC,EAAQ,MACjBq1B,SAAUr1B,EAAQ,KAClBusC,YAAaqI,EAAA8C,4B7D+mlBNzK,WAAW,qBAAsB2N,EAAiBmD,cAAeI,EAAsBuB,qBACxF4H,wB6D7mlBKvnD,GAAAunD,qBAAoBA,G7DqnlB3BuH,GACA,SAAS/uD,EAAQC,EAASC,GAK/B,Y8DpolBD,IAAAorC,GAAAprC,EAAwE,GACxE46C,EAAA56C,EAA4B,KAE5Bi1C,EAAAj1C,EAA+C,KAK/C23C,EAAA,WAUE,QAAAA,iBAAoBa,EAAiC+C,EACjCuT,GADAhnD,KAAA0wC,cAAiC1wC,KAAAyzC,iBACjCzzC,KAAAgnD,YANpBhnD,KAAAinD,mBAA6B,EA+B/B,MApBEpX,iBAAAv4B,UAAAu2B,SAAA,cAAA/J,GAAA9jC,IACEA,MAAKouC,cAAgBpuC,KAAKyzC,eACvBxP,UAAU,SAACtrC,GAAU,MAAAmrC,GAAKojB,sBAAsBvuD,MAGrDk3C,gBAAAv4B,UAAA+3B,YAAA,WACErvC,KAAKouC,cAAckB,eAGbO,gBAAAv4B,UAAA4vC,sBAAR,SAA8BC,GAG5B,GAAIC,GAAgBD,GAAcnnD,KAAKinD,oBAClCE,IAAennD,KAAKinD,iBAGzBjnD,MAAKgnD,UAAUK,gBAAgBrnD,KAAK0wC,YAAYQ,cAAe,UAAWkW,IA7B5EhjB,YAACd,EAAAiM,MAAM,UACNpC,EAAA5H,eAAe4H,EAAAxH,kB9DmplBTR,WAAW,cAAemM,UAC3BzB,gBAAgBv4B,UAAW,oBAAqB,Q8D3plBxDu4B,gBAAAzL,YAACd,EAAA+P,WACC/O,SAAU,a9D+plBHa,WAAW,qBAAsB7B,EAAOkO,WAAYsB,EAAiBmD,cAAe3S,EAAOgkB,YAC5FzX,mB8D9plBK53C,GAAA43C,gBAAeA,G9DsqlBtB0X,IACA,SAASvvD,EAAQC,EAASC,GAE/B,YACA,SAASsvD,UAAS1O,GACd,IAAK,GAAI2O,KAAK3O,GAAQ7gD,EAAQ2H,eAAe6nD,KAAIxvD,EAAQwvD,GAAK3O,EAAE2O,I+DxrlBrE,GAAAnkB,GAAAprC,EAAiC,KACjCsrC,EAAAtrC,EAAiC,KACjC8iD,EAAA9iD,EAAoC,IACpCsvD,UAAAtvD,EAAc,MAGDD,EAAAyvD,gBACXlkB,EAAAyY,mBAAoBjB,EAAAS,uBAETxjD,EAAA0vD,cACRrkB,EAAAskB,mBAAkBn1C,S/D4rlBjBo1C,IACA,SAAS7vD,EAAQC,GgEvslBvBD,EAAAC,QAAA,qShE6slBM6vD,IACA,SAAS9vD,EAAQC,EAASC,GAE/B,YiEhtlBD,IAAAorC,GAAAprC,EAAyB,GACzBu0C,EAAAv0C,EAGO,IACP6vD,EAAA7vD,EAAmB,GAEnBA,GAAO,KACPA,EAAO,IACP,IAAAynD,GAAAznD,EAA8B,IAC9B+0C,EAAA/0C,EAA2B,IACf+4B,EAAC/4B,EAAM,IACnBg1C,EAAAh1C,EAA2B,IAO3B+3C,EAAA,WAeE,QAAAA,mBAAoB+X,GAAAhoD,KAAAgoD,QAZZhoD,KAAAioD,gBAAkB,GAAItI,GAAAO,oBAEtBlgD,KAAAkoD,kBAAoB,GAAIvI,GAAAO,oBA+ElC,MA7EiBjQ,mBAAAkY,sBAAf,SAAqCC,EAAoBja,GACvD,OAAQlsC,KAAMksC,EAAeka,UAAWD,KAG3BnY,kBAAAqY,oBAAf,SAAmCF,GACjC,OAAQnmD,KAAMwqC,EAAA3F,cAAcI,MAAO4J,OAAO,EAAMuX,UAAWD,KAa7DnY,kBAAA34B,UAAAixC,KAAA,WACEvoD,KAAKwoD,sBACLxoD,KAAKyoD,yBAIPxY,kBAAA34B,UAAAmxC,sBAAA,cAAA3kB,GAAA9jC,KACM0oD,EAAW,wCACf1oD,MAAKgoD,MAAM/jD,IAAIykD,GACZnwD,IAAI,SAAAi6C,GAAO,MAAmBA,GAAImW,SAClC1kB,UACC,SAAAyK,GAAc,MAAA5K,GAAKokB,kBAAkBjqD,KAAKywC,IAC1C,SAAAka,GAAO,MAAAnW,SAAQE,MAAMiW,IACrB,WAAM,MAAAnW,SAAQC,IAAI,kCAIxBzC,kBAAA34B,UAAAkxC,oBAAA,cAAA1kB,GAAA9jC,KACM0oD,EAAW,sCACf1oD,MAAKgoD,MAAM/jD,IAAIykD,GACZnwD,IAAI,SAAAi6C,GAAO,MAAiBA,GAAImW,SAChC1kB,UACC,SAAAyK,GAAc,MAAA5K,GAAKmkB,gBAAgBhqD,KAAKywC,IACxC,SAAAka,GAAO,MAAAnW,SAAQE,MAAMiW,IACrB,WAAM,MAAAnW,SAAQC,IAAI,kCAKxB31C,OAAAgpC,eAAIkK,kBAAA34B,UAAA,oBjEirlBGrT,IiEjrlBP,WACE,MAAOgpC,GAAAzB,aAAaxrC,KAAKkoD,mBAAmB,IjEmrlBvCliB,YAAY,EACZC,cAAc,IiEjrlBrBlpC,OAAAgpC,eAAIkK,kBAAA34B,UAAA,kBjEorlBGrT,IiEprlBP,WACE,MAAOgpC,GAAAzB,aAAaxrC,KAAKioD,gBAAgB/tB,MAAM,SAACuU,EAAO3C,EAAKJ,GAAQ,QAAE+C,EAAMx1C,WjEsrlBvE+sC,YAAY,EACZC,cAAc,IiEnrlBrBgK,kBAAA34B,UAAA22B,OAAA,SAAO6L,EAAoB3L,GACzB,MAAOjB,GAAA2B,aAAaiL,GAChB95C,KAAK6oD,qBAAqB/O,EAAU3L,GACpCnuC,KAAK8oD,mBAAmBhP,EAAU3L,IAIxC8B,kBAAA34B,UAAAuxC,qBAAA,SAAqB/O,EAAoB3L,GACvC,MAAOnuC,MAAK+oD,kBAGd9Y,kBAAA34B,UAAAwxC,mBAAA,SAAmBhP,EAAoB3L,GACrC,GAAI6a,GAAe7a,EAAgB,iBAC/B8a,EAAiBhZ,kBAAkB+Y,GACnC/Y,kBAAkB+Y,GAAgB/Y,kBAAkBkY,qBACxD,OAAOlb,GAAAzB,aAAaxrC,KAAKioD,gBAAgB1vD,IAAI,SAAAk2C,GAC3C,MAAOxd,GAAEjO,OAAOyrB,EAAOwa,EAAenP,EAAU3L,QAhFtD8B,kBAAA7L,YAACd,EAAA4lB,ajEuwlBQ/jB,WAAW,qBAAsB4iB,EAAOoB,QACzClZ,qBiEvwlBKh4C,GAAAg4C,kBAAiBA,GjE+wlBxBmZ,IACA,SAASpxD,EAAQC,EAASC,GAE/B,YkElylBD,IAAAorC,GAAAprC,EAAkC,GAElCmxD,EAAAnxD,EAGO,KACPoxD,EAAApxD,EAAuC,KAIvCqxD,EAAA,mBAAAA,mBAGA,MAAAA,kBAKatxD,GAAAuxD,UACXC,IAAK,MAGP,IAAAvX,GAAA,WAEE,QAAAA,aAAoBwX,GAAA1pD,KAAA0pD,cAQtB,MAHExX,aAAA56B,UAAA26B,QAAA,SAAQ0X,GACN,MAAyB3pD,MAAK0pD,YAAYC,IAT9CzX,YAAA9N,YAACd,EAAA4lB,alEsylBQ/jB,WAAW,qBAAsBokB,KAClCrX,ekEtylBKj6C,GAAAi6C,YAAWA,EAaXj6C,EAAA2xD,eACRN,EAAAO,yBAAwBvqC,QAC3BgkB,EAAAwmB,QAAQP,GACNQ,WAAY,SAACC,GACX,GAAIC,GAAa,GAAIV,EAErB,OADAU,GAAWhyD,EAAAuxD,SAASC,KAAOO,EACpBC,GAETC,MAAOb,EAAAc,uBAETjY,KlEkylBIkY,IACA,SAASpyD,EAAQC,EAASC,GAE/B,YmEr1lBD,IAAAorC,GAAAprC,EAAyB,GACzBg1C,EAAAh1C,EAAyC,IACzCu0C,EAAAv0C,EAA6D,IAC7Do+C,EAAAp+C,EAA+B,IAGnB+4B,EAAC/4B,EAAM,IACnBmyD,EAAAnyD,EAAsB,IACtB+0C,EAAA/0C,EAA2B,IAO3BktC,EAAA,WAEE,QAAAA,kBAAoByU,EACApD,GADAz2C,KAAA65C,gBACA75C,KAAAy2C,oBA+FtB,MA1FErR,kBAAA9tB,UAAA0sB,KAAA,cAAAF,GAAA9jC,IAEEA,MAAK65C,cAAc0O,MACnB,IAAI9c,GAAU,GAAI4e,GAAAC,QACdC,EAAS,CAgCb,OA/BAt5B,GAAE3yB,QAAQmuC,EAAAtF,SAAU,SAAC2S,EAAoB7+C,GAEvC,GAAIu+C,GAAWtM,EAAA2B,aAAaiL,EACxBN,IAAYM,IAAarN,EAAAtF,SAASQ,KACtC4iB,IACAzmB,EAAK+V,cACFqE,iBAAiBpE,GACjB7V,UAAU,SAAAka,GAEP,GAAIjkB,GAAsBikB,EAAW5C,MAAM9O,EAAAnE,WAAWE,UAAU,GAG5DgiB,EAAQhR,EACR1V,EAAKsW,oBAAoB+D,EAAW9D,QAASP,EAAU5f,EAAMje,MAC7D6nB,EAAK2W,kBAAkBX,EAAU5f,EAAMje,KAGvCu9B,IACF1V,EAAK2S,kBAAkBgU,aAAa,UAAmBD,GACvD1mB,EAAK2S,kBAAkBgU,aAAa,YAAax5B,EAAEpK,UAAkB2jC,KAErE1mB,EAAK2S,kBAAkBtrB,OAAO2uB,EAAU0Q,GAE1CD,IACKA,GACH9e,EAAQxtC,KAAK6lC,EAAK2S,wBAMrBxJ,EAAAzB,aAAaC,IAKdrG,iBAAA9tB,UAAA8iC,oBAAR,SAA4BC,EAAuBP,EAAU79B,GAE3D,GAAIq+B,GAAWrpB,EAAE9O,MAAMk4B,GAAS94B,KAAK,GAAGhpB,IAAI,SAAAyhD,GAC1C,OAAQtoB,GAAIsoB,EAAOtoB,MAClB/4B,OACH,QACE8/C,OAAQhM,EAAAnE,WAAWE,SACnBvmC,KAAM63C,EACN79B,KAAMA,EACNs+B,MAAO,IAEPJ,OACEK,OAAQ,OAGV3B,QACAwB,QAASC,IAILlV,iBAAA9tB,UAAAmjC,kBAAR,SAA0BX,EAAoB79B,GAC5C,GAAIy+B,IACFjC,OAAQhM,EAAAnE,WAAWE,SACnBvmC,KAAM63C,EACN79B,KAAMA,EACNs+B,MAAO,IACPJ,OACEnD,SAAU,EACVE,QAAS,EACTE,YAAa,GAGfuD,MAAO,IACPjM,YACEkC,SACAC,SACAC,UAGF+H,QACAwB,YAEE50C,GAAQ,WAAY,UAAW,eAC/BxK,EAAMwK,EAAKwrB,EAAEzF,OAAO,EAAG/lB,EAAKxM,OAAS,GAGzC,OAFAyhD,GAAKP,MAAMl/C,GAAOg2B,EAAEzF,OAAO,IAAK,KAEzBkvB,GAhGXtV,iBAAAhB,YAACd,EAAA4lB,anEk6lBQ/jB,WAAW,qBAAsB+H,EAAe8L,aAAc1C,EAAoBuB,oBACnFzS,oBmEl6lBKntC,GAAAmtC,iBAAgBA,GnE06lBvBslB,IACA,SAAS1yD,EAAQC,EAASC,GAK/B,YoE17lBD,IAAAorC,GAAAprC,EAA6C,GAE7Cu0C,EAAAv0C,EAAgC,IAChCg1C,EAAAh1C,EAOO,IAEK+4B,EAAC/4B,EAAM,IACnBo+C,EAAAp+C,EAA+B,IAG/B0/C,EAAA,WAEE,QAAAA,mBAAoBiC,EAEApD,GAFAz2C,KAAA65C,gBAEA75C,KAAAy2C,oBAqBtB,MAhBEmB,mBAAAtgC,UAAAwS,OAAA,SAAOutB,EAAuBmB,EAAkBE,GAE9C,GAAIiS,GAAkB3qD,KAAK65C,cAAc+Q,iBACrCC,EAAoB7qD,KAAK65C,cAAciR,kBAI3C,OAHAzT,GAAYA,EAAYA,EAAYr3C,KAAKy2C,kBAAkBY,UAC3DmB,EAAUA,GAAWnB,EAAUuF,QAAQpE,QACvCE,EAAYA,GAAarB,EAAUuF,QAAQlE,UACpC,GAAIqS,GACT1T,EAAWwT,EACXF,EAAiBnS,EAASE,IAG9Bd,kBAAAtgC,UAAAgiC,gBAAA,SAAgB3C,EAAgBU,GAC9B,MAAOr3C,MAAK8pB,OAAOutB,EAAWV,GAAQ6B,SAvB1CZ,kBAAAxT,YAACd,EAAA4lB,apEm8lBQ8B,QAAQ,EoE/7lBF1nB,EAAA2nB,OAAO3nB,EAAA4nB,WAAW,WAAM,MAAA5U,GAAAuB,qBpEg8lB9B1S,WAAW,qBAAsB+H,EAAe8L,aAAc1C,EAAoBuB,oBACnFD,qBoEp8lBK3/C,GAAA2/C,kBAAiBA,CA2B9B,IAAAmT,GAAA,WAME,QAAAA,qBAAoBI,EACRN,EACQD,EACAQ,EAAgCC,GAHhCrrD,KAAAmrD,aAEAnrD,KAAA4qD,mBACA5qD,KAAAorD,iBAAgCprD,KAAAqrD,mBAGlDrrD,KAAKsrD,SAAW,GAAIC,GAAsBH,EAAgBP,EAAmB7qD,MAC7EA,KAAKwrD,WAAa,GAAID,GAAsBF,EAAkBR,EAAmB7qD,MA4JrF,MAzJEjD,QAAAgpC,eAAIglB,oBAAAzzC,UAAA,WpEu6lBGrT,IoEv6lBP,WACE,MAAOjE,MAAKsrD,UpEy6lBPtlB,YAAY,EACZC,cAAc,IoEv6lBrBlpC,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,apE06lBGrT,IoE16lBP,WACE,MAAOjE,MAAKwrD,YpE46lBPxlB,YAAY,EACZC,cAAc,IoE16lBrBlpC,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,cpE66lBGrT,IoE76lBP,WAEE,GAAIwnD,GAAsC,GAAnBzrD,KAAKo3C,YACxBsU,EAAW1rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQY,aACtD8hB,EAAiB5rD,KAAK6rD,oCAAoCpf,EAAAvD,QAAQY,YACtE,OAAO2hB,GAAkBC,EAAWE,GpE86lB/B5lB,YAAY,EACZC,cAAc,IoE56lBrBlpC,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,YpE+6lBGrT,IoE/6lBP,WACE,GAAI6nD,GAAO9rD,KAAK+rD,QAAQ,SAAC75B,EAAKwoB,GAAS,MAAAxoB,GAAMwoB,EAAKP,MAAMnD,WACpDgV,EAAmBhsD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQa,SAClE,OAAO+hB,GAAOE,GpEi7lBThmB,YAAY,EACZC,cAAc,IoE/6lBrBlpC,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,WpEk7lBGrT,IoEl7lBP,WACE,GAAI6nD,GAAO9rD,KAAK+rD,QAAQ,SAAC75B,EAAKwoB,GAAS,MAAAxoB,GAAMwoB,EAAKP,MAAMjD,UACpDwU,EAAW1rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQc,QAC1D,OAAO8hB,GAAOJ,GpEo7lBT1lB,YAAY,EACZC,cAAc,IoEl7lBrB8kB,oBAAAzzC,UAAA20C,WAAA,SAAWvR,GACT,GAAIoR,GAAOpR,EAAKP,MAAMjD,QAClBwU,EAAW1rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQc,QAAS0Q,EACnE,OAAOoR,GAAOJ,GAIhB3uD,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,epEm7lBGrT,IoEn7lBP,WACE,GAAI6nD,GAAO,IACPI,EAAWlsD,KAAK+rD,QAAQ,SAAC75B,EAAKwoB,GAAS,MAAAxoB,GAAMwoB,EAAKP,MAAM/C,cACxDsU,EAAW1rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQe,YAC1D,OAAO6hB,GAAOI,EAAWR,GpEq7lBpB1lB,YAAY,EACZC,cAAc,IoEn7lBrBlpC,OAAAgpC,eAAIglB,oBAAAzzC,UAAA,UpEs7lBGrT,IoEt7lBP,WAEE,GAAI6nD,GAAsB,GAAf9rD,KAAKk3C,QACZwU,EAAW1rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQW,QACtD+hB,EAAiB5rD,KAAK6rD,oCAAoCpf,EAAAvD,QAAQW,OACtE,OAAOiiB,GAAOJ,EAAWE,GpEw7lBpB5lB,YAAY,EACZC,cAAc,IoEt7lBrB8kB,oBAAAzzC,UAAA60C,aAAA,SAAarS,GACX,GAAIsS,GAAU3f,EAAAvD,QAAQC,UAAU2Q,EAAW,UAC3C,OAAO95C,MAAK6rD,oCAAoCO,IAIlDrB,oBAAAzzC,UAAA+0C,2BAAA,SAA2BD,GACzB,GAAIE,GAAgBtsD,KAAKusD,iCAAiCH,GACtDI,EAAcxsD,KAAK2rD,8BAA8BS,GACjDK,EAAoBzsD,KAAK6rD,oCAAoCO,EACjE,OAAOE,GAAgBE,EAAcC,GAIvC1B,oBAAAzzC,UAAAo1C,kBAAA,SAAkB5S,GAChB,MAAO95C,MAAK4qD,iBAAiB+B,QAAQ7S,IAGvCiR,oBAAAzzC,UAAAi1C,iCAAA,SAAiCH,GAAjC,GAAAtoB,GAAA9jC,IACE,OAAOA,MAAK+rD,QAAQ,SAAC75B,EAAKwoB,GAExB,IAAKA,EAAKL,QAAQphD,OAAQ,MAAOi5B,EAEjC,IAAIisB,GAAara,EAAK4oB,kBAAkBhS,EAAKz4C,MAGzC2qD,EAAqB37B,EAAEjO,OACzBm7B,EAAW9D,SACV+R,SAAUA,KACX7zD,IAAI,SAAAyhD,GAAU,MAAAA,GAAOtoB,IAGvB,KAAKk7B,EAAmB3zD,OAAQ,MAAOi5B,EAGvC,IAAI8nB,GAASU,EAAKL,QAAQ,EAC1B,OAAOnoB,IAAQjB,EAAE/oB,SAAS0kD,EAAoB5S,EAAOtoB,IAAMsoB,EAAOrhD,MAAQ,MAM9EoyD,oBAAAzzC,UAAAu1C,uBAAA,SAAuBT,GACrB,MAAOn7B,GAAEjO,OACPhjB,KAAK4qD,iBAAiBlc,YACrB0d,SAAUA,KACX7zD,IAAI,SAAA6zC,GAAQ,MAAAA,GAAK1a,MAGrBq5B,oBAAAzzC,UAAAq0C,8BAAA,SAA8BS,EAAkBU,GAC9C,GAAIC,GAAwB/sD,KAAK6sD,uBAAuBT,EACxD,OAAKW,GAAsB9zD,OACpB+G,KAAK+rD,QAAQ,SAAC75B,EAAKwoB,GAExB,GAAI7B,GAAO6B,EAAK7B,IAGhB,OAAO3mB,GAAMjB,EAAExN,OAAOo1B,EAAM,SAACmU,EAAOC,GAEhC,GAAIzU,GAAUyU,EAAIzU,SAAWvnB,EAAE/oB,SAAS6kD,EAAuBE,EAAIzU,QAAQ9mB,IACvEu7B,EAAIzU,QAAQ7/C,MACZ,EAEA+/C,EAAYuU,EAAIvU,WAAaznB,EAAE/oB,SAAS6kD,EAAuBE,EAAIvU,UAAUhnB,IAC7Eu7B,EAAIvU,UAAU//C,MACd,CAEJ,OAAOq0D,GAAQxU,EAAUE,GAExB,IAEJoU,GApBuC,GAuB5C/B,oBAAAzzC,UAAAu0C,oCAAA,SAAoCO,GAClC,GAAIW,GAAwB/sD,KAAK6sD,uBAAuBT,EACxD,OAAKW,GAAsB9zD,OAGpB+G,KAAK+rD,QAAQ,SAAC75B,EAAKwoB,GACxB,GAAIhM,GAA0Bzd,EAAEnR,QAAQmR,EAAE12B,OAAOmgD,EAAKhM,YACtD,OAAOxc,GAAMjB,EAAExN,OAAOirB,EAAY,SAACse,EAAO5gB,GACtC,MAAO4gB,IAAS/7B,EAAE/oB,SAAS6kD,EAAuB3gB,EAAK1a,KAAO0a,EAAKzzC,MAAQ,IAC1E,KAPmC,GAY5CoyD,oBAAAzzC,UAAAy0C,QAAA,SAAQ51C,EAAyC22C,GAE/C,GAAII,GAAMJ,GAAeA,GAAuB77B,EAAE12B,OAAOyF,KAAKmrD,WAAWzQ,KACzE,OAAOzpB,GAAExN,OAAOypC,EAAK,SAACh7B,EAAKwoB,GACzB,MAAOA,GAAOvkC,EAAG+b,EAAKwoB,GAAQxoB,GAC7B,IAIL64B,oBAAAzzC,UAAAy/B,YAAA,SAAYJ,GACV,GAAIwW,GAAOxW,IAAW32C,KAAKqrD,iBACvBrrD,KAAKwrD,WAAaxrD,KAAKsrD,QAE3B,OAAO6B,GAAK5T,KAEhBwR,sBAzKa9yD,GAAA8yD,oBAAmBA,CA4KhC,IAAAQ,GAAA,WAGE,QAAAA,uBAAoB6B,EACAtC,EACAuC,GAFArtD,KAAAotD,UACAptD,KAAA8qD,qBACA9qD,KAAAqtD,iBAqOtB,MA/NEtwD,QAAAgpC,eAAIwlB,sBAAAj0C,UAAA,OpEs5lBGrT,IoEt5lBP,WAGE,GAAI4iD,GAAM7mD,KAAK6mD,IAEXyG,EAActtD,KAAKstD,YAEnBxG,EAAe9mD,KAAK8mD,aAGpByG,EAAkBvtD,KAAKw6C,OACvBgT,EAAWxtD,KAAKwtD,SAAW,IAC3BC,EAAqBztD,KAAKqtD,eAC3BhB,2BAA2B5f,EAAAvD,QAAQE,iBAClCskB,EAA2B1tD,KAC5B2rD,8BAA8Blf,EAAAvD,QAAQE,iBAErCukB,EAA8B3tD,KAC/B4tD,kCAAkCnhB,EAAAvD,QAAQE,iBACzCykB,EAA4B7tD,KAAK8tD,gCAAgCrhB,EAAAvD,QAAQE,iBACzE2kB,GAAcF,EAA4BJ,EAC1CE,EAA8BD,GAC9B,GACJK,GAAa,IAEb,IAAIC,GAAqBhuD,KAAKqtD,eAC3BhB,2BAA2B5f,EAAAvD,QAAQG,iBAClC4kB,EAA2BjuD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQG,iBACtE6kB,EAA8BluD,KAC/B4tD,kCAAkCnhB,EAAAvD,QAAQG,iBACzC8kB,GAAcH,EAAqBC,EACnCC,GAA+B,IAG/BE,EAAgBpuD,KACf2rD,8BAA8Blf,EAAAvD,QAAQK,sBAAwB,IAM/D8kB,EAAwB,EAExBC,EAAkBxH,EAAeuH,EAWjCE,EAAeD,GAAmB,EAAIP,IAAe,EAAIP,GAAaD,EACtEiB,GAAuBF,EAAkBd,EACxCc,EAAkBP,EAAaP,IAC/BD,EAAkBa,GACnBK,EAAmBH,GAAmBP,GAAc,EAAIP,KACvDD,GAAmB,EAAIY,IACxBO,EAAsBJ,EAAkBd,EAAWO,GAClDR,EAAkBa,GAAiB,EAAID,IAExCQ,EAAYL,GAAmBzH,EAAM,IAAMyG,EAE3CsB,GAAYL,EAAcC,EAAsBC,EAAkBC,GAClEC,CAGJ,OAAO5zC,MAAKkY,MAAM27B,IpEs4lBb5oB,YAAY,EACZC,cAAc,IoEj4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,epEo4lBGrT,IoEp4lBP,WACE,GAAIk2C,GAAQn6C,KAAK6uD,iBACb/C,EAAO3R,EAAM2U,YAAc,GAC/B,OAAQhD,IAAQ9rD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQoB,QAAU,KAAQwhB,GpEs4lBxE9lB,YAAY,EACZC,cAAc,IoEp4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,OpEu4lBGrT,IoEv4lBP,WACE,GAAIk2C,GAAQn6C,KAAK6uD,iBACbhI,EAAO1M,EAAM0M,KAAO7mD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQqB,KAAO,KAAQ4P,EAAM0M,GACxF,OAAO9rC,MAAKkY,MAAM4zB,IpEy4lBb7gB,YAAY,EACZC,cAAc,IoEv4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,gBpE04lBGrT,IoE14lBP,WACE,GAAIk2C,GAAQn6C,KAAK6uD,iBACb/H,EAAgB3M,EAAM4U,UACrB/uD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQkB,eAAiB,KAAQ+P,EAAM4U,QAE/E,OAAOh0C,MAAKkY,MAAM6zB,IpE24lBb9gB,YAAY,EACZC,cAAc,IoEz4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,oBpE44lBGrT,IoE54lBP,WAEE,MAAOjE,MAAK8qD,mBAAmB6B,QAAQ3sD,KAAKotD,QAAQnrD,OpE64lB/C+jC,YAAY,EACZC,cAAc,IoE14lBrBslB,sBAAAj0C,UAAA03C,WAAA,SAAW7Q,GAGT,GAAI5C,GAAsBtqB,EAAE2G,MAAK/+B,MAAPo4B,OAAU3R,OAAK2R,EAAE12B,OAAO4jD,EAC9CA,EAAW5C,MAAQv7C,KAAKivD,iBAAiB1T,QAC7C,OAAOtqB,GAAEhO,KAAKs4B,GAAQt/B,KAAMjc,KAAKotD,QAAQnxC,QAG3Clf,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,UpE04lBGrT,IoE14lBP,WAIE,GAAI6nD,GACJ9rD,KAAKotD,QAAQjT,MAAMK,OACjBx6C,KAAKkvD,iBAAmBlvD,KAAKmvD,eAC7BnvD,KAAKqtD,eAAerW,SAElBoY,EAAmB,EAAIpvD,KAAKqvD,sBAChC,OAAOvD,GAAOsD,EAAmBpvD,KAAKsvD,iCpEy4lBjCtpB,YAAY,EACZC,cAAc,IoEt4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,YpEy4lBGrT,IoEz4lBP,WAGE,MAAOjE,MAAKotD,QAAQnrD,OAASwqC,EAAAtF,SAASY,OAClC/nC,KAAKuvD,YAAcvvD,KAAKwvD,mBpEy4lBvBxpB,YAAY,EACZC,cAAc,IoEr4lBrBslB,sBAAAj0C,UAAAi4C,UAAA,WAEE,GAAIpV,GAAQn6C,KAAK6uD,iBAIb/C,EAAQ,GAAK,EAAI3R,EAAMsV,cAAiB,IACvC,GAAK,EAAItV,EAAMuV,cAAiB,GAChC,GAAK,EAAIvV,EAAMwV,WAChBC,EAA4E,GAAvD5vD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQgB,UAChE2lB,EAA+E,GAA3D7vD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQiB,aAEnE,OAAO2hB,GAAO8D,EAAqBC,EAAoB,IAGzDtE,sBAAAj0C,UAAAk4C,gBAAA,WACE,GAAIrV,GAAQn6C,KAAK6uD,iBAGb/C,EAAuF,IAA9E,GAAK,GAAK3R,EAAM2V,kBAAoB3V,EAAM4V,oBAAuB,IAAM,IAChFH,EAA4E,GAAvD5vD,KAAK2rD,8BAA8Blf,EAAAvD,QAAQgB,SACpE,OAAO4hB,GAAO8D,EAAqB,IAGrC7yD,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,oBpEq4lBGrT,IoEr4lBP,WACE,GAAIk6C,GAAan+C,KAAKivD,iBAClBe,EAAShwD,KAAKgvD,WAAW7Q,GAAY6R,MACzC,OAAOhwD,MAAK8qD,mBAAmBmF,eAAe9R,EAAY6R,IpEu4lBrDhqB,YAAY,EACZC,cAAc,IoEp4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,kBpEu4lBGrT,IoEv4lBP,WAGE,MAAOjE,MAAK6uD,iBAAiBqB,SpEw4lBxBlqB,YAAY,EACZC,cAAc,IoEr4lBrBlpC,OAAAgpC,eAAIwlB,sBAAAj0C,UAAA,oBpEw4lBGrT,IoEx4lBP,WACE,MAAOjE,MAAKqtD,eAAelB,aAAansD,KAAKotD,QAAQnrD,OpE04lBhD+jC,YAAY,EACZC,cAAc,IoEx4lBrBslB,sBAAAj0C,UAAA+3C,qBAAA,WACE,MAAOrvD,MACF2rD,8BAA8Blf,EAAAvD,QAAQI,eACvCtpC,KAAKqtD,eACJhB,2BAA2B5f,EAAAvD,QAAQI,gBAG1CiiB,sBAAAj0C,UAAAg4C,8BAAA,WAEE,MAAO,IAGT/D,sBAAAj0C,UAAAw2C,gCAAA,SAAgC1B,GAC9B,GAAI5N,GAAQx+C,KAAKotD,QAAQjT,MAAMqE,KAC/B,OAAOA,IAASA,EAAM4N,UAAYA,EAAU5N,EAAM7lD,MAAQ,GAG5D4yD,sBAAAj0C,UAAAs2C,kCAAA,SAAkCxB,GAChC,GAAIQ,GAAqB5sD,KAAK6sD,uBAAuBT,EACrD,KAAKQ,EAAmB3zD,OAAQ,MAAO,EACvC,IAAIohD,GAAUppB,EAAEjO,OAAOhjB,KAAKotD,QAAQ/S,SAAUgM,UAAU,GACxD,OAAOp1B,GAAExN,OAAO42B,EACd,SAACnoB,EAAK8nB,GAAW,MAAA9nB,IAAOjB,EAAE/oB,SAAS0kD,EAAoB5S,EAAOtoB,IAC1DsoB,EAAOrhD,MAAQ,IAAI,IAG3B4yD,sBAAAj0C,UAAAu1C,uBAAA,SAAuBT,GACrB,MAAOn7B,GAAEjO,OACPhjB,KAAKivD,iBAAiB5U,SACrB+R,SAAUA,KACX7zD,IAAI,SAAA6zC,GAAQ,MAAAA,GAAK1a,MAIrB65B,sBAAAj0C,UAAAq0C,8BAAA,SAA8BS,GAC5B,GAAIvT,GAAO74C,KAAKotD,QAAQvU,KACpBnK,EAAazd,EAAEjO,OACjBhjB,KAAK8qD,mBAAmBpc,YACvB0d,SAAUA,KACX7zD,IAAI,SAAA6zC,GAAQ,MAAAA,GAAK1a,IACnB,OAAKgd,GAAWz1C,OACTg4B,EAAExN,OAAOo1B,EAAM,SAAC3mB,EAAK+6B,GAE1B,GAAIzU,GAAUvnB,EAAE/oB,SAASwmC,EAAYue,EAAIzU,QAAQ9mB,IAAMu7B,EAAIzU,QAAQ7/C,MAAQ,EACvE+/C,EAAYznB,EAAE/oB,SAASwmC,EAAYue,EAAIvU,UAAUhnB,IAAMu7B,EAAIvU,UAAU//C,MAAQ,CACjF,OAAOu5B,GAAMsmB,EAAUE,GACtB,GAN4B,GASnC6S,wBA1OatzD,GAAAszD,sBAAqBA,GpE8mmB5B4E,IACA,SAASn4D,EAAQC,EAASC,GAE/B,YqE70mBD,IAAA00C,GAAA10C,EAAgC,KAChCg1C,EAAAh1C,EAA2B,IAC3B46C,EAAA56C,EAA4B,KAC5B+/C,EAAA//C,EAA6B,KAC7Bo+C,EAAAp+C,EAA+B,IAE/BurC,EAAAvrC,EAA+B,KAC/Bm+C,EAAAn+C,EAAgC,KAChCy5C,EAAAz5C,EAA0B,IAObD,GAAA2vD,oBAA6Bhb,EAAAqD,kBAAmB/C,EAAA8L,aAC3DlG,EAAAmD,cAAegC,EAAAc,eAAgBzC,EAAAuB,iBAAkBxB,EAAAuB,kBACjDnU,EAAA2B,iBAAkBuM,EAAAO,crE+0mBdke,IACA,SAASp4D,EAAQC,EAASC,GAE/B,YsEn2mBD,IAAAorC,GAAAprC,EAAyB,GACzBynD,EAAAznD,EAA8B,IAM9B+9C,EAAA,mBAAAA,iBAEUj2C,KAAAqwD,UAAoB,EACpBrwD,KAAA+wC,MAAQ,GAAI4O,GAAAO,gBAAyBlgD,KAAKqwD,UAsBpD,MAnBEpa,eAAA3+B,UAAAqgC,OAAA,WACE33C,KAAK+wC,MAAM9yC,KAAK+B,KAAKqwD,UAAYrwD,KAAKqwD,WAGxCpa,cAAA3+B,UAAA2sB,UAAA,SAAUqsB,EAAuB3d,EAAa4d,GAC5C,MAAOvwD,MAAK+wC,MAAM9M,UAAUqsB,EAAiB3d,EAAO4d,IAGtDxzD,OAAAgpC,eAAIkQ,cAAA3+B,UAAA,StEg2mBGrT,IsEh2mBP,WACE,MAAOjE,MAAKqwD,UtEk2mBPrqB,YAAY,EACZC,cAAc,IsEh2mBrBgQ,cAAA3+B,UAAAk5C,GAAA,WACExwD,KAAK+wC,MAAM9yC,KAAK+B,KAAKqwD,UAAW,IAGlCpa,cAAA3+B,UAAAm5C,IAAA,WACEzwD,KAAK+wC,MAAM9yC,KAAK+B,KAAKqwD,UAAW,IAxBpCpa,cAAA7R,YAACd,EAAA4lB,atE63mBQ/jB,WAAW,yBACZ8Q,iBsE73mBKh+C,GAAAg+C,cAAaA,GtEq4mBpBya,GACA,SAAS14D,EAAQC,EAASC,GAE/B,YuE/4mBD,IAAAy4D,GAAAz4D,EAGO,KACPorC,EAAAprC,EAA6C,GAE7Cu0C,EAAAv0C,EAA2C,IAC3C04D,EAAA14D,EAAkC,IAElC6vD,EAAA7vD,EAAsD,IACtDg1C,EAAAh1C,EAAyC,IAC7B+4B,EAAC/4B,EAAM,IAEnB24D,EAAA34D,EAA8B,IAC9B+0C,EAAA/0C,EAA2B,IAE3Bm+C,EAAAn+C,EAAgC,KAyB1B44D,EAAc,cAEpBjZ,EAAA,WA0BE,QAAAA,kBAAoBmQ,EAEN+I,GAFM/wD,KAAAgoD,QAxBpBhoD,KAAAgxD,gBAAkB,GAAIH,GAAA3Q,gBAAwB,QAGtClgD,KAAAixD,KAAe,6BA0BrB,IAAIC,GAAUC,aAAaC,QAAQN,EAC/BI,KAASlxD,KAAKqxD,aAA4BC,KAAKC,MAAML,IACzDlxD,KAAKwxD,OAAS,GAAInb,GAAAuB,kBAAkBmZ,EAAc/wD,MAClDA,KAAKu3C,QA+HT,MAnJEx6C,QAAAgpC,eAAI8R,iBAAAvgC,UAAA,kBvE82mBGrT,IuE92mBP,WACE,MAAOgpC,GAAAzB,aAAaxrC,KAAKgxD,gBAAgBhuC,OAAO,SAAC6oB,EAAG5a,GAAM,QAAE4a,MvEg3mBvD7F,YAAY,EACZC,cAAc,IuE92mBrB4R,iBAAAvgC,UAAAm6C,cAAA,SAAc94D,GACZ,QAASs4B,EAAE/oB,SAAS+oB,EAAE12B,OAAOkyC,EAAAnG,YAAa3tC,IAG5Ck/C,iBAAAvgC,UAAAo6C,mBAAA,SAAmB/4D,GACjB,MAAOqH,MAAKyxD,cAAc94D,GAAS,UAAY,QAgBjDk/C,iBAAAvgC,UAAAq6C,eAAA,SAAepR,GACb,MAAOvgD,MAAKmrD,WAAWvO,QAAQ2D,IAGjC1I,iBAAAvgC,UAAAgkC,SAAA,SAASxB,GAGP,MAAO95C,MAAKmrD,WAAWnrD,KAAK0xD,mBAAmB5X,IAC5C8W,EAAAgB,oBAAoB9X,KAGzBjC,iBAAAvgC,UAAAmzC,aAAA,SAAalK,EAAc5nD,GACzBqH,KAAKmrD,WAAWvO,QAAQ2D,GAAQ5nD,EACnB,YAAT4nD,GAAuBvgD,KAAKgxD,gBAAgBa,YAC9C7xD,KAAKgxD,gBAAgB/yD,KAAKtF,IAI9Bk/C,iBAAAvgC,UAAA6T,OAAA,SAAO2uB,EAAoBnhD,GAEzBqH,KAAKmrD,WAAWzQ,KACbkW,EAAAgB,oBAAoB9X,IAAanhD,GAMtCk/C,iBAAAvgC,UAAAsJ,OAAA,SAAO8Q,SAEE1xB,MAAKqxD,aAAa3/B,IAG3BmmB,iBAAAvgC,UAAAggC,KAAA,cAAAxT,GAAA9jC,KACM0xB,EAAK1xB,KAAKmrD,WAAWz5B,IAAM,GAE3Bi3B,EAAO2I,KAAKQ,UAAU9xD,KAAKmrD,YAG3B4G,EAAM/xD,KAAKixD,MAAQv/B,EAAK,IAAIA,EAAO,IAEnCsgC,EAAU,GAAIjK,GAAAkK,SAASC,eAAgB,oCACvC5tC,EAAU,GAAIyjC,GAAAoK,gBAAgBH,QAASA,IAEvCI,EAAU1gC,EAAK1xB,KAAKgoD,MAAMqK,IAAIN,EAAKpJ,EAAMrkC,GAAS/rB,IAAI,SAAA04B,GACxD,OACES,GAAIA,EACJqgC,IAAKA,KAGL/xD,KAAKgoD,MAAMsK,KAAKP,EAAKpJ,EAAMrkC,GAAS/rB,IAAI,SAACg6D,GAC3C,GAAIC,GAAMD,EAAK5J,OAAO6J,GACtB,QACET,IAAKS,EACL9gC,GAAI8gC,EAAIv3C,MAAM,KAAK5X,QAIvB+uD,GAAQnuB,UAAU,SAACjmC,GAEjBA,EAAKie,KAAO6nB,EAAKqnB,WAAWlvC,IAG5B,IAAIkxC,GAAOrpB,EAAK0tB,OAAO1nC,QACvB9rB,GAAK8vC,MACHkJ,SAAUmW,EAAKnW,SACfE,QAASiW,EAAKjW,QACdE,YAAa+V,EAAK/V,YAClBmC,IAAK4T,EAAKpW,YAAYjT,EAAKqnB,WAAWvO,QAAQpE,SAC9CvB,OAAQkW,EAAKlW,OACbE,WAAYgW,EAAKhW,YAInBrT,EAAKutB,aAAarzD,EAAK0zB,IAAM1zB,EAE7B8lC,EAAKqnB,WAAWz5B,GAAK1zB,EAAK0zB,GAC1By/B,aAAasB,QAAQ3B,EAAaQ,KAAKQ,UAAUhuB,EAAKutB,kBAO1Dt0D,OAAAgpC,eAAI8R,iBAAAvgC,UAAA,avEq0mBGrT,IuEr0mBP,WACE,MAAOjE,MAAKmrD,YvEu0mBPnlB,YAAY,EACZC,cAAc,IuEr0mBrB4R,iBAAAvgC,UAAA4kC,KAAA,SAAKxqB,GAAL,GAAAoS,GAAA9jC,IAEE,IAAI0xB,EAAI,CACN,GAAIqgC,GAAM/xD,KAAKixD,KAAO,IAAMv/B,CAC5B1xB,MAAKgoD,MAAM/jD,IAAI8tD,GACZx5D,IAAI,SAACg6D,GAAS,MAAWA,GAAK5J,SAC9B1kB,UACC,SAAAoT,GACEvT,EAAKqnB,WAAa9T,GAGpB,SAAA1E,GAAS,MAAAF,SAAQC,IAAI,mBAGzB1yC,MAAKu3C,SAKTM,iBAAAvgC,UAAAigC,MAAA,WACEv3C,KAAKmrD,WAAa,GAAIwF,GAAAhU,UAEtB38C,KAAKmrD,WAAWlvC,KAAO,YACvBjc,KAAKmrD,WAAWuH,OAASjmB,EAAAtE,OAAOE,QAGlCwP,iBAAAvgC,UAAAkgC,KAAA,WACE,IAAKx3C,KAAKmrD,WAAY,OAAO,CAC7B,IAAIz5B,GAAK1xB,KAAKmrD,WAAWz5B,EACzB,QAAQA,KAAQ1xB,KAAKqxD,aAAa3/B,IAGpCmmB,iBAAAvgC,UAAA6sB,OAAA,WACEnkC,KAAK2yD,uBAAyB1hC,EAAEpK,UAAU7mB,KAAKmrD,aAhKnDtT,iBAAAzT,YAACd,EAAA4lB,avEs+mBQ8B,QAAQ,EuE18mBF1nB,EAAA2nB,OAAO3nB,EAAA4nB,WAAW,WAAM,MAAAhe,GAAA8L,iBvE28mB9B7T,WAAW,qBAAsB4iB,EAAOoB,KAAMjc,EAAe8L,gBAC9DnB,oBuEv+mBK5/C,GAAA4/C,iBAAgBA,GvE++mBvB+a,GACA,SAAS56D,EAAQC,EAASC,GAK/B,YwE1lmBD,SAAA22C,cAA6BiL,GAG3B,MAAO7oB,GAAE/oB,SAASukC,EAAAxE,aAAc6R,GApclC,GAAAxW,GAAAprC,EAA6C,GAC7C6vD,EAAA7vD,EAAmB,IACnB24D,EAAA34D,EAAmD,IACnDu0C,EAAAv0C,EAYO,IACK+4B,EAAC/4B,EAAM,IACnB04D,EAAA14D,EAAkC,IAClC+0C,EAAA/0C,EAA2B,IAC3B26D,EAAA36D,EAA0B,KAG1B00C,EAAA10C,EAAgC,KAO1B46D,GAJN,mBAAAC,aACU/yD,KAAAgzD,OAA0C,GAAInC,GAAA3Q,oBACxD,MAAA6S,cAE8B,WAE5B,GAAIx4D,KAMJ,OALAA,GAAOkyC,EAAAtF,SAASQ,IAAM,gBACtBptC,EAAOkyC,EAAAtF,SAASU,KAAO,oBACvBttC,EAAOkyC,EAAAtF,SAASS,KAAO,iBACvBrtC,EAAOkyC,EAAAtF,SAASY,QAAU,iBAC1BxtC,EAAOkyC,EAAAtF,SAASW,SAAW,UACpBvtC,MAGL04D,EAA6B,SAAChxD,EAAgB0mD,GAAc,MAAgBA,IA8FhFuK,EAAA,mBAAAA,yBAMA,MAJEA,sBAAA57C,UAAAq1C,QAAA,SAAQ7S,GACN,GAAI79B,GAAO20C,EAAAgB,oBAAoB9X,EAC/B,OAAO95C,MAAKJ,eAAeqc,GAAQjc,KAAKic,GAAQ,QAEpDi3C,wBACAC,EAAA,SAAAC,GAAA,QAAAD,4BAA8CC,EAAAv6D,MAAAmH,KAAAuW,WAU9C,MAV8C88C,WAAAF,yBAAAC,GAU9CD,0BAV8CD,EAAjCj7D,GAAAk7D,yBAAwBA,CAYrC,IAAAG,GAAA,SAAAF,GAAA,QAAAE,8BAAgDF,EAAAv6D,MAAAmH,KAAAuW,WA+BhD,MA/BgD88C,WAAAC,2BAAAF,GAS9CE,2BAAAh8C,UAAA24C,eAAA,SAAe9R,EAA8B6R,GAW3C,IARA,GAOIuD,GAPAntD,EAAa,SAACtB,EAAUC,EAAU9J,EAAKkB,EAAQoJ,GACjD,MAAO0rB,GAAErI,YAAY9jB,GAAYC,EAAWD,GAG1Cq1C,EAAQgE,EAAWhE,MAEnBqZ,KAEGxD,GACLuD,EAAcpZ,EAAM6V,GACpBA,EAASuD,EAAcA,EAAYxoD,OAAS,OAE5CyoD,EAA+BviC,EAAEoG,WAAWm8B,EAAaD,EAAYh5D,OAAQ6L,EAG/E,OAAOotD,IAIXF,4BA/BgDJ,EAAnCj7D,GAAAq7D,2BAA0BA,CAmCvC,IAAAta,GAAA,WAsCE,QAAAA,cAAoBgP,EAEA3a,GAFArtC,KAAAgoD,QAEAhoD,KAAAqtC,qBArCZrtC,KAAAyzD,WAA8C,GAAI5C,GAAA3Q,gBAAgC,QAClFlgD,KAAA0zD,MAAyC,GAAI7C,GAAA3Q,gBAAgC,QAC7ElgD,KAAA2zD,UAA6C,GAAI9C,GAAA3Q,gBAAgC,QACjFlgD,KAAA4zD,QAA2C,GAAI/C,GAAA3Q,gBAAgC,QAC/ElgD,KAAA6zD,UAA6C,GAAIhD,GAAA3Q,gBAAgC,QACjFlgD,KAAA8zD,SAA4C,GAAIjD,GAAA3Q,gBAAgC,QAIhFlgD,KAAA+zD,4BACJ,GAAIT,GACAtzD,KAAAg0D,0BACJ,GAAIb,GAEAnzD,KAAAi0D,cACN,GAAIpD,GAAA3Q,gBAAkC,QAChClgD,KAAAk0D,KACN,GAAIrD,GAAA3Q,gBAAkC,QAChClgD,KAAAm0D,KACN,GAAItD,GAAA3Q,gBAAkC,QAChClgD,KAAAo0D,SACN,GAAIvD,GAAA3Q,gBAAkC,QAChClgD,KAAAq0D,QACN,GAAIxD,GAAA3Q,gBAAkC,QAGhClgD,KAAAs0D,eACN,GAAIzD,GAAA3Q,gBAAgC,QAE9BlgD,KAAAu0D,UAAY,mBACZv0D,KAAAw0D,WAAa,+BAmOvB,MAvNExb,cAAA1hC,UAAAixC,KAAA,cAAAzkB,GAAA9jC,IACEA,MAAKqtC,mBAAmBkb,OACxBvoD,KAAKy0D,WAAWhoB,EAAAzE,WAAYhoC,KAAKg0D,2BACjCh0D,KAAK00D,qBAELznB,EAAAzB,aAAaxrC,KAAKs0D,gBAAgB,GAC/BrwB,UAAU,SAAAoW,GAAW,MAAAvW,GAAK6wB,aAAata,KAE1Cr6C,KAAKqtC,mBAAmB0b,iBACrB9kB,UAAU,SAAAyK,GAAc,MAAA5K,GAAKiwB,4BAA4BrlB,WAAaA,IAEzE1uC,KAAKqtC,mBAAmBunB,eACrB3wB,UAAU,SAAAyK,GAAc,MAAA5K,GAAKkwB,0BAA0BtlB,WAAaA,KAIzEsK,aAAA1hC,UAAAu9C,oBAAA,SAAuBpvB,EAAaqvB,GAApC,GAAAhxB,GAAA9jC,IACE80D,GAAQA,EAAMriD,MAAM,EAEpB,IAAIi5B,GAAMopB,EAAMv8D,IAAI,SAAA0J,GAAQ,MAAA6hC,GAAK,IAAM8sB,EAAAgB,oBAAoB3vD,MACvDirD,EAAM,GAAI2D,GAAAvG,OAWd,OAVAuG,GAAAjlB,WAAWhU,MAAK/+B,MAAhBg4D,EAAAjlB,WAAoBF,GAAKnqB,KAAKmqB,EAAIzyC,QAAQgrC,UACxC,SAAAka,GACE,GAAIrE,GAAWgb,EAAMC,QACjB94C,EAAO20C,EAAAgB,oBAAoB9X,EAC/BrU,GAASxpB,GAAQkiC,GAEnB,SAAAxL,GAAS,MAAAF,SAAQC,IAAIC,IACrB,WAAM,MAAAua,GAAIjvD,KAAKwnC,KAGVynB,GAGTnwD,OAAAgpC,eAAIiT,aAAA1hC,UAAA,oBxEm4mBGrT,IwEn4mBP,WACE,MAAOjE,MAAKg0D,2BxEq4mBPhuB,YAAY,EACZC,cAAc,IwEl4mBrBlpC,OAAAgpC,eAAIiT,aAAA1hC,UAAA,sBxEq4mBGrT,IwEr4mBP,WACE,MAAOjE,MAAK+zD,6BxEu4mBP/tB,YAAY,EACZC,cAAc,IwEr4mBrB+S,aAAA1hC,UAAAq9C,aAAA,SAAata,GACXr6C,KAAKy0D,WAAWhoB,EAAAxE,aAAcjoC,KAAK+zD,4BACjC,SAACiB,EAAsBC,GACrB,GAAIrY,GAAUqY,EAASrY,QACnBsY,EAAWjkC,EAAEjO,OAAO45B,EAAS,SAAAjG,GAAU,OAACA,EAAOwe,QAE/C5Z,IACJA,GAAM9O,EAAAnE,WAAWE,UAAY0sB,EAC7B3Z,EAAM9O,EAAAnE,WAAWC,UAAYqU,EAC7BrB,EAAM9O,EAAAnE,WAAWI,YAGjB,IAAI0sB,GAAmCnkC,EAAEjO,OAAOq3B,GAAUgO,UAAW2M,IAErE,QACEzZ,MAAsBA,EACtBlB,QAAS+a,EACTC,cAAeJ,EAASI,cACxBlb,MAAO8a,EAAS9a,UAKxBnB,aAAA1hC,UAAAo9C,mBAAA,cAAA5wB,GAAA9jC,KACM+xD,EAAM/xD,KAAKu0D,UAAY,qBAC3Bv0D,MAAKgoD,MAAM/jD,IAAI8tD,GACZx5D,IAAI,SAAAi6C,GAAO,MAAgBA,GAAImW,SAC/B1kB,UACC,SAAAoW,GAAW,MAAAvW,GAAKwwB,eAAer2D,KAAKo8C,IACpC,SAAA1H,GAAS,MAAAF,SAAQC,IAAI,gBAAiBqf,EAAKpf,IAC3C,WAAM,MAAAF,SAAQC,IAAI,mBAAoBqf,MAI5C/Y,aAAA1hC,UAAAm9C,WAAA,SAAWK,EAAmBh6D,EACnBw6D,GADX,GAAAxxB,GAAA9jC,IACW,UAAAs1D,MAAArC,EAGT,IAAIhwB,GAAOjjC,IACXixB,GAAE3yB,QAAQw2D,EAAO,SAAChb,EAAoB7+C,GAEpCw3C,QAAQC,IAAI,gBAAiBoH,EAAU,IACvC,IAAIyb,GAAc3E,EAAAgB,oBAAoB9X,GAElCrO,EAAUxI,EAAK,IAAMsyB,EACzB,IAAK9pB,EAAL,CACA,GAAIsmB,GAAM9uB,EAAKsxB,UAAYza,EAAW,OACtChW,GAAKkkB,MAAM/jD,IAAI8tD,GACZx5D,IAAI,SAAAi6C,GAAO,MAAA8iB,GAAQxb,EAAUtH,EAAImW,UACjC1kB,UACC,SAAAka,GACE1S,EAAQxtC,KAAKkgD,GACbrjD,EAAWy6D,GAAepX,GAE5B,SAAAxL,GAAS,MAAAF,SAAQC,IAAI,gBAAiBqf,EAAKpf,IAC3C,WAAM,MAAAF,SAAQC,IAAI,mBAAoBqf,SAK9Ch1D,OAAAgpC,eAAIiT,aAAA1hC,UAAA,UxEu3mBGrT,IwEv3mBP,WACE,MAAO4uD,GAAA9V,axEy3mBF/W,YAAY,EACZC,cAAc,IwEt3mBrBlpC,OAAAgpC,eAAIiT,aAAA1hC,UAAA,YxE03mBGrT,IwE13mBP,WACE,OAAQwoC,EAAAnE,WAAWE,SAAUiE,EAAAnE,WAAWC,SAAUkE,EAAAnE,WAAWI,WxE43mBxD1C,YAAY,EACZC,cAAc,IwEp3mBrB+S,aAAA1hC,UAAA4mC,iBAAA,SAAiBpE,GACf,GAAIpO,GAA8D1rC,KAAK,IAAM4wD,EAAAgB,oBAAoB9X,GAAY,IAC7G,OAAIpO,GAEKuB,EAAAzB,aAAaE,GAAK,GAEpBmlB,EAAAjlB,WAAW9hB,UAIpBkvB,aAAA1hC,UAAAk+C,UAAA,SAAUvzD,EAAcs2C,GACtB,MAAOA,GAAOv4C,KAAKw0D,WAAavyD,EAAO,IAAMs2C,EAAO,IAGtDS,aAAA1hC,UAAAm+C,kBAAA,SAAkBtX,EAA4B9F,GAE5C,GAAIqd,GAAQvX,EAAWuX,MAAMrd,EAAKI,QAG9Bkd,EAAYtd,EAAKI,SAAWhM,EAAAnE,WAAWI,SACvCktB,EAAc,MAClB,IAAID,EAAW,CAEb,GAAIE,GAA6B5kC,EAAEhO,KACjCk7B,EAAW5C,MAAM9O,EAAAnE,WAAWI,WAC3BzsB,KAAMo8B,EAAKp8B,MAEd25C,GAAcC,EAAa3nB,UAK7B,GAAIqK,GAAOmd,EAAME,GAAevd,EAAKkC,MAEjChC,GAAK34C,eAAe6sC,EAAAtE,OAAOC,MAE7BmQ,EAAOA,EAAK9L,EAAAtE,OAAOC,MACVmQ,EAAK34C,eAAe6sC,EAAAtE,OAAOE,UACpCkQ,EAAOA,EAAK9L,EAAAtE,OAAOE,QAGrB,IAAI/hC,GAAW2qB,EAAE3qB,SAASiyC,EAE1B,QACEC,QAASx4C,KAAKw1D,UAAUnd,EAAKp2C,KAAMqE,EAAWiyC,EAAKC,QAAUD,GAC7DG,UAAWkd,EACT51D,KAAKw1D,UAAU,OAAQI,EAAc,QACnC51D,KAAKw1D,UAAUnd,EAAKp2C,KAAMqE,EAAWiyC,EAAKG,UAAYH,KAK9DS,aAAA1hC,UAAAw+C,oBAAA,SAAoB3X,EAA8B9F,GAChD,GAAI0d,GAAqB9kC,EAAEhO,KAAKk7B,EAAW5C,MAAMlD,EAAKI,SAAUx8B,KAAMo8B,EAAKp8B,MAC3E,QACEu8B,QAASud,EAAO/1D,KAAKw1D,UAAUnd,EAAKp2C,KAAM8zD,EAAKxd,MAAQ,GACvDG,UAAW,KASfM,aAAA1hC,UAAAghC,aAAA,SAAaD,GAAb,GAAAvU,GAAA9jC,IAEE,OAAOA,MAAKk+C,iBAAiB7F,EAAKp2C,MAAM1J,IAAI,SAAA4lD,GAC1C,MAAOtP,cAAawJ,EAAKp2C,MACrB6hC,EAAKgyB,oBAAsC3X,EAAY9F,GACvDvU,EAAK2xB,kBAAkCtX,EAAY9F,MAI3DW,aAAA1hC,UAAA2iC,mBAAA,SAAmBvoB,GACjB,OACE8mB,QAASx4C,KAAKw1D,UAAU,UAAW9jC,EAAK,QACxCgnB,UAAW,KAIfM,aAAA1hC,UAAAgnC,gBAAA,SAAgBxE,GACd,MAAOgZ,GAAsBhZ,IAG/B/8C,OAAAgpC,eAAIiT,aAAA1hC,UAAA,mBxEs2mBGrT,IwEt2mBP,WACE,MAAO6uD,IxEw2mBF9sB,YAAY,EACZC,cAAc,IwEt2mBrB+S,aAAA1hC,UAAAmnC,sBAAA,SAAsBuW,GACpB,OACEr8D,MAAO,EACPyzD,QAAS4I,IAAevoB,EAAAtF,SAASS,IAC7B6E,EAAAvD,QAAQE,gBACRqD,EAAAvD,QAAQmB,kBAlQlB2O,aAAA5U,YAACd,EAAA4lB,axE+mnBQ8B,QAAQ,EwEvknBF1nB,EAAA2nB,OAAO3nB,EAAA4nB,WAAW,WAAM,MAAAte,GAAAqD,sBxEwknB9B9K,WAAW,qBAAsB4iB,EAAOoB,KAAMvc,EAAqBqD,qBACpE+I,gBwEhnnBK/gD,GAAA+gD,aAAYA,EAqQT/gD,EAAA42C,aAAYA,cxEu3mBtBmnB,IACA,SAASh+D,EAAQC,GAKtB,YyElznBD,IAAAg+D,GAAA,WAGE,QAAAA,oBAHF,GAAAnyB,GAAA9jC,IAKImjC,QAAOnjC,KAAKk2D,qBAAuB,SAACC,GAAW,MAAAryB,GAAKsyB,cAAcD,IA4CtE,MAjCEp5D,QAAAgpC,eAAIkwB,iBAAA3+C,UAAA,gBzE0ynBGrT,IyE1ynBP,WACE,GAAIoyD,GAAMlzB,OAAOmzB,QACjB,OAAOD,GAAIE,SAAWF,EAAIG,KAAO,mBAAqBx2D,KAAK0xB,IzE4ynBtDsU,YAAY,EACZC,cAAc,IyEvynBrBlpC,OAAAgpC,eAAIkwB,iBAAA3+C,UAAA,uBzE0ynBGrT,IyE1ynBP,WACE,MAAO,SAAWjE,KAAK0xB,GAAK,czE4ynBvBsU,YAAY,EACZC,cAAc,IyE1ynBrBgwB,iBAAA3+C,UAAAm/C,eAAA,SAAeN,GACb,GAAIr9D,GAAOqqC,OAAOuzB,OAAO12D,KAAKk2D,oBAC1Bp9D,IAAMA,EAAKq9D,GACfhzB,OAAOwzB,SAGT55D,OAAAgpC,eAAIkwB,iBAAA3+C,UAAA,YzE6ynBGrT,IyE7ynBP,WACE,MAAO,SAAWjE,KAAK0xB,IzE+ynBlBsU,YAAY,EACZC,cAAc,IyE7ynBrBgwB,iBAAA3+C,UAAAs/C,MAAA,WACE,GAAIb,GAAO5E,aAAaC,QAAQpxD,KAAK62D,SACrC,OAAOd,GAAOzE,KAAKC,MAAMwE,OAI3BE,iBAAA3+C,UAAAw/C,MAAA,SAAMf,GACJ5E,aAAasB,QAAQzyD,KAAK62D,SAAUvF,KAAKQ,UAAUiE,KAIvDE,mBAjDsBh+D,GAAAg+D,iBAAgBA,CAmDtC,IAAA9L,GAAA,SAAAiJ,GAAA,QAAAjJ,uBAAkDiJ,EAAAv6D,MAAAmH,KAAAuW,WAClD,MADkD88C,WAAAlJ,oBAAAiJ,GAClDjJ,qBADkD8L,EAA5Bh+D,GAAAkyD,oBAAmBA,GzEwznBnC4M,IACA,SAAS/+D,EAAQC,EAASC,GAE/B,Y0E/3nBD,IAAAmxD,GAAAnxD,EAAqE,KACrEorC,EAAAprC,EAAyB,GACzB6vD,EAAA7vD,EAAmB,IAEnBmyD,EAAAnyD,EAAsB,IACtB+0C,EAAA/0C,EAA2B,IAE3Bo6C,EAAAp6C,EAAuB,KAMjB8+D,EAAe,gDACfC,EAAiB,yBACjBC,EAAQ,aACRC,EAAe,6CACfC,EAAY,uCAEZC,EAAY,oLAGZC,EAAgB,mBAGhBC,EAAO,6FAEPC,EAAY,gEAelBC,EAAA,SAAArE;AAQE,QAAAqE,yBAAoBzP,GAClBoL,EAAAl6D,KAAA8G,MADkBA,KAAAgoD,QAJZhoD,KAAA03D,oBAA8B,EAE9B13D,KAAA23D,UAAoB,EAqG9B,MA3G6CtE,WAAAoE,wBAAArE,GAa3CqE,wBAAAngD,UAAAoa,GAAA,WACE,MAAO4gB,GAAAkX,SAASC,KAGlBgO,wBAAAngD,UAAAsgD,OAAA,SAAOA,KAGPH,wBAAAngD,UAAAN,SAAA,SAASm/C,GACP,GAAI0B,GAAO1B,EAAOlyD,IAAI,QAClBywC,EAAQyhB,EAAOlyD,IAAI,SACnB6zD,EAAW3B,EAAOlyD,IAAI,WAC1BjE,MAAKy2D,gBACHqB,SAAUA,EACVD,KAAMA,EACNnjB,MAAOA,KAMX33C,OAAAgpC,eAAI0xB,wBAAAngD,UAAA,gB1Eo2nBGrT,I0Ep2nBP,WACE,MAAuBjE,MAAK42D,QAASmB,c1Es2nBhC/xB,YAAY,EACZC,cAAc,I0Ep2nBrBwxB,wBAAAngD,UAAA8+C,cAAA,SAAcD,GACZn2D,KAAK03D,oBAAqB,EAC1B13D,KAAKg4D,kBAAkB7B,IAGzBsB,wBAAAngD,UAAA0gD,kBAAA,SAAkBC,GAAlB,GAAAn0B,GAAA9jC,IAEMA,MAAKk4D,UAAYl4D,KAAKk4D,QAAQC,QAChCn4D,KAAKk4D,QAAQvB,OAGf,IAAIR,IACFiC,WAAY,qBACZC,UAAWjB,EACXkB,cAAehB,EACfO,KAAMI,EAAMH,SACZS,aAAcpB,EACdziB,MAAO,IACP8jB,MAAOnB,EACPoB,KAAMlB,EAGRv3D,MAAKgoD,MACFsK,KAAKkF,EAAWlG,KAAKQ,UAAUqE,IAC/B59D,IAAI,SAAAi6C,GAAO,MAAeA,GAAImW,SAC9B1kB,UACC,SAACsuB,GACCA,EAAKmG,WAAY,GAAKnmC,OAAQomC,UAC9B70B,EAAK4zB,oBAAqB,EAC1B5zB,EAAK6zB,UAAW,EAChB7zB,EAAKgzB,MAAMvE,IAEb,SAAA5f,GAAS,MAAAF,SAAQC,IAAIC,IACrB,WAAM,MAAAF,SAAQC,IAAI,qBAMxB31C,OAAAgpC,eAAI0xB,wBAAAngD,UAAA,Q1E61nBGrT,I0E71nBP,WACE,GAAI8tD,GAAMiF,CAKV,OAJAjF,IAAO,0DAA4DkF,EACnElF,GAAO,8BAAgCmF,EACvCnF,GAAO,iBAAmBoF,EAC1BpF,GAAO,cAAgBqF,EAAY,UAAYC,G1Eg2nB1CrxB,YAAY,EACZC,cAAc,I0E51nBrBwxB,wBAAAngD,UAAAi7B,MAAA,WAEEvyC,KAAK03D,oBAAqB,EAC1B13D,KAAK23D,UAAW,EAEhB33D,KAAK44D,gBAAkB,GAAIvO,GAAAC,OAC3B,IAAIyH,GAAM/xD,KAAK64D,IACfpmB,SAAQC,IAAIqf,EACF5uB,QAAO21B,KAAK/G,EAAK,WAAY,uBASvC,OAAO9kB,GAAAzB,aAAaxrC,KAAK44D,iBAAiB,IAxG9CnB,wBAAArzB,YAACd,EAAA4lB,a1Eu8nBQ/jB,WAAW,qBAAsB4iB,EAAOoB,QACzCsO,0B0Ev8nBqCpO,EAAAc,oBAAhClyD,GAAAw/D,wBAAuBA,G1E+8nB9BsB,IACA,SAAS/gE,EAAQC,EAASC,GAE/B,Y2E5/nBD,IAAAmxD,GAAAnxD,EAAoD,KACpD8gE,EAAA9gE,EAAsC,KACtCorC,EAAAprC,EAAsB,EAMTD,GAAA4xD,0BACXvmB,EAAAwmB,QAAQT,EAAAc,qBAAsB8O,SAAUD,EAAAvB,4B3EigoBpCyB,IACA,SAASlhE,EAAQC,EAASC,GAE/B,Y4E7goBD,IAAAorC,GAAAprC,EAAyB,GACzB00C,EAAA10C,EAAgC,KAChCu0C,EAAAv0C,EAGO,IACPihE,EAAAjhE,EAGO,KACP+0C,EAAA/0C,EAA2B,IACf+4B,EAAC/4B,EAAM,IAEnBg1C,EAAAh1C,EAA2B,IAC3B6vD,EAAA7vD,EAAmB,IACnBynD,EAAAznD,EAA8B,IAM9BkhE,EAAA,mBAAAA,wBAGA,MAAAA,uBAHanhE,GAAAmhE,oBAAmBA,CAmBhC,IAAArgB,GAAA,WAkCE,QAAAA,gBAAoBsgB,EAA8CrR,GAA9ChoD,KAAAq5D,oBAA8Cr5D,KAAAgoD,QAhC1DhoD,KAAAs5D,gBACJ,GAAI3Z,GAAAO,gBAAgC,QAEhClgD,KAAAu0D,UAAY,mBA+BlBv0D,KAAKu5D,kBAuFT,MApHSxgB,gBAAA8I,UAAP,SAAiBuG,GACf,OAAQA,GACN,IAAK3b,GAAAtF,SAASE,KACd,IAAKoF,GAAAtF,SAASI,SACZ,OAAO,CACT,SACE,OAAO,IAMNwR,eAAAmJ,aAAP,SAAoBkG,GAClB,OAAQA,GACN,IAAK3b,GAAAtF,SAASE,KACd,IAAKoF,GAAAtF,SAASG,SACd,IAAKmF,GAAAtF,SAASM,QACZ,MAAO,EAET,KAAKgF,GAAAtF,SAASC,UACZ,MAAO,EACT,SACE,MAAO,KAWb2R,eAAAzhC,UAAAiiD,gBAAA,cAAAz1B,GAAA9jC,KACM+xD,EAAM/xD,KAAKu0D,UAAY,kBAC3Bv0D,MAAKgoD,MAAM/jD,IAAI8tD,GACZx5D,IAAI,SAAAi6C,GAAO,MAAgBA,GAAImW,SAC/B1kB,UACC,SAAAsX,GAAS,MAAAzX,GAAKw1B,gBAAgBr7D,KAAKs9C,IACnC,SAAA5I,GAAS,MAAAF,SAAQC,IAAI,gBAAiBqf,EAAKpf,IAC3C,WAAM,MAAAF,SAAQC,IAAI,mBAAoBqf,MAI5ChZ,eAAAzhC,UAAAshC,SAAA,SAASkB,GACP,MAAO5M,GAAA2B,aAAaiL,GAAYqf,EAAArV,sBAAwBqV,EAAAtV,qBAG1D9K,eAAAzhC,UAAAqpC,kBAAA,SAAkB6Y,GAChB,MAAOvsB,GAAAzB,aAAaxrC,KAAKs5D,iBAAiB,GAAM/gE,IAAI,SAAAgjD,GAClD,MAAOA,GAAMie,EAASC,eAK1B1gB,eAAAzhC,UAAA+pC,mBAAA,SAAmBmY,GAGjB,MAAOA,GAASE,gBACZ15D,KAAK25D,yBAAyBH,GAC9Bx5D,KAAK45D,uBAAuBJ,IAKlCzgB,eAAAzhC,UAAAqiD,yBAAA,SAAyBH,GACvB,MAAOx5D,MAAKq5D,kBACTtQ,iBAAiBxwD,IAAI,SAACk2C,GACrB,GAAIorB,GAAQ5oC,EAAEjO,OAAOyrB,GAAQsT,OAAQyX,EAASC,aAC9C,QACEjhB,QAASqhB,EACTnhB,UAAWmhB,MAOnB9gB,eAAAzhC,UAAAsiD,uBAAA,SAAuBJ,GACrB,MAAOvsB,GAAAzB,aAAaxrC,KAAKq5D,kBACtBzE,eAAer8D,IAAI,SAACk2C,GACnB,GAAI+J,GAASE,CAqBb,OApBI8gB,GAASM,cAEXthB,EAAUE,EAAYznB,EAAEjO,OAAOyrB,EAC7B,SAACrC,GAAS,MAAAA,GAAK6gB,KAAO7gB,EAAKnqC,OAASwqC,EAAA3F,cAAcI,SAKpDsR,GAAWghB,EACR5V,qBACC3yB,EAAEjO,OAAOyrB,GAAQwe,KAAK,EAAMhrD,KAAMwqC,EAAA3F,cAAcG,SAEpDyR,EAAYznB,EAAEjO,OAAOyrB,EACnB,SAACrC,GAAS,MAAAA,GAAK6gB,KACf7gB,EAAKnqC,OAASwqC,EAAA3F,cAAcG,MACzBmF,EAAKnqC,OAASwqC,EAAA3F,cAAcI,UAMjCsR,QAASA,EACTE,UAAWA,MAEXxe,MAAM,SAAC2R,EAAGC,EAAK7a,GAAM,QAAE4a,KAG/BkN,eAAAzhC,UAAAyiD,kBAAA,SAAkBC,KAIlBjhB,eAAAzhC,UAAAypC,SAAA,SAASwB,GACP,MAAO,oCAAoCA,EAAYkX,WAAU,QA1HrE1gB,eAAA3U,YAACd,EAAA4lB,a5EiloBQ/jB,WAAW,qBAAsByH,EAAqBqD,kBAAmB8X,EAAOoB,QACjFpQ,kB4EjloBK9gD,GAAA8gD,eAAcA,G5EyloBrBkhB,EACA,SAASjiE,EAAQC,EAASC,GAE/B,Y6E7moBD,SAAAgiE,MAAqBC,GAEnB,MAAOC,GAAAC,UAAUC,EAAA12B,IACZ22B,EAAAC,UAASl7C,OACTm7C,EAAAC,cACAH,EAAAI,WACAJ,EAAAK,MACAN,EAAA3S,cACA2S,EAAA5S,eACApV,EAAAsX,iBAGFiR,MAAM,SAAAjS,GAAO,MAAAnW,SAAQE,MAAMiW,KAhChC,GAAAwR,GAAAliE,EAAwB,KACxBqiE,EAAAriE,EAA2C,KAC3CuiE,EAAAviE,EAA4B,KAC5BoiE,EAAApiE,EAAiD,KACjDo6C,EAAAp6C,EAA6B,IAgBbD,GAAAiiE,KAAIA,IAmClBY,UAASC,iBAAiB,mBAAoB,WAAM,MAAAb,W7E2noBhDc,IACA,SAAShjE,EAAQC,EAASC,GAK/B,Y8EvroBD,IAAAorC,GAAAprC,EAAkC,GAClCqrC,EAAArrC,EAAgC,GASnBD,GAAAgjE,uBACR13B,EAAA23B,kBAAiBzoD,QAITxa,EAAA0iE,aACV7Q,QAASxmB,EAAA63B,oBAAqBC,OAAO,EAAMC,SAAUpjE,EAAAgjE,0B9EuroBlDK,IACA,SAAStjE,EAAQC,EAASC,GAE/B,YACA,SAASsvD,UAAS1O,GACd,IAAK,GAAI2O,KAAK3O,GAAQ7gD,EAAQ2H,eAAe6nD,KAAIxvD,EAAQwvD,GAAK3O,EAAE2O,I+EhtoBrED,SAAAtvD,EAAc,MACdsvD,SAAAtvD,EAAc,MACdsvD,SAAAtvD,EAAc,O/EutoBRqjE,IACA,SAASvjE,EAAQC,EAASC,GAK/B,YgF3toBD,IAAAorC,GAAAprC,EAA6B,EAGhBD,GAAAujE,qBAIAvjE,EAAA2iE,QACV9Q,QAASxmB,EAAAm4B,eAAgBL,OAAO,EAAMC,SAAUpjE,EAAAujE,qBhF8toB7CE,IACA,SAAS1jE,EAAQC,EAASC,GAK/B,YiF3uoBD,IAAAu0C,GAAAv0C,EAAqE,IACrE6vD,EAAA7vD,EAA6B,IAC7BqrC,EAAArrC,EAA+B,GAelBD,GAAA0jE,sBACRlvB,EAAAmvB,eAAct8C,OACdyoC,EAAA8T,eAEAt4B,EAAAu4B,mBACFhS,QAASrd,EAAAsvB,iBAAkB9C,SAAUxsB,EAAAuvB,wBAG3B/jE,EAAAuiE,UACRviE,EAAA0jE,sBAAqBlpD,SjFuuoBpBwpD,IACA,SAASjkE,EAAQC,EAASC,GAE/B,YkFxwoBD,IAAAorC,GAAAprC,EAA6B,GAGzBsiE,IAIFl3B,GAAA44B,iBAEA1B,EACKA,EAAS/nD,QAYHxa,EAAAyiE,cACRF,EAAS/nD","file":"main.b7b738f4e10f4fad7c80.bundle.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 31:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(412);\n\n/***/ },\n\n/***/ 412:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.12.0';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n\t    ? exports\n\t    : undefined;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n\t    ? module\n\t    : undefined;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports)\n\t    ? freeExports\n\t    : undefined;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal ||\n\t    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n\t      freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element\n\t   *  instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n\t     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n\t     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n\t     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n\t     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n\t     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n\t     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n\t     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n\t     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n\t     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n\t     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,\n\t     * `noConflict`, `noop`, `now`, `nth`, `pad`, `padEnd`, `padStart`, `parseInt`,\n\t     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n\t     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n\t     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n\t     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toFinite`,\n\t     * `toInteger`, `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`,\n\t     * `toString`, `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,\n\t     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n\t        cache = this.__data__ = new MapCache(cache.__data__);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined &&\n\t              !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototype(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      stack['delete'](srcValue);\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var index = -1,\n\t          props = getAllKeysIn(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return 0;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and\n\t          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n\t          // not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t          stack.set(object, other);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    function getPrototype(value) {\n\t      return nativeGetPrototype(Object(value));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    function getSymbols(object) {\n\t      // Coerce `object` to an object to avoid non-object errors in V8.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n\t      return getOwnPropertySymbols(Object(object));\n\t    }\n\t\n\t    // Fallback for IE < 11.\n\t    if (!getOwnPropertySymbols) {\n\t      getSymbols = function() {\n\t        return [];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n\t     * iteratee shorthand.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenableIteratee(value) {\n\t      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other given\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at `n` index of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function, it's\n\t     * invoked for and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t        ? iteratees[0]\n\t        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\t\n\t      return baseOrderBy(collection, iteratees, []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @type {Function}\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime = 0,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (!lastCallTime || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        clearTimeout(timerId);\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastCallTime = lastInvokeTime = 0;\n\t        lastArgs = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            clearTimeout(timerId);\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [transforms[_.identity]] The functions to transform.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. The iteratee is invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(baseToString(target), position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at `n` index. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return rest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    });\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose Lodash on the free variable `window` or `self` when available so it's\n\t  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n\t  // also prevents errors in cases where Lodash is loaded by a script tag in the\n\t  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n\t  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(413)(module), (function() { return this; }())))\n\n/***/ },\n\n/***/ 497:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by xastey on 4/2/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\tvar inventory_component_1 = __webpack_require__(357);\r\n\tvar bootstrap_service_1 = __webpack_require__(360);\r\n\tvar build_stats_banner_component_1 = __webpack_require__(503);\r\n\tvar auth_component_1 = __webpack_require__(502);\r\n\tvar App = (function () {\r\n\t    function App(_bootstrapService) {\r\n\t        var _this = this;\r\n\t        this._bootstrapService = _bootstrapService;\r\n\t        this.loaded = false;\r\n\t        _bootstrapService.boot().subscribe(function (service) {\r\n\t            service.freeze();\r\n\t            _this.loaded = true;\r\n\t        });\r\n\t    }\r\n\t    App = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-division-build',\r\n\t            pipes: [],\r\n\t            styles: [__webpack_require__(523)],\r\n\t            directives: [build_stats_banner_component_1.BuildStatsBannerComponent, auth_component_1.AuthComponent],\r\n\t            encapsulation: core_1.ViewEncapsulation.None,\r\n\t            template: __webpack_require__(552),\r\n\t            providers: []\r\n\t        }),\r\n\t        router_deprecated_1.RouteConfig([\r\n\t            { path: '/...', name: 'InventoryRoot', component: inventory_component_1.InventoryRootComponent }\r\n\t        ]), \r\n\t        __metadata('design:paramtypes', [bootstrap_service_1.BootstrapService])\r\n\t    ], App);\r\n\t    return App;\r\n\t}());\r\n\texports.App = App;\r\n\n\n/***/ },\n\n/***/ 523:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"@font-face{font-family:'Borda';font-style:normal;font-weight:500;src:url(\\\"app/assets/fonts/borda-regular-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-regular-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.svg#borda\\\") format(\\\"svg\\\")}@font-face{font-family:'Borda';font-style:normal;font-weight:600;src:url(\\\"app/assets/fonts/borda-demibold_0-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-demibold_0-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.svg#borda\\\") format(\\\"svg\\\")}@font-face{font-family:'Borda';font-style:normal;font-weight:700;src:url(\\\"app/assets/fonts/borda-bold-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-bold-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.svg#borda\\\") format(\\\"svg\\\")}*{box-sizing:border-box}.clearfix:after{visibility:hidden;display:block;font-size:0;content:\\\" \\\";clear:both;height:0}.clearfix{display:inline-block}* html .clearfix{height:1%}.clearfix{display:block}.hidden{display:none !important}body{margin:0}body:before{background-image:url(\\\"app/assets/images/background-processed.jpg\\\");background-repeat:no-repeat;background-size:cover;bottom:0;content:'';left:0;position:fixed;right:0;top:0;z-index:-1}.outer-wrapper{display:flex;flex-flow:row wrap;justify-content:space-around}.tooltip .item-wrapper{margin:0}.tooltip .rarity-indicator{display:none}.generator-wrapper{width:450px}.generator-wrapper select,.generator-wrapper input{display:block;width:100%}.generator-wrapper input{border-radius:2px;font-size:18px;padding:5px 10px}\\n\"\n\n/***/ },\n\n/***/ 115:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by Keyston on 4/7/2016.\r\n\t */\r\n\t\"use strict\";\r\n\t//https://blog.rsuter.com/angular-2-typescript-property-decorator-that-converts-input-values-to-the-correct-type/\r\n\t// tslint:disable-next-line\r\n\texports.StringConverter = function (value) {\r\n\t    if (value === null || value === undefined || typeof value === 'string')\r\n\t        return value;\r\n\t    return value.toString();\r\n\t};\r\n\t// tslint:disable-next-line\r\n\texports.BooleanConverter = function (value) {\r\n\t    if (value === null || value === undefined || typeof value === 'boolean')\r\n\t        return value;\r\n\t    return value.toString() === 'true';\r\n\t};\r\n\t// tslint:disable-next-line\r\n\texports.NumberConverter = function (value) {\r\n\t    if (value === void 0 || value === undefined || typeof value === 'number')\r\n\t        return value;\r\n\t    return parseFloat(value.toString());\r\n\t};\r\n\tfunction InputConverter(converter) {\r\n\t    return function (target, key) {\r\n\t        if (converter === undefined) {\r\n\t            // (<any>Reflect).getMetadata('design:type', target, key);\r\n\t            var metadata = void 0;\r\n\t            if (metadata === undefined || metadata === void 0)\r\n\t                throw new Error('The reflection metadata could not be found.');\r\n\t            if (metadata.name === 'String') {\r\n\t                converter = exports.StringConverter;\r\n\t            }\r\n\t            else if (metadata.name === 'Boolean') {\r\n\t                converter = exports.BooleanConverter;\r\n\t            }\r\n\t            else if (metadata.name === 'Number') {\r\n\t                converter = exports.NumberConverter;\r\n\t            }\r\n\t            else {\r\n\t                throw new Error(\"There is no converter for the given property type \" + metadata.name + \".\");\r\n\t            }\r\n\t        }\r\n\t        var definition = Object.getOwnPropertyDescriptor(target, key);\r\n\t        if (definition) {\r\n\t            Object.defineProperty(target, key, {\r\n\t                get: definition.get,\r\n\t                set: function (newValue) {\r\n\t                    definition.set(converter(newValue));\r\n\t                },\r\n\t                enumerable: true,\r\n\t                configurable: true\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            Object.defineProperty(target, key, {\r\n\t                get: function () {\r\n\t                    return this['__' + key];\r\n\t                },\r\n\t                set: function (newValue) {\r\n\t                    this['__' + key] = converter(newValue);\r\n\t                },\r\n\t                enumerable: true,\r\n\t                configurable: true\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t}\r\n\texports.InputConverter = InputConverter;\r\n\n\n/***/ },\n\n/***/ 24:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by Keyston on 4/2/2016.\r\n\t */\r\n\t\"use strict\";\r\n\t// tslint:disable-next-line\r\n\texports.AttributeInheritance = {\r\n\t    NATIVE: 'native',\r\n\t    EXTRA: 'extra'\r\n\t};\r\n\t// tslint:disable-next-line\r\n\texports.WeaponSlot = {\r\n\t    Primary: 'primary',\r\n\t    Secondary: 'secondary',\r\n\t    Sidearm: 'sidearm'\r\n\t};\r\n\tvar ATTRIBUTE_OFFENSIVE = 'offensive';\r\n\tvar ATTRIBUTE_DEFENSIVE = 'defensive';\r\n\tvar ATTRIBUTE_UTILITY = 'utility';\r\n\tvar MAJOR_ATTRIBUTE = 'major';\r\n\tvar MINOR_ATTRIBUTE = 'minor';\r\n\t// tslint:disable-next-line\r\n\texports.AttributeKind = {\r\n\t    OFFENSIVE: 'offensive',\r\n\t    DEFENSIVE: 'defensive',\r\n\t    UTILITY: 'utility'\r\n\t};\r\n\t// tslint:disable-next-line\r\n\texports.AttributeType = {\r\n\t    MAJOR: 'major',\r\n\t    MINOR: 'minor',\r\n\t    MAIN: 'main',\r\n\t    SKILL: 'skill'\r\n\t};\r\n\t// https://basarat.gitbooks.io/typescript/content/docs/enums.html\r\n\t// tslint:disable-next-line\r\n\texports.ItemType = {\r\n\t    BodyArmor: 'body-armor',\r\n\t    Mask: 'mask',\r\n\t    KneePads: 'knee-pads',\r\n\t    BackPack: 'back-pack',\r\n\t    Gloves: 'gloves',\r\n\t    Holster: 'holster',\r\n\t    Pistol: 'pistol',\r\n\t    AR: 'assault-rifle',\r\n\t    SMG: 'smg',\r\n\t    LMG: 'lmg',\r\n\t    Shotgun: 'shotgun',\r\n\t    Sniper: 'sniper'\r\n\t};\r\n\texports.GEAR_TYPES = [exports.ItemType.BodyArmor, exports.ItemType.Mask,\r\n\t    exports.ItemType.KneePads, exports.ItemType.BackPack,\r\n\t    exports.ItemType.Gloves, exports.ItemType.Holster];\r\n\texports.WEAPON_TYPES = [exports.ItemType.Pistol, exports.ItemType.AR, exports.ItemType.SMG, exports.ItemType.LMG,\r\n\t    exports.ItemType.Shotgun, exports.ItemType.Sniper];\r\n\t// tslint:disable-next-line\r\n\tvar AttributeRange = (function () {\r\n\t    function AttributeRange() {\r\n\t    }\r\n\t    return AttributeRange;\r\n\t}());\r\n\texports.AttributeRange = AttributeRange;\r\n\t// tslint:disable-next-line\r\n\texports.Gender = {\r\n\t    MALE: 'male',\r\n\t    FEMALE: 'female'\r\n\t};\r\n\t// tslint:disable-next-line\r\n\texports.GearRarity = {\r\n\t    HIGH_END: 'high-end',\r\n\t    SUPERIOR: 'superior',\r\n\t    SPECIALIZED: 'specialized',\r\n\t    GEAR_SET: 'gear-set'\r\n\t};\r\n\tvar GearSupport = (function () {\r\n\t    function GearSupport() {\r\n\t    }\r\n\t    return GearSupport;\r\n\t}());\r\n\texports.GearSupport = GearSupport;\r\n\t// tslint:disable-next-line\r\n\texports.ValueFormat = {\r\n\t    PERCENT: 'percent',\r\n\t    NUMBER: 'number',\r\n\t    WEAPON: 'weapon',\r\n\t    NONE: 'none'\r\n\t};\r\n\tvar GearStats = (function () {\r\n\t    function GearStats() {\r\n\t    }\r\n\t    return GearStats;\r\n\t}());\r\n\texports.GearStats = GearStats;\r\n\t// tslint:disable-next-line\r\n\texports.Affects = {\r\n\t    normalize: function (value) {\r\n\t        return (value.replace(/-/g, '_').toLowerCase());\r\n\t    },\r\n\t    CRIT_HIT_CHANCE: 'crit_hit_chance',\r\n\t    CRIT_HIT_DAMAGE: 'crit_hit_damage',\r\n\t    WEAPON_DAMAGE: 'weapon_damage',\r\n\t    ASSAULT_RIFLE_DAMAGE: 'assault_rifle_damage',\r\n\t    SHOTGUN_DAMAGE: 'shotgun_damage',\r\n\t    LMG_DAMAGE: 'lmg_damage',\r\n\t    PISTOL_DAMAGE: 'pistol_damage',\r\n\t    SNIPER_DAMAGE: 'sniper_damage',\r\n\t    ARMOR: 'armor',\r\n\t    HEALTH: 'health',\r\n\t    SKILL_POWER: 'skill_power',\r\n\t    FIREARMS: 'firearms',\r\n\t    STAMINA: 'stamina',\r\n\t    ELECTRONICS: 'electronics',\r\n\t    ACCURACY: 'accuracy',\r\n\t    HIP_ACCURACY: 'hip_accuracy',\r\n\t    MAGAZINE_SIZE: 'magazine_size',\r\n\t    HEADSHOT_DAMAGE: 'headshot_damage',\r\n\t    RELOAD: 'reload',\r\n\t    RPM: 'rpm'\r\n\t};\r\n\n\n/***/ },\n\n/***/ 228:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar PrettyNumberPipe = (function () {\r\n\t    function PrettyNumberPipe() {\r\n\t    }\r\n\t    PrettyNumberPipe.prototype.transform = function (value, args) {\r\n\t        return value.toLocaleString();\r\n\t    };\r\n\t    PrettyNumberPipe = __decorate([\r\n\t        core_1.Pipe({ name: 'prettynumber' }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], PrettyNumberPipe);\r\n\t    return PrettyNumberPipe;\r\n\t}());\r\n\texports.PrettyNumberPipe = PrettyNumberPipe;\r\n\n\n/***/ },\n\n/***/ 353:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/2/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar lang_1 = __webpack_require__(6);\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar invalid_pipe_argument_exception_1 = __webpack_require__(48);\r\n\tvar UcFirstPipe = (function () {\r\n\t    function UcFirstPipe() {\r\n\t    }\r\n\t    UcFirstPipe.prototype.transform = function (value, args) {\r\n\t        if (args === void 0) { args = []; }\r\n\t        if (lang_1.isBlank(value))\r\n\t            return value;\r\n\t        if (!lang_1.isString(value)) {\r\n\t            throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(UcFirstPipe, value);\r\n\t        }\r\n\t        function apply(str) {\r\n\t            return str.charAt(0).toUpperCase() + str.slice(1);\r\n\t        }\r\n\t        if (args.length) {\r\n\t            return value.split(args[0]).map(apply).join(args[0]);\r\n\t        }\r\n\t        return apply(value);\r\n\t    };\r\n\t    UcFirstPipe = __decorate([\r\n\t        core_1.Pipe({ name: 'ucfirst' }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], UcFirstPipe);\r\n\t    return UcFirstPipe;\r\n\t}());\r\n\texports.UcFirstPipe = UcFirstPipe;\r\n\n\n/***/ },\n\n/***/ 58:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/4/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar _ = __webpack_require__(412);\r\n\tvar Observable_1 = __webpack_require__(1);\r\n\tvar lang_1 = __webpack_require__(6);\r\n\texports.noop = function () {\r\n\t};\r\n\tfunction without(collection, element) {\r\n\t    if (!collection)\r\n\t        return exports.noop;\r\n\t    var index = collection.indexOf(element);\r\n\t    if (index === -1 && element.hasOwnProperty('id'))\r\n\t        index = collection.indexOf(_.find(collection, { id: element.id }));\r\n\t    if (index > -1)\r\n\t        collection.splice(index, 1);\r\n\t    return function () {\r\n\t        collection.splice(index, 0, element);\r\n\t    };\r\n\t}\r\n\texports.without = without;\r\n\tfunction numberRange(low, high) {\r\n\t    var step = 1;\r\n\t    // check if a decimal is present\r\n\t    if (low.toString().indexOf('.') !== -1 || high.toString().indexOf('.') !== -1) {\r\n\t        step = .5;\r\n\t    }\r\n\t    var range = [];\r\n\t    for (var i = low; i <= high; i += step) {\r\n\t        range.push(i);\r\n\t    }\r\n\t    return range;\r\n\t}\r\n\texports.numberRange = numberRange;\r\n\tvar SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\r\n\tfunction camelCase(name) {\r\n\t    return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {\r\n\t        return offset ? letter.toUpperCase() : letter;\r\n\t    });\r\n\t}\r\n\texports.camelCase = camelCase;\r\n\tfunction asObservable(subject, once) {\r\n\t    if (once === void 0) { once = false; }\r\n\t    function wrap(obs) {\r\n\t        return new Observable_1.Observable(function (fn) { return obs.subscribe(fn); });\r\n\t    }\r\n\t    return once\r\n\t        ? wrap(subject.first(function (x, idx, _) { return lang_1.isArray(x) ? !!x.length : !!x; }))\r\n\t        : wrap(subject);\r\n\t}\r\n\texports.asObservable = asObservable;\r\n\n\n/***/ },\n\n/***/ 498:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/7/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar AttributeRestrictPipe = (function () {\r\n\t    function AttributeRestrictPipe() {\r\n\t    }\r\n\t    AttributeRestrictPipe.prototype.transform = function (values, _a) {\r\n\t        var selection = _a[0];\r\n\t        if (selection.length === 1) {\r\n\t            return values;\r\n\t        }\r\n\t        var ids = selection.map(function (attr) { return attr.id; });\r\n\t        return values.filter(function (attr) { return ids.indexOf(attr.id) === -1; });\r\n\t    };\r\n\t    AttributeRestrictPipe = __decorate([\r\n\t        core_1.Pipe({\r\n\t            name: 'attributeRestrict',\r\n\t            pure: false\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AttributeRestrictPipe);\r\n\t    return AttributeRestrictPipe;\r\n\t}());\r\n\texports.AttributeRestrictPipe = AttributeRestrictPipe;\r\n\n\n/***/ },\n\n/***/ 540:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"clearfix\\\">\\n  <div class=\\\"attribute-value-wrapper\\\" *ngIf=\\\"!freeFormDisplay\\\">\\n\\n    <label editor>+{{attribute.value|attribute:attributeFormat}}</label>\\n    <select [(ngModel)]=\\\"attribute.value\\\" (ngModelChange)=\\\"onAttributeChange()\\\" editor=\\\"true\\\"\\n    >\\n      <option *ngFor=\\\"let attr of attributeValues\\\" [value]=\\\"attr\\\">{{attr|attribute:attributeFormat}}</option>\\n    </select>\\n\\n  </div>\\n\\n  <div class=\\\"attribute-value-wrapper\\\" *ngIf=\\\"freeFormDisplay\\\">\\n    <auto-resize-input [length]=\\\"maxInputLength\\\" inputType=\\\"number\\\" [format]=\\\"attributeFormat\\\"\\n                       [(ngModel)]=\\\"attribute.value\\\"\\n                       (input)=\\\"onAttributeInputChanged($event)\\\"></auto-resize-input>\\n  </div>\\n  <div class=\\\"attribute-title-wrapper\\\">\\n    <label editor>{{attributeName}}</label>\\n    <div editor=\\\"true\\\">\\n      <select [(ngModel)]=\\\"attribute.id\\\" (ngModelChange)=\\\"onAttributeChange()\\\">\\n        <option *ngFor=\\\"let attr of attributes\\\" [value]=\\\"attr.id\\\">{{attr.name}}</option>\\n      </select>\\n      <button (click)=\\\"onRemoveAttribute()\\\" *ngIf=\\\"canAddOrRemove\\\">-</button>\\n      <button (click)=\\\"onAddAttribute()\\\" *ngIf=\\\"canAddOrRemove\\\">+</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 524:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}select,label{float:left;width:61%}label{word-wrap:break-word}button{color:#eb7c09;font-weight:bold;width:20px;height:20px;float:right;text-align:center;margin-right:5px}button:active,button:focus{border:1px #eb7c09;outline-color:#eb7c09}.attributes-wrapper:first-child{margin-top:0}.attributes-title-wrapper{font-weight:600;margin-top:10px}.attribute-value-wrapper{color:#eb7c09;float:left;font-weight:600;margin-right:10px}.attribute-value-wrapper label{width:auto !important}.attribute-value-wrapper select{color:#eb7c09;font-weight:600;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3);width:34px}\\n\"\n\n/***/ },\n\n/***/ 354:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(35);\r\n\tvar attributes_model_1 = __webpack_require__(500);\r\n\tvar attribute_pipe_1 = __webpack_require__(355);\r\n\tvar attributes_service_1 = __webpack_require__(150);\r\n\tvar common_2 = __webpack_require__(24);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar attribute_restrict_pipe_1 = __webpack_require__(498);\r\n\tvar lang_1 = __webpack_require__(6);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar converters_1 = __webpack_require__(115);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar AttributeComponent = (function () {\r\n\t    function AttributeComponent(_attributesService) {\r\n\t        this._attributesService = _attributesService;\r\n\t        this.restrict = [];\r\n\t        this.added = new core_1.EventEmitter();\r\n\t        this.removed = new core_1.EventEmitter();\r\n\t        this.attributeName = '';\r\n\t        this._attributesById = {};\r\n\t    }\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"maxInputLength\", {\r\n\t        get: function () {\r\n\t            return (this.maxlength && lang_1.isNumber(this.maxlength))\r\n\t                ? this.maxlength : (lang_1.isFunction(this.maxlength)) ? this.maxlength() : 4;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AttributeComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        var meta = this.metadata;\r\n\t        var provider = this.attributesProvider\r\n\t            ? this.attributesProvider\r\n\t            : this._attributesService.getFor(meta.belongsTo, this.attributeType);\r\n\t        this._subscription = provider.subscribe(function (data) {\r\n\t            _this._attributesById = {};\r\n\t            _this._attributes = data;\r\n\t            _this.attribute.id = undefined;\r\n\t            data.forEach(function (attr) { return _this._attributesById[attr.id] = attr; });\r\n\t            if (data.length) {\r\n\t                _this.onAttributeChange();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"restrictAttributeId\", {\r\n\t        get: function () {\r\n\t            return this._restrictAttributeId;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            if (this._restrictAttributeId !== value) {\r\n\t                this.attribute.id = void 0;\r\n\t            }\r\n\t            this._restrictAttributeId = value;\r\n\t            var attrs = this.attributes;\r\n\t            if (!this.attribute.id && attrs.length) {\r\n\t                this._commitAttributeChange(attrs[0].id);\r\n\t            }\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"attributes\", {\r\n\t        get: function () {\r\n\t            var values = this._attributes ?\r\n\t                isNaN(this.restrictAttributeId) || !this.restrictAttributeId\r\n\t                    ? this._attributes : _.filter(this._attributes, { id: this.restrictAttributeId })\r\n\t                : [];\r\n\t            // check to see if we are restricting the attribute selection\r\n\t            // if so then commit the change so that when not in edit mode the view\r\n\t            // updates correctly\r\n\t            if (values.length === 1) {\r\n\t                this._commitAttributeChange(values[0].id);\r\n\t            }\r\n\t            return values;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"canAddOrRemove\", {\r\n\t        get: function () {\r\n\t            return !item_service_1.isWeaponType(this.metadata.belongsTo);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"attributeDef\", {\r\n\t        get: function () {\r\n\t            if (!this.attribute.id) {\r\n\t                return void 0;\r\n\t            }\r\n\t            return this._attributesById[this.attribute.id];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"attributeValues\", {\r\n\t        get: function () {\r\n\t            if (!this.attribute.id) {\r\n\t                return [];\r\n\t            }\r\n\t            // this.attributeDef.values[this.metadata.level];\r\n\t            var _a = [1, 2], low = _a[0], high = _a[1];\r\n\t            return utils_1.numberRange(low, high);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AttributeComponent.prototype.onAttributeChange = function () {\r\n\t        // ensure that we always select the first entry\r\n\t        // when there is only one entry left no matter if we\r\n\t        // switch from another attribute set\r\n\t        if (!this.attribute.id || this.attributes.length === 1) {\r\n\t            this.attribute.id = this.attributes[0].id;\r\n\t        }\r\n\t        this._commitAttributeChange(this.attribute.id);\r\n\t    };\r\n\t    AttributeComponent.prototype._commitAttributeChange = function (id) {\r\n\t        this.attribute.id = id;\r\n\t        this.selectedAttribute = this._attributesById[id];\r\n\t        this.attributeName = this.selectedAttribute.name;\r\n\t        this.attributeFormat = this.selectedAttribute.format || common_2.ValueFormat.PERCENT;\r\n\t    };\r\n\t    AttributeComponent.prototype.onAddAttribute = function () {\r\n\t        this.added.emit({\r\n\t            attributeType: this.attributeType,\r\n\t            attribute: {\r\n\t                id: this.attribute.id,\r\n\t                value: this.attribute.value\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    AttributeComponent.prototype.onRemoveAttribute = function () {\r\n\t        this.removed.emit({\r\n\t            attribute: this.attribute,\r\n\t            attributeType: this.attributeType\r\n\t        });\r\n\t    };\r\n\t    Object.defineProperty(AttributeComponent.prototype, \"freeFormDisplay\", {\r\n\t        get: function () {\r\n\t            // this.attributeDef ? !this.attributeDef.values : true;\r\n\t            return true;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AttributeComponent.prototype.onAttributeInputChanged = function (value) {\r\n\t        this.attribute.value = value;\r\n\t    };\r\n\t    AttributeComponent.prototype.ngOnDestroy = function () {\r\n\t        this._subscription.unsubscribe();\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', attributes_model_1.Attribute)\r\n\t    ], AttributeComponent.prototype, \"attribute\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"metadata\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], AttributeComponent.prototype, \"restrict\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('attribute-type'), \r\n\t        __metadata('design:type', String)\r\n\t    ], AttributeComponent.prototype, \"attributeType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('maxlength'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"maxlength\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"added\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"removed\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('attributes-provider'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"attributesProvider\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('restrict-attribute'),\r\n\t        converters_1.InputConverter(converters_1.NumberConverter), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributeComponent.prototype, \"restrictAttributeId\", null);\r\n\t    AttributeComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'item-attribute',\r\n\t            pipes: [attribute_pipe_1.AttributePipe, attribute_restrict_pipe_1.AttributeRestrictPipe],\r\n\t            template: __webpack_require__(540),\r\n\t            styles: [__webpack_require__(524)],\r\n\t            directives: [common_1.NgFor, auto_resize_input_component_1.AutoResizeInputComponent, editor_1.EditorDirective,\r\n\t                common_1.NgSwitch, common_1.NgSwitchWhen, common_1.NgSwitchDefault]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [attributes_service_1.AttributesService])\r\n\t    ], AttributeComponent);\r\n\t    return AttributeComponent;\r\n\t}());\r\n\texports.AttributeComponent = AttributeComponent;\r\n\n\n/***/ },\n\n/***/ 355:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar WEAPON_THRESHOLD = 10000;\r\n\tvar WEAPON_BASE = 10;\r\n\tvar AttributePipe = (function () {\r\n\t    function AttributePipe() {\r\n\t    }\r\n\t    AttributePipe.prototype.transform = function (value, format) {\r\n\t        if (format === void 0) { format = common_1.ValueFormat.NUMBER; }\r\n\t        if (format === common_1.ValueFormat.NONE)\r\n\t            return String(value).trim();\r\n\t        var tail = format === common_1.ValueFormat.PERCENT ? '%' : '';\r\n\t        if (!value || isNaN(value))\r\n\t            return '0' + tail;\r\n\t        if (format === common_1.ValueFormat.PERCENT) {\r\n\t            return value + '%';\r\n\t        }\r\n\t        if (format === common_1.ValueFormat.WEAPON) {\r\n\t            return value >= WEAPON_THRESHOLD ?\r\n\t                (WEAPON_BASE + ((value - WEAPON_THRESHOLD) * .001)).toFixed(1) + 'k' :\r\n\t                value.toLocaleString();\r\n\t        }\r\n\t        return value.toLocaleString();\r\n\t    };\r\n\t    AttributePipe = __decorate([\r\n\t        core_1.Pipe({ name: 'attribute' }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AttributePipe);\r\n\t    return AttributePipe;\r\n\t}());\r\n\texports.AttributePipe = AttributePipe;\r\n\n\n/***/ },\n\n/***/ 525:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host{position:relative;display:block}.section-wrapper{min-height:71px}.button-bar{position:absolute;top:0;right:-85px}.button-bar button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:70px;color:#eb7c09}.attributes-wrapper:first-child{margin-top:0}.attributes-title-wrapper{font-weight:600;margin-top:10px}\\n\"\n\n/***/ },\n\n/***/ 499:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar attribute_component_1 = __webpack_require__(354);\r\n\tvar common_1 = __webpack_require__(35);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar converters_1 = __webpack_require__(115);\r\n\tvar AttributesComponent = (function () {\r\n\t    function AttributesComponent(_elementRef) {\r\n\t        this._elementRef = _elementRef;\r\n\t        this.canAdd = true;\r\n\t    }\r\n\t    Object.defineProperty(AttributesComponent.prototype, \"majorAttributes\", {\r\n\t        get: function () {\r\n\t            return this.attributes ? this.attributes.major : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributesComponent.prototype, \"minorAttributes\", {\r\n\t        get: function () {\r\n\t            return this.attributes ? this.attributes.minor : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributesComponent.prototype, \"skillAttributes\", {\r\n\t        get: function () {\r\n\t            return this.attributes ? this.attributes.skill : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AttributesComponent.prototype.onRemoveAttribute = function (event) {\r\n\t        utils_1.without(this.attributes[event.attributeType], event.attribute);\r\n\t        this._dispatchEvent('attributeRemoved', event);\r\n\t    };\r\n\t    AttributesComponent.prototype.onAddAttribute = function (event) {\r\n\t        this.attributes[event.attributeType]\r\n\t            .push(event.attribute);\r\n\t        this._dispatchEvent('attributeAdded', event);\r\n\t    };\r\n\t    AttributesComponent.prototype.onAddAttributeType = function (attributeType) {\r\n\t        this.attributes[attributeType].push({\r\n\t            value: 0\r\n\t        });\r\n\t    };\r\n\t    AttributesComponent.prototype._dispatchEvent = function (type, event) {\r\n\t        this._elementRef.nativeElement.dispatchEvent(new CustomEvent(type, {\r\n\t            detail: {\r\n\t                attribute: event.attribute,\r\n\t                attributeType: event.attributeType\r\n\t            }\r\n\t        }));\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input('data'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributesComponent.prototype, \"attributes\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('gear-metadata'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AttributesComponent.prototype, \"metadata\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('can-add'),\r\n\t        converters_1.InputConverter(converters_1.BooleanConverter), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], AttributesComponent.prototype, \"canAdd\", void 0);\r\n\t    AttributesComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'item-attributes',\r\n\t            templateUrl: 'app/components/attributes/attributes.component.html',\r\n\t            styles: [__webpack_require__(525)],\r\n\t            directives: [common_1.NgFor, attribute_component_1.AttributeComponent, editor_1.EditorDirective]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef])\r\n\t    ], AttributesComponent);\r\n\t    return AttributesComponent;\r\n\t}());\r\n\texports.AttributesComponent = AttributesComponent;\r\n\n\n/***/ },\n\n/***/ 500:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar Attribute = (function () {\r\n\t    function Attribute() {\r\n\t    }\r\n\t    return Attribute;\r\n\t}());\r\n\texports.Attribute = Attribute;\r\n\n\n/***/ },\n\n/***/ 501:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar auth_service_ts_1 = __webpack_require__(116);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\tvar AuthCallbackComponent = (function () {\r\n\t    function AuthCallbackComponent(_loginService, _routeParams) {\r\n\t        this._loginService = _loginService;\r\n\t        this._routeParams = _routeParams;\r\n\t    }\r\n\t    AuthCallbackComponent.prototype.ngOnInit = function () {\r\n\t        var loginStrategy = this._routeParams.get('strategy');\r\n\t        if (loginStrategy) {\r\n\t            var strategy = this._loginService.authFor(loginStrategy);\r\n\t            strategy.callback(this._routeParams);\r\n\t        }\r\n\t    };\r\n\t    AuthCallbackComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'auth-callback',\r\n\t            template: __webpack_require__(361)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [auth_service_ts_1.AuthService, router_deprecated_1.RouteParams])\r\n\t    ], AuthCallbackComponent);\r\n\t    return AuthCallbackComponent;\r\n\t}());\r\n\texports.AuthCallbackComponent = AuthCallbackComponent;\r\n\n\n/***/ },\n\n/***/ 361:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"login-container\\\">\\n  <button (click)=\\\"login('psn')\\\">PSN</button>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 502:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar auth_service_1 = __webpack_require__(116);\r\n\tvar core_1 = __webpack_require__(2);\r\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\tvar AuthComponent = (function () {\r\n\t    function AuthComponent(_loginService) {\r\n\t        this._loginService = _loginService;\r\n\t    }\r\n\t    AuthComponent.prototype.login = function (type) {\r\n\t        var strategy = this._loginService.authFor(type);\r\n\t        strategy.login().subscribe(function (res) { return console.log(res); }, function (error) { return console.error(error); }, function () { return console.log('Completed login'); });\r\n\t    };\r\n\t    AuthComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'auth',\r\n\t            template: __webpack_require__(361)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [auth_service_1.AuthService])\r\n\t    ], AuthComponent);\r\n\t    return AuthComponent;\r\n\t}());\r\n\texports.AuthComponent = AuthComponent;\r\n\n\n/***/ },\n\n/***/ 526:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"input,.placeholder{color:#eb7c09;float:left;width:12px;font-weight:600;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3)}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button,.placeholder::-webkit-outer-spin-button,.placeholder::-webkit-inner-spin-button{margin:0}.hidden{display:none}label{margin-right:10px}.edit-mode input,.edit-mode div.placeholder,.edit-mode label{border-bottom:1px dotted #888 !important}input,div.placeholder{background:none;line-height:15px;border:0}input.inputted{color:#ff0000;border-bottom:0;background:transparent}div.placeholder{display:inline-block;visibility:collapse}\\n\"\n\n/***/ },\n\n/***/ 100:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/6/2016.\r\n\t */\r\n\t\"use strict\";\r\n\t// http://jsfiddle.net/ARTsinn/QJSfa/\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(35);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar common_2 = __webpack_require__(24);\r\n\tvar attribute_pipe_1 = __webpack_require__(355);\r\n\tvar editor_service_1 = __webpack_require__(118);\r\n\tvar converters_1 = __webpack_require__(115);\r\n\t// http://jbavari.github.io/blog/2015/10/21/angular-2-and-ng-model/\r\n\t// https://github.com/driftyco/ionic/blob/2.0/ionic/components/searchbar/searchbar.ts\r\n\tvar AutoResizeInput = (function () {\r\n\t    function AutoResizeInput(_elementRef) {\r\n\t        this._elementRef = _elementRef;\r\n\t    }\r\n\t    Object.defineProperty(AutoResizeInput.prototype, \"nativeElement\", {\r\n\t        get: function () {\r\n\t            return this._elementRef.nativeElement;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    /**\r\n\t     * @private\r\n\t     * Don't send the input's input event\r\n\t     */\r\n\t    AutoResizeInput.prototype.stopInput = function (ev) {\r\n\t        ev.preventDefault();\r\n\t        ev.stopPropagation();\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.HostListener('input', ['$event']),\r\n\t        core_1.HostListener('change', ['$event']), \r\n\t        __metadata('design:type', Function), \r\n\t        __metadata('design:paramtypes', [Object]), \r\n\t        __metadata('design:returntype', void 0)\r\n\t    ], AutoResizeInput.prototype, \"stopInput\", null);\r\n\t    AutoResizeInput = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '.auto-resize-input'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef])\r\n\t    ], AutoResizeInput);\r\n\t    return AutoResizeInput;\r\n\t}());\r\n\texports.AutoResizeInput = AutoResizeInput;\r\n\tvar AutoResizeInputComponent = (function () {\r\n\t    function AutoResizeInputComponent(elementRef, ngControl, ngZone, _editorService) {\r\n\t        var _this = this;\r\n\t        this._editorService = _editorService;\r\n\t        this.resizeIncrement = 10;\r\n\t        this.length = 4;\r\n\t        this.inputType = 'number';\r\n\t        this.prepend = '+';\r\n\t        this.editing = false;\r\n\t        this.input = new core_1.EventEmitter();\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        this.onChange = function (_) {\r\n\t        };\r\n\t        /**\r\n\t         * @private\r\n\t         */\r\n\t        this.onTouched = function () {\r\n\t        };\r\n\t        ngControl.valueAccessor = this;\r\n\t        this.elementRef = elementRef;\r\n\t        this.ngZone = ngZone;\r\n\t        this._editorSubscription = this._editorService.subscribe(function (value) { return _this.allowEditing = value; });\r\n\t    }\r\n\t    Object.defineProperty(AutoResizeInputComponent.prototype, \"numberStep\", {\r\n\t        get: function () {\r\n\t            return this.format === common_2.ValueFormat.PERCENT ? '0.5' : '1';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AutoResizeInputComponent.prototype.ngOnInit = function () {\r\n\t        this.value = this.ngModel;\r\n\t        this.onChange(this.value);\r\n\t        var attributes = this.elementRef.nativeElement.attributes;\r\n\t        var nodeName = _.find(attributes, function (attr) { return attr.nodeName.indexOf('_nghost-') !== -1; }).nodeName;\r\n\t        this.placeholderContentName = nodeName.replace('_nghost-', '_ngcontent-');\r\n\t        // _nghost-juu-\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.ngOnDestroy = function () {\r\n\t        this._editorSubscription.unsubscribe();\r\n\t    };\r\n\t    /**\r\n\t     * @private\r\n\t     * Write a new value to the element.\r\n\t     */\r\n\t    AutoResizeInputComponent.prototype.writeValue = function (value) {\r\n\t        this.value = value;\r\n\t    };\r\n\t    /**\r\n\t     * @private\r\n\t     * Set the function to be called when the control receives a change event.\r\n\t     */\r\n\t    AutoResizeInputComponent.prototype.registerOnChange = function (fn) {\r\n\t        this.onChange = fn;\r\n\t    };\r\n\t    /**\r\n\t     * @private\r\n\t     * Set the function to be called when the control receives a touch event.\r\n\t     */\r\n\t    AutoResizeInputComponent.prototype.registerOnTouched = function (fn) {\r\n\t        this.onTouched = fn;\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.onClicked = function () {\r\n\t        if (this._editorService.state) {\r\n\t            this.editing = true;\r\n\t            var inputElement_1 = this.autoResizeInput.nativeElement;\r\n\t            var self_1 = this;\r\n\t            this.ngZone.run(function () {\r\n\t                if (inputElement_1) {\r\n\t                    inputElement_1.focus();\r\n\t                    inputElement_1.select();\r\n\t                }\r\n\t                self_1.resize();\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.onInputChanged = function (event) {\r\n\t        var value = event.target.value;\r\n\t        if (this.length && value.length > this.length) {\r\n\t            value = value.substr(0, this.length);\r\n\t        }\r\n\t        // make sure its an number\r\n\t        if (this.inputType === 'number')\r\n\t            value = +value;\r\n\t        if (this.value !== value) {\r\n\t            this.value = value;\r\n\t            this.input.emit(this.value);\r\n\t            this.resize();\r\n\t        }\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.onInputFocused = function () {\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.onInputBlurred = function () {\r\n\t        this.resize();\r\n\t        this.editing = false;\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.onInputKeydown = function (event) {\r\n\t        if (event.target.value.length > this.length) {\r\n\t            event.target.value = event.target.value.substr(0, this.length);\r\n\t        }\r\n\t        // this.resize(this.resizeIncrement);\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.getElementWidth = function (nativeElement) {\r\n\t        return nativeElement.offsetWidth;\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.setElementWidth = function (nativeElement, width) {\r\n\t        nativeElement.style.width = width + 15 + 'px';\r\n\t    };\r\n\t    AutoResizeInputComponent.prototype.resize = function () {\r\n\t        /* pad = (this.value.length >= this.length) ? 0 : pad;\r\n\t    \r\n\t         let div = document.createElement('div');\r\n\t         div.className = 'placeholder';\r\n\t         div.innerHTML = this.value;\r\n\t         div.setAttribute(this.placeholderContentName, '');\r\n\t         let parentNode = this.elementRef.nativeElement;\r\n\t         parentNode.appendChild(div);\r\n\t         */\r\n\t        // convert to string\r\n\t        var value = this.value + '';\r\n\t        this.setElementWidth(this.autoResizeInput.nativeElement, ((value.length + 1) * this.resizeIncrement) + 2);\r\n\t        // parentNode.removeChild(div);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(AutoResizeInput), \r\n\t        __metadata('design:type', AutoResizeInput)\r\n\t    ], AutoResizeInputComponent.prototype, \"autoResizeInput\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], AutoResizeInputComponent.prototype, \"ngModel\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('resize-increment'),\r\n\t        converters_1.InputConverter(converters_1.NumberConverter), \r\n\t        __metadata('design:type', Number)\r\n\t    ], AutoResizeInputComponent.prototype, \"resizeIncrement\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], AutoResizeInputComponent.prototype, \"length\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], AutoResizeInputComponent.prototype, \"inputType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], AutoResizeInputComponent.prototype, \"format\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], AutoResizeInputComponent.prototype, \"prepend\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AutoResizeInputComponent.prototype, \"input\", void 0);\r\n\t    AutoResizeInputComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'auto-resize-input',\r\n\t            template: \"<div [ngClass]=\\\"{'edit-mode':allowEditing}\\\" class='clearfix'>\\n        <label  [ngClass]='{hidden:editing}' (click)='onClicked()'>\\n          {{prepend}}{{value|attribute:format}}\\n        </label>\\n        <input [ngClass]='{hidden:!editing}' autofocus [attr.type]='inputType'\\n         min=\\\"0\\\" max=\\\"9999\\\"\\n         [attr.step]=\\\"numberStep\\\" [attr.size]='length' [value]='value' \\n         (input)='onInputChanged($event)'  (focus)='onInputFocused()' \\n         class='auto-resize-input' (blur)='onInputBlurred()'/>\\n    </div>\\n     \",\r\n\t            pipes: [attribute_pipe_1.AttributePipe],\r\n\t            directives: [common_1.FORM_DIRECTIVES, AutoResizeInput],\r\n\t            styles: [__webpack_require__(526)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef, common_1.NgControl, core_1.NgZone, editor_service_1.EditorService])\r\n\t    ], AutoResizeInputComponent);\r\n\t    return AutoResizeInputComponent;\r\n\t}());\r\n\texports.AutoResizeInputComponent = AutoResizeInputComponent;\r\n\n\n/***/ },\n\n/***/ 541:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"build-stats-banner\\\" class=\\\"clearfix\\\">\\n\\n\\n  <div id=\\\"banner-columns\\\">\\n\\n    <div id=\\\"banner-name\\\">\\n      <label editor>{{inventory.name}}</label>\\n\\n\\n      <input editor=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.name\\\"\\n             (ngModelChange)=\\\"onBuildNameChanged($event)\\\"/>\\n\\n    </div>\\n    <div class=\\\"column\\\">\\n      <label>Primary DPS</label>\\n      <span>{{dps|prettynumber}}</span>\\n\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n        Firearms <img src=\\\"app/assets/images/icon-stat-firearms.png\\\"/>{{firearms}}\\n      </div>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <label>Health</label>\\n\\n      <span>{{health|prettynumber}}</span>\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n        Stamina <img src=\\\"app/assets/images/icon-stat-stamina.png\\\"/>{{stamina}}\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"column\\\">\\n      <label>Skill Power</label>\\n\\n      <span>{{skillpower|prettynumber}}</span>\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n\\n        Electronics <img src=\\\"app/assets/images/icon-stat-electronics.png\\\"/>{{electronics}}\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div id=\\\"inventory-actions\\\" *ngIf=\\\"ownsInventory\\\">\\n    <button (click)=\\\"save()\\\">SAVE</button>\\n    <button (click)=\\\"reset()\\\">NEW</button>\\n    <button (click)=\\\"onToggleEditor()\\\">{{currentEditorState}}</button>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 527:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#build-stats-banner{width:auto;margin-bottom:15px}#banner-columns{max-width:1080px;float:left}.column{color:#fff;background-color:rgba(60,61,55,0.4);width:344px;float:left;margin-right:16px;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3)}.column:last-child{margin-right:0px}.column label{text-align:center;display:block;width:100%}.column span{display:block;text-align:center;font-size:30px;font-weight:700}.column img{display:inline-block;width:25px;position:relative;bottom:-6px}.column .bottom{line-height:25px;text-align:center;width:80%;margin:0 auto;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d}.column .bottom hr{display:block;height:1px;border:0;border-top:1px solid rgba(83,74,75,0.4);margin:0 auto;padding:0;box-shadow:0px 1px 1px 0px rgba(0,0,0,0.3)}.column .bottom div{position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}#inventory-actions{margin-top:45px;float:left}#inventory-actions button{cursor:pointer;background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:100px;color:#fff}#banner-name{text-align:center;margin-bottom:10px}#banner-name input,#banner-name label{font-weight:600;background:none;border:0;color:white;font-family:Borda, serif;font-size:25px;letter-spacing:1.05px;line-height:15px;text-shadow:0 0 2px rgba(0,0,0,0.3);text-align:center}#banner-name label{padding:10px;display:block}#banner-name input{width:80%;border-bottom:1px dotted #888 !important}\\n\"\n\n/***/ },\n\n/***/ 503:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 5/12/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar build_stats_service_1 = __webpack_require__(117);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar prettynumber_1 = __webpack_require__(228);\r\n\tvar editor_service_1 = __webpack_require__(118);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar BuildStatsBannerComponent = (function () {\r\n\t    function BuildStatsBannerComponent(_editorService, _buildStatsService, _inventoryService) {\r\n\t        var _this = this;\r\n\t        this._editorService = _editorService;\r\n\t        this._buildStatsService = _buildStatsService;\r\n\t        this._inventoryService = _inventoryService;\r\n\t        this._inventoryService.weaponSelected\r\n\t            .subscribe(function (weapon) { return _this._onWeaponSelected(weapon); });\r\n\t    }\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"dps\", {\r\n\t        get: function () {\r\n\t            return this._selectedWeapon\r\n\t                ? this._calc.caculateDps(this._selectedWeapon)\r\n\t                : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"firearms\", {\r\n\t        get: function () {\r\n\t            return this._calc ? this._calc.firearms : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"health\", {\r\n\t        get: function () {\r\n\t            return this._calc ? this._calc.health : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"stamina\", {\r\n\t        get: function () {\r\n\t            return this._calc ? this._calc.stamina : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"skillpower\", {\r\n\t        get: function () {\r\n\t            return this._calc ? this._calc.skillpower : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"electronics\", {\r\n\t        get: function () {\r\n\t            return this._calc ? this._calc.electronics : 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    BuildStatsBannerComponent.prototype._onWeaponSelected = function (weapon) {\r\n\t        this._calc = this._buildStatsService\r\n\t            .create(this._inventoryService.inventory);\r\n\t        this._selectedWeapon = weapon;\r\n\t    };\r\n\t    BuildStatsBannerComponent.prototype.save = function () {\r\n\t        this._inventoryService.save();\r\n\t    };\r\n\t    BuildStatsBannerComponent.prototype.reset = function () {\r\n\t        this._inventoryService.reset();\r\n\t    };\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"ownsInventory\", {\r\n\t        get: function () {\r\n\t            return this._inventoryService.owns();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"currentEditorState\", {\r\n\t        get: function () {\r\n\t            return this._editorService.state ? 'Editor On' : 'Editor Off';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    BuildStatsBannerComponent.prototype.onBuildNameChanged = function (name) {\r\n\t        this.inventory.name = name;\r\n\t    };\r\n\t    BuildStatsBannerComponent.prototype.onToggleEditor = function () {\r\n\t        this._editorService.toggle();\r\n\t    };\r\n\t    Object.defineProperty(BuildStatsBannerComponent.prototype, \"inventory\", {\r\n\t        get: function () {\r\n\t            return this._inventoryService.inventory;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    BuildStatsBannerComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'build-stats-banner',\r\n\t            template: __webpack_require__(541),\r\n\t            styles: [__webpack_require__(527)],\r\n\t            pipes: [prettynumber_1.PrettyNumberPipe],\r\n\t            directives: [auto_resize_input_component_1.AutoResizeInputComponent, editor_1.EditorDirective]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [editor_service_1.EditorService, build_stats_service_1.BuildStatsService, inventory_service_1.InventoryService])\r\n\t    ], BuildStatsBannerComponent);\r\n\t    return BuildStatsBannerComponent;\r\n\t}());\r\n\texports.BuildStatsBannerComponent = BuildStatsBannerComponent;\r\n\n\n/***/ },\n\n/***/ 542:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inventory-item-image {{item.rarity}}\\\">\\n  <div class=\\\"image\\\" [ngStyle]=\\\"icon | async\\\"></div>\\n  <div class=\\\"set-image\\\" [ngStyle]=\\\"gearSetIcon | async\\\" *ngIf=\\\"belongsToSet\\\"></div>\\n  <!--<div class=\\\"slots\\\">\\n    <div *ngFor=\\\"let rarity of modSlotsRarities\\\" [ngClass]=\\\"rarity\\\"></div>\\n  </div> -->\\n</div>\\n\"\n\n/***/ },\n\n/***/ 528:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".inventory-item-image{width:164px;height:87px;display:block;float:left;position:relative;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d}.inventory-item-image.high-end{background-color:rgba(255,175,16,0.56)}.inventory-item-image.superior{background-color:rgba(175,66,150,0.56)}.inventory-item-image.specialized{background-color:rgba(80,128,255,0.56)}.inventory-item-image.gear-set{background-color:rgba(1,191,97,0.56)}.inventory-item-image .image{position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:152px;height:75px;display:block;background:white;mask-type:luminance;margin:0 auto;-webkit-mask-size:152px 75px}.inventory-item-image.gear-set .image{-webkit-mask-position-x:-38px}.inventory-item-image .set-image{position:absolute;mask-type:luminance;margin:0 auto;background:white;width:75px;height:75px;opacity:.3;top:7%;right:10px;-webkit-mask-size:75px 75px}.slots{position:absolute;bottom:0}.slots div{width:31px;height:6px;display:inline-block;margin-right:3px}.slots div.high-end{background-color:#ffaf10}.slots div.superior{background-color:#af4296}\\n\"\n\n/***/ },\n\n/***/ 356:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 4/26/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar modslots_service_1 = __webpack_require__(151);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar InventoryItemImageComponent = (function () {\r\n\t    function InventoryItemImageComponent(_modSlotService, _itemService) {\r\n\t        this._modSlotService = _modSlotService;\r\n\t        this._itemService = _itemService;\r\n\t    }\r\n\t    Object.defineProperty(InventoryItemImageComponent.prototype, \"icon\", {\r\n\t        get: function () {\r\n\t            var style = {};\r\n\t            return !this.item ? style :\r\n\t                this._itemService\r\n\t                    .imageResolve(this.item).map(function (icon) {\r\n\t                    style['-webkit-mask-image'] = \"url('\" + icon.primary + \"')\";\r\n\t                    return style;\r\n\t                });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemImageComponent.prototype, \"belongsToSet\", {\r\n\t        get: function () {\r\n\t            return this.item && this.item.rarity === common_1.GearRarity.GEAR_SET;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemImageComponent.prototype, \"gearSetIcon\", {\r\n\t        get: function () {\r\n\t            var style = {};\r\n\t            return !this.item ? style :\r\n\t                this._itemService\r\n\t                    .imageResolve(this.item).map(function (icon) {\r\n\t                    style['-webkit-mask-image'] = \"url('\" + icon.secondary + \"')\";\r\n\t                    return style;\r\n\t                });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemImageComponent.prototype, \"modSlotsRarities\", {\r\n\t        get: function () {\r\n\t            var slotTypes = this._modSlotService.getTypes(this.item.type);\r\n\t            return (!this.item || !this.item.mods)\r\n\t                ? [] :\r\n\t                this.item.mods.map(function (m) { return _.find(slotTypes, { id: m.id }).rarity; });\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], InventoryItemImageComponent.prototype, \"item\", void 0);\r\n\t    InventoryItemImageComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'inventory-item-image',\r\n\t            styles: [__webpack_require__(528)],\r\n\t            template: __webpack_require__(542)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [modslots_service_1.ModSlotService, item_service_1.ItemsService])\r\n\t    ], InventoryItemImageComponent);\r\n\t    return InventoryItemImageComponent;\r\n\t}());\r\n\texports.InventoryItemImageComponent = InventoryItemImageComponent;\r\n\n\n/***/ },\n\n/***/ 543:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inventory-item-row clearfix\\\">\\n  <div class=\\\"left\\\">\\n    <div class=\\\"item-image\\\">\\n      <inventory-item-image [item]=\\\"item\\\"></inventory-item-image>\\n    </div>\\n    <div class=\\\"item-meta\\\" [ngSwitch]=\\\"isWeapon\\\">\\n      <div class=\\\"title\\\">{{item.name}}</div>\\n      <div class=\\\"dps\\\" *ngSwitchWhen=\\\"true\\\">\\n        <span>{{weaponDps|prettynumber}}</span>\\n        <label>DPS</label>\\n      </div>\\n      <div class=\\\"armor\\\" *ngSwitchDefault=\\\"\\\">\\n        <span>{{item.armor|prettynumber}}</span>\\n        <label>ARM</label>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n  <div class=\\\"score\\\">\\n    <label>SCORE</label>\\n    <span>{{item.score}}</span>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 529:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".inventory-item-row .left{width:425px;margin-right:5px}.inventory-item-row .left,.inventory-item-row .score{float:left;height:73px;background-color:rgba(110,118,120,0.3)}.inventory-item-row .score{width:68px;text-align:center;font-family:'Borda', serif;color:white;padding-top:5px}.inventory-item-row .score label{font-size:18px;font-weight:600}.inventory-item-row .score span{font-weight:700;font-size:35px;line-height:32px}.item-image{height:73px;float:left;transform-origin:top left;transform:scale(.83908)}.item-meta{float:left;color:white;padding-top:5px;font-family:'Borda', serif;margin-left:-20px;text-shadow:1px 1px 2px rgba(0,0,0,0.6)}.item-meta .title{font-size:20px;line-height:20px}.item-meta .armor label{font-size:20px;font-weight:700}.item-meta .armor span{font-size:32px;font-weight:700}\\n\"\n\n/***/ },\n\n/***/ 504:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar prettynumber_1 = __webpack_require__(228);\r\n\tvar inventory_item_image_component_1 = __webpack_require__(356);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar build_stats_service_1 = __webpack_require__(117);\r\n\tvar InventoryItemRowComponent = (function () {\r\n\t    function InventoryItemRowComponent(_buildStatsService, _inventoryService) {\r\n\t        this._buildStatsService = _buildStatsService;\r\n\t        this._inventoryService = _inventoryService;\r\n\t    }\r\n\t    InventoryItemRowComponent.prototype.ngOnInit = function () {\r\n\t        this._calc = this._buildStatsService\r\n\t            .createForWeapon(this.item);\r\n\t    };\r\n\t    Object.defineProperty(InventoryItemRowComponent.prototype, \"weaponDps\", {\r\n\t        get: function () {\r\n\t            return this._calc.dps;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemRowComponent.prototype, \"isGear\", {\r\n\t        get: function () {\r\n\t            return !this.isWeapon;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemRowComponent.prototype, \"isWeapon\", {\r\n\t        get: function () {\r\n\t            return item_service_1.isWeaponType(this.item.type);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], InventoryItemRowComponent.prototype, \"item\", void 0);\r\n\t    InventoryItemRowComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'inventory-item-row',\r\n\t            styles: [__webpack_require__(529)],\r\n\t            template: __webpack_require__(543),\r\n\t            pipes: [prettynumber_1.PrettyNumberPipe],\r\n\t            directives: [inventory_item_image_component_1.InventoryItemImageComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [build_stats_service_1.BuildStatsService, inventory_service_1.InventoryService])\r\n\t    ], InventoryItemRowComponent);\r\n\t    return InventoryItemRowComponent;\r\n\t}());\r\n\texports.InventoryItemRowComponent = InventoryItemRowComponent;\r\n\n\n/***/ },\n\n/***/ 544:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"inventory-item clearfix\\\" *ngIf=\\\"!!item\\\">\\n  <inventory-item-image [item]=\\\"item\\\"></inventory-item-image>\\n\\n  <div class=\\\"inventory-item-info\\\" *ngIf=\\\"isWeapon\\\">\\n    <ul class=\\\"inventory-item-talents\\\">\\n\\n      <li *ngFor=\\\"let talent of item.talents\\\" [ngClass]=\\\"{active:talent.unlocked}\\\"\\n          [ngStyle]=\\\"talentIconStyle(talent)\\\"\\n      ></li>\\n\\n\\n    </ul>\\n  </div>\\n  <div class=\\\"inventory-item-info\\\" *ngIf=\\\"isGear\\\">\\n    <ul class=\\\"inventory-item-stats\\\">\\n\\n      <li *ngFor=\\\"let stat of statNames\\\"\\n          class=\\\"{{stat}}\\\"\\n          [ngClass]=\\\"{active:hasStat(stat)}\\\"></li>\\n\\n\\n    </ul>\\n    <div class=\\\"inventory-item-armor\\\">\\n      <label>ARMOR</label>\\n      <span>{{item.armor}}</span>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 530:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".inventory-item{width:344px;background-color:rgba(0,0,0,0.3);height:87px}.inventory-item-info{width:180px;float:left}.inventory-item-talents{list-style:none;width:180px;display:inline-block;float:left;padding:0;margin:0}.inventory-item-talents li{width:90px;height:90px;opacity:0.2;background:#fff;mask-type:luminance;float:left;-webkit-mask-size:90px 90px}.inventory-item-talents li.active{opacity:0.7}.inventory-item-stats{list-style:none;width:45px;display:inline-block;float:left;padding:0;margin:0}.inventory-item-stats li{height:28px;opacity:0.2}.inventory-item-stats li.active{background-color:rgba(82,83,75,0.25);opacity:1}.inventory-item-stats .firearms{background:url(\\\"app/assets/images/icon-stat-firearms.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-stats .stamina{background:url(\\\"app/assets/images/icon-stat-stamina.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-stats .electronics{background:url(\\\"app/assets/images/icon-stat-electronics.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-armor{color:#cccdc8;text-align:center;font-family:\\\"Borda\\\";font-weight:700;padding-top:5px;text-shadow:0px -1px 1px rgba(150,150,150,0.25)}.inventory-item-armor label{font-size:18px;display:block}.inventory-item-armor span{font-size:42px;line-height:25px}\\n\"\n\n/***/ },\n\n/***/ 505:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 4/26/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar inventory_item_image_component_1 = __webpack_require__(356);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar inventory_model_1 = __webpack_require__(358);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar InventoryItemComponent = (function () {\r\n\t    function InventoryItemComponent(_itemsService, _inventoryService) {\r\n\t        this._itemsService = _itemsService;\r\n\t        this._inventoryService = _inventoryService;\r\n\t    }\r\n\t    Object.defineProperty(InventoryItemComponent.prototype, \"isWeapon\", {\r\n\t        get: function () {\r\n\t            return item_service_1.isWeaponType(this.itemType);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemComponent.prototype, \"isGear\", {\r\n\t        get: function () {\r\n\t            return !item_service_1.isWeaponType(this.itemType);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryItemComponent.prototype.ngOnInit = function () {\r\n\t        /*\r\n\t         if (!this.item)this._itemsService\r\n\t         .getDescriptorFor(this.itemType)\r\n\t         .subscribe(descriptor => {\r\n\t    \r\n\t         let first = <DivisionItem>descriptor.items[GearRarity.SUPERIOR][0];\r\n\t         let isWeapon = isWeaponType(this.itemType);\r\n\t         let empty = isWeapon\r\n\t         ? this._weaponDefaultState(descriptor.talents, first.name)\r\n\t         : this._gearDefaultState(first.name);\r\n\t    \r\n\t    \r\n\t         if (isWeapon) {\r\n\t         this._inventoryService.updateWeapon(this.weaponSlot, <Weapon>empty);\r\n\t         } else {\r\n\t         this._inventoryService.update(this.itemType, empty);\r\n\t         }\r\n\t         }\r\n\t         );*/\r\n\t    };\r\n\t    InventoryItemComponent.prototype.talentIconStyle = function (talent) {\r\n\t        var style = {};\r\n\t        var icon = this._itemsService\r\n\t            .talentImageResolve(talent.id);\r\n\t        style['-webkit-mask-image'] = \"url('\" + icon.primary + \"')\";\r\n\t        return style;\r\n\t    };\r\n\t    InventoryItemComponent.prototype.hasStat = function (name) {\r\n\t        return !this.item ? false : this.item.stats[name] > 0;\r\n\t    };\r\n\t    Object.defineProperty(InventoryItemComponent.prototype, \"statNames\", {\r\n\t        get: function () {\r\n\t            return ['firearms', 'stamina', 'electronics'];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryItemComponent.prototype._weaponDefaultState = function (talents, name) {\r\n\t        var _talents = _.chain(talents).take(2).map(function (talent) {\r\n\t            return { id: talent.id };\r\n\t        }).value();\r\n\t        return {\r\n\t            rarity: common_1.GearRarity.SUPERIOR,\r\n\t            type: this.itemType,\r\n\t            name: name,\r\n\t            score: 131,\r\n\t            stats: {\r\n\t                damage: 8900\r\n\t            },\r\n\t            mods: [],\r\n\t            talents: _talents\r\n\t        };\r\n\t    };\r\n\t    InventoryItemComponent.prototype._gearDefaultState = function (name) {\r\n\t        var gear = {\r\n\t            rarity: common_1.GearRarity.SUPERIOR,\r\n\t            type: this.itemType,\r\n\t            name: name,\r\n\t            score: 131,\r\n\t            stats: {\r\n\t                firearms: 0,\r\n\t                stamina: 0,\r\n\t                electronics: 0\r\n\t            },\r\n\t            armor: 100,\r\n\t            attributes: {\r\n\t                major: [],\r\n\t                minor: [],\r\n\t                skill: []\r\n\t            },\r\n\t            mods: [],\r\n\t            talents: []\r\n\t        };\r\n\t        var keys = ['firearms', 'stamina', 'electronics'];\r\n\t        var key = keys[_.random(0, keys.length - 1)];\r\n\t        gear.stats[key] = _.random(450, 650);\r\n\t        return gear;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], InventoryItemComponent.prototype, \"item\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('item-type'), \r\n\t        __metadata('design:type', String)\r\n\t    ], InventoryItemComponent.prototype, \"itemType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('inventory-item-type'), \r\n\t        __metadata('design:type', String)\r\n\t    ], InventoryItemComponent.prototype, \"inventoryItemType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('weapon-slot'), \r\n\t        __metadata('design:type', String)\r\n\t    ], InventoryItemComponent.prototype, \"weaponSlot\", void 0);\r\n\t    InventoryItemComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'inventory-item',\r\n\t            styles: [__webpack_require__(530)],\r\n\t            template: __webpack_require__(544),\r\n\t            directives: [inventory_item_image_component_1.InventoryItemImageComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [item_service_1.ItemsService, inventory_service_1.InventoryService])\r\n\t    ], InventoryItemComponent);\r\n\t    return InventoryItemComponent;\r\n\t}());\r\n\texports.InventoryItemComponent = InventoryItemComponent;\r\n\n\n/***/ },\n\n/***/ 545:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"inventory-gear-items\\\" class=\\\"clearfix\\\">\\n  <div id=\\\"items-list\\\">\\n    <inventory-item-row [item]=\\\"item\\\" *ngFor=\\\"let item of items\\\"></inventory-item-row>\\n  </div>\\n\\n  <div id=\\\"item-overview\\\" *ngIf=\\\"activeItem\\\">\\n    <item-overview [item]=\\\"activeItem\\\"></item-overview>\\n  </div>\\n\\n  <button id=\\\"back-button\\\" (click)=\\\"back()\\\">&#8678; GO BACK</button>\\n\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 531:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#items-list,#item-overview{float:left}#back-button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:150px;color:#fff;display:inline-block;padding:10px 5px;cursor:pointer}\\n\"\n\n/***/ },\n\n/***/ 506:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/26/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar inventory_item_row_component_1 = __webpack_require__(504);\r\n\tvar item_overview_component_ts_1 = __webpack_require__(359);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar InventoryItemsComponent = (function () {\r\n\t    function InventoryItemsComponent(_routeParams, _inventoryService, _router) {\r\n\t        this._routeParams = _routeParams;\r\n\t        this._inventoryService = _inventoryService;\r\n\t        this._router = _router;\r\n\t        this._itemType = _routeParams.get('itemType');\r\n\t    }\r\n\t    InventoryItemsComponent.prototype.back = function () {\r\n\t        this._router.navigate(['Inventory']);\r\n\t    };\r\n\t    Object.defineProperty(InventoryItemsComponent.prototype, \"items\", {\r\n\t        get: function () {\r\n\t            var item = this._inventoryService.retrieve(this._itemType);\r\n\t            return item ? [item] : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryItemsComponent.prototype, \"activeItem\", {\r\n\t        get: function () {\r\n\t            var items = this.items;\r\n\t            return items.length ? items[0] : void 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryItemsComponent.prototype.onModSlotChanged = function () {\r\n\t    };\r\n\t    InventoryItemsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'inventory-items',\r\n\t            styles: [__webpack_require__(531)],\r\n\t            template: __webpack_require__(545),\r\n\t            directives: [inventory_item_row_component_1.InventoryItemRowComponent, item_overview_component_ts_1.ItemOverviewComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_deprecated_1.RouteParams, inventory_service_1.InventoryService, router_deprecated_1.Router])\r\n\t    ], InventoryItemsComponent);\r\n\t    return InventoryItemsComponent;\r\n\t}());\r\n\texports.InventoryItemsComponent = InventoryItemsComponent;\r\n\n\n/***/ },\n\n/***/ 546:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"inventory \\\" class=\\\"clearfix\\\">\\n\\n  <div id=\\\"inventory-weapons\\\" class=\\\"inventory-section\\\">\\n\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item (click)=\\\"navigate('primary')\\\" [item]=\\\"inventory.weapons.primary\\\"\\n                      inventory-item-type=\\\"weapon\\\"\\n                      item-type=\\\"assault-rifle\\\"\\n                      weapon-slot=\\\"primary\\\"\\n      ></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('secondary')\\\" [item]=\\\"inventory.weapons.secondary\\\"\\n                      inventory-item-type=\\\"weapon\\\"\\n                      item-type=\\\"sniper\\\"\\n                      weapon-slot=\\\"secondary\\\"\\n      ></inventory-item>\\n    </div>\\n  </div>\\n  <div id=\\\"inventory-gear\\\" class=\\\"inventory-section\\\">\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item (click)=\\\"navigate('body-armor')\\\" [item]=\\\"inventory.gear.bodyArmor\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      item-type=\\\"body-armor\\\"></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('mask')\\\" [item]=\\\"inventory.gear.mask\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      item-type=\\\"mask\\\"></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('knee-pads')\\\" item-type=\\\"knee-pads\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      [item]=\\\"inventory.gear.kneePads\\\"></inventory-item>\\n    </div>\\n\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item\\n        (click)=\\\"navigate('back-pack')\\\" item-type=\\\"back-pack\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.backPack\\\"></inventory-item>\\n\\n      <inventory-item\\n        (click)=\\\"navigate('gloves')\\\" item-type=\\\"gloves\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.gloves\\\"></inventory-item>\\n\\n      <inventory-item\\n        (click)=\\\"navigate('holster')\\\" item-type=\\\"holster\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.holster\\\"></inventory-item>\\n    </div>\\n\\n\\n  </div>\\n\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 532:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".inventory-section .column{float:left;margin-right:16px}.inventory-section inventory-item{display:block;cursor:pointer;margin-bottom:15px}\\n\"\n\n/***/ },\n\n/***/ 357:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 4/22/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar inventory_item_component_1 = __webpack_require__(505);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\tvar inventory_items_component_1 = __webpack_require__(506);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar auth_callback_component_1 = __webpack_require__(501);\r\n\tvar InventoryComponent = (function () {\r\n\t    function InventoryComponent(_router, _inventoryService, _routeParams) {\r\n\t        this._router = _router;\r\n\t        this._inventoryService = _inventoryService;\r\n\t        this._routeParams = _routeParams;\r\n\t        this.inventory = this._inventoryService.inventory;\r\n\t        var id = _routeParams.get('id');\r\n\t        if (id)\r\n\t            _inventoryService.load(id);\r\n\t    }\r\n\t    InventoryComponent.prototype.navigate = function (type) {\r\n\t        this._router.navigate(['InventoryList', { itemType: type }]);\r\n\t    };\r\n\t    InventoryComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'inventory',\r\n\t            styles: [__webpack_require__(532)],\r\n\t            template: __webpack_require__(546),\r\n\t            directives: [inventory_item_component_1.InventoryItemComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_deprecated_1.Router, inventory_service_1.InventoryService, router_deprecated_1.RouteParams])\r\n\t    ], InventoryComponent);\r\n\t    return InventoryComponent;\r\n\t}());\r\n\texports.InventoryComponent = InventoryComponent;\r\n\tvar InventoryRootComponent = (function () {\r\n\t    function InventoryRootComponent() {\r\n\t    }\r\n\t    InventoryRootComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            template: '<router-outlet></router-outlet>',\r\n\t            directives: [router_deprecated_1.RouterOutlet]\r\n\t        }),\r\n\t        router_deprecated_1.RouteConfig([\r\n\t            { path: '/inventory', name: 'Inventory', component: InventoryComponent, useAsDefault: true },\r\n\t            { path: '/inventory/:itemType', name: 'InventoryList', component: inventory_items_component_1.InventoryItemsComponent },\r\n\t            { path: '/authCallback/:strategy', name: 'AuthCallback', component: auth_callback_component_1.AuthCallbackComponent }\r\n\t        ]), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], InventoryRootComponent);\r\n\t    return InventoryRootComponent;\r\n\t}());\r\n\texports.InventoryRootComponent = InventoryRootComponent;\r\n\n\n/***/ },\n\n/***/ 358:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by Keyston on 4/22/2016.\r\n\t */\r\n\t\"use strict\";\r\n\t// tslint:disable-next-line\r\n\texports.InventoryItemType = {\r\n\t    Weapon: 'weapon',\r\n\t    Gear: 'gear'\r\n\t};\r\n\tvar InventoryWeapons = (function () {\r\n\t    function InventoryWeapons() {\r\n\t    }\r\n\t    return InventoryWeapons;\r\n\t}());\r\n\texports.InventoryWeapons = InventoryWeapons;\r\n\tvar InventoryGear = (function () {\r\n\t    function InventoryGear() {\r\n\t    }\r\n\t    return InventoryGear;\r\n\t}());\r\n\texports.InventoryGear = InventoryGear;\r\n\tvar Inventory = (function () {\r\n\t    function Inventory() {\r\n\t        this.weapons = new InventoryWeapons();\r\n\t        this.gear = new InventoryGear();\r\n\t    }\r\n\t    return Inventory;\r\n\t}());\r\n\texports.Inventory = Inventory;\r\n\n\n/***/ },\n\n/***/ 507:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar common_1 = __webpack_require__(24);\r\n\texports.DUMMY_GEAR = {\r\n\t    rarity: common_1.GearRarity.GEAR_SET,\r\n\t    type: common_1.ItemType.BodyArmor,\r\n\t    name: \"Sentry's Call harness\",\r\n\t    armor: 1049,\r\n\t    score: 214,\r\n\t    stats: {\r\n\t        firearms: 0,\r\n\t        stamina: 422,\r\n\t        electronics: 0\r\n\t    },\r\n\t    attributes: {\r\n\t        major: [{\r\n\t                id: 13,\r\n\t                value: 8\r\n\t            }],\r\n\t        minor: [],\r\n\t        skill: []\r\n\t    },\r\n\t    mods: [],\r\n\t    talents: []\r\n\t};\r\n\texports.GEAR_SCORES = (function () {\r\n\t    var scores = {};\r\n\t    scores[common_1.GearRarity.SUPERIOR] = [131, 147, 165];\r\n\t    scores[common_1.GearRarity.HIGH_END] = [163, 182, 204];\r\n\t    scores[common_1.GearRarity.GEAR_SET] = [191, 214, 240];\r\n\t    return scores;\r\n\t})();\r\n\n\n/***/ },\n\n/***/ 547:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"item-wrapper {{item.rarity}}\\\">\\n\\n  <div class=\\\"section-wrapper title-section\\\">\\n    <div class=\\\"rarity-indicator\\\"></div>\\n    <div class=\\\"title-wrapper\\\">\\n      <label editor=\\\"false\\\">{{item.name}}</label>\\n      <select [(ngModel)]=\\\"item.name\\\" editor=\\\"true\\\">\\n        <option *ngFor=\\\"let item of items\\\" [value]=\\\"item.name\\\">{{item.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"rarity-wrapper\\\">\\n      <label editor=\\\"false\\\">{{item.rarity|ucfirst}}</label>\\n      <select [(ngModel)]=\\\"item.rarity\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onRarityChanged($event)\\\">\\n        <option class=\\\"option-{{rarity}}\\\" *ngFor=\\\"let rarity of rarities\\\" [value]=\\\"rarity\\\">{{rarity|ucfirst}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"score-wrapper\\\">\\n      score\\n      <div class=\\\"number-wrapper score-number-wrapper\\\">\\n\\n        <label editor=\\\"false\\\">{{item.score}}</label>\\n        <select [(ngModel)]=\\\"item.score\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onGearScoreChanged($event)\\\">\\n          <option *ngFor=\\\"let score of scores\\\" [value]=\\\"score\\\">{{score}}</option>\\n        </select>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"section-wrapper clearfix\\\" *ngIf=\\\"isWeapon\\\">\\n    <div class=\\\"type-icon-wrapper {{item.type}}\\\"></div>\\n    <div class=\\\"type-name-wrapper\\\">\\n      <label editor=\\\"false\\\">{{weaponTypeName}}</label>\\n\\n      <select [(ngModel)]=\\\"selectedItemType\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onWeaponTypeChanged($event)\\\">\\n        <option *ngFor=\\\"let name of weaponTypeNames\\\" [value]=\\\"name.value\\\">{{name.label}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"type-extra-stat-wrapper\\\" *ngIf=\\\"weaponHasBonus\\\">\\n      <div class=\\\"type-extra-stat-number-wrapper\\\">\\n        <auto-resize-input\\n          resize-increment=\\\"20\\\"\\n          prepend=\\\"+\\\"\\n          [(ngModel)]=\\\"item.stats.bonus.value\\\"\\n          (input)=\\\"onWeaponBonusChanged($event)\\\"></auto-resize-input>\\n      </div>\\n      <div class=\\\"type-extra-stat-text-wrapper\\\">\\n        {{weaponBonusText}}\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section-wrapper \\\" *ngIf=\\\"isWeapon\\\">\\n\\n    <weapon-stats [weapon]=\\\"item\\\"></weapon-stats>\\n\\n\\n  </div>\\n\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n\\n    <div class=\\\"stat-wrapper\\\">\\n      ARMOR\\n      <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n        <auto-resize-input\\n          resize-increment=\\\"20\\\"\\n          prepend=\\\"\\\"\\n          [(ngModel)]=\\\"item.armor\\\"\\n          (input)=\\\"onArmorValueChanged($event)\\\"></auto-resize-input>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"section-wrapper \\\" *ngIf=\\\"isHighEnd || isWeapon\\\">\\n\\n    <talents [choices]=\\\"talentChoices\\\" [talents]=\\\"talents\\\" [has-image]=\\\"talentsHaveImage\\\"></talents>\\n\\n\\n  </div>\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n    <stats-display [stats]=\\\"item.stats\\\"></stats-display>\\n  </div>\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n    <item-attributes [data]=\\\"item.attributes\\\" [gear-metadata]=\\\"metadata\\\"></item-attributes>\\n  </div>\\n\\n\\n  <div class=\\\"section-wrapper\\\">\\n    <modslots [gear-metadata]=\\\"metadata\\\" [slots]=\\\"item.mods\\\"></modslots>\\n  </div>\\n\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 533:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host .item-wrapper{color:#fff;font-family:'Borda', serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;margin:0 0 80px 16px;position:relative;text-shadow:0px 0px 2px rgba(0,0,0,0.3);width:400px}:host .item-wrapper.high-end .rarity-indicator{background-color:#ffaf10}:host .item-wrapper.high-end .rarity-wrapper select,:host .item-wrapper.high-end .rarity-wrapper label,:host .item-wrapper.high-end .talent-title-wrapper{color:#f8db97}:host .item-wrapper.superior .rarity-indicator{background-color:#af4296}:host .item-wrapper.superior .rarity-wrapper select,:host .item-wrapper.superior .rarity-wrapper label,:host .item-wrapper.superior .talent-title-wrapper{color:#d688c2}:host .item-wrapper.specialized .rarity-indicator{background-color:#5080ff}:host .item-wrapper.specialized .rarity-wrapper select,:host .item-wrapper.specialized .rarity-wrapper label,:host .item-wrapper.specialized .talent-title-wrapper{color:#97aceb}:host .item-wrapper.gear-set .rarity-indicator{background-color:#01BF61}:host .item-wrapper.gear-set .rarity-wrapper select,:host .item-wrapper.gear-set .rarity-wrapper label,:host .item-wrapper.gear-set .talent-title-wrapper{color:#01ff90}:host .item-wrapper .section-wrapper{background-color:rgba(0,0,0,0.2);margin-bottom:1px;padding:10px 15px;position:relative}:host .item-wrapper .title-section{overflow:visible}:host .item-wrapper .rarity-indicator{height:100%;left:-10px;position:absolute;top:0;width:7px}:host .item-wrapper .rarity-wrapper{font-weight:600}:host .item-wrapper .number-wrapper,:host .item-wrapper .number-wrapper select{font-size:2.9em;font-weight:600;line-height:0.9;position:relative;top:-0.15em}:host .item-wrapper .number-wrapper select{font-size:1.0em;top:0}:host .item-wrapper .number-wrapper select option{font-size:.5em}:host .item-wrapper .title-wrapper{font-weight:600}:host .item-wrapper .title-wrapper a{color:inherit;text-decoration:none}:host .item-wrapper .title-wrapper a:hover{text-decoration:underline}:host .item-wrapper .score-wrapper{position:absolute;right:10px;text-align:center;text-transform:uppercase;top:0}:host .item-wrapper .type-icon-wrapper{float:left;height:50px;margin-right:15px;width:50px}:host .item-wrapper .type-icon-wrapper.assault-rifle{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/assault-rifle/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.lmg{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/lmg/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.smg{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/smg/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.sniper{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/sniper/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.shotgun{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/shotgun/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-name-wrapper{font-weight:600;line-height:1.25}:host .item-wrapper .type-extra-stat-wrapper{line-height:1.25}:host .item-wrapper .type-extra-stat-number-wrapper{color:#eb7c09;float:left;font-weight:700;margin-right:10px}:host .item-wrapper .requirements-wrapper{float:right;width:50%}:host .item-wrapper .requirements-title-wrapper{color:#eb7c09;font-weight:700}:host .item-wrapper .requirement-stat-wrapper{overflow:auto}:host .item-wrapper .requirement-stat-wrapper .icon{position:relative;top:3px}:host .item-wrapper .stat-requirement-number-wrapper{float:left;font-size:1.2em;font-weight:600;margin-left:10px}select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important;font-weight:600}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}:host .number-wrapper input,:host .number-wrapper div.placeholder{font-size:1em !important;color:#fff !important;width:20px;height:73px;margin-top:-9px}.item-wrapper.high-end .rarity-indicator{background-color:#ffaf10}.item-wrapper.high-end .rarity-wrapper select,.item-wrapper.high-end .rarity-wrapper label,.item-wrapper.high-end .talent-title-wrapper{color:#f8db97}.item-wrapper.superior .rarity-indicator{background-color:#af4296}.item-wrapper.superior .rarity-wrapper select,.item-wrapper.superior .rarity-wrapper label,.item-wrapper.superior .talent-title-wrapper{color:#d688c2}.item-wrapper.specialized .rarity-indicator{background-color:#5080ff}.item-wrapper.specialized .rarity-wrapper select,.item-wrapper.specialized .rarity-wrapper label,.item-wrapper.specialized .talent-title-wrapper{color:#97aceb}.item-wrapper.gear-set .rarity-indicator{background-color:#01BF61}.item-wrapper.gear-set .rarity-wrapper select,.item-wrapper.gear-set .rarity-wrapper label,.item-wrapper.gear-set .talent-title-wrapper{color:#01ff90}\\n\"\n\n/***/ },\n\n/***/ 359:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/2/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar ucfirst_pipe_1 = __webpack_require__(353);\r\n\tvar stats_display_1 = __webpack_require__(511);\r\n\tvar attributes_component_1 = __webpack_require__(499);\r\n\tvar prettynumber_1 = __webpack_require__(228);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar common_2 = __webpack_require__(35);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar modslots_component_1 = __webpack_require__(509);\r\n\tvar talents_component_1 = __webpack_require__(512);\r\n\tvar weapon_stats_component_1 = __webpack_require__(513);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar ItemOverviewComponent = (function () {\r\n\t    function ItemOverviewComponent(_itemService) {\r\n\t        this._itemService = _itemService;\r\n\t    }\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"rarities\", {\r\n\t        get: function () {\r\n\t            return this._itemService.rarities;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ItemOverviewComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this.selectedItemType = this.item.type;\r\n\t        this._updateDescriptor();\r\n\t        this._ensureWeaponBonus();\r\n\t        this.weaponTypeNames = [];\r\n\t        return _.forEach(this._itemService.weaponTypeNames, function (v, k) {\r\n\t            return _this.weaponTypeNames.push({\r\n\t                value: k,\r\n\t                label: v\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    /**\r\n\t     * Update the {@link ItemDescriptor} for a giving {@link ItemType}\r\n\t     * @param itemType\r\n\t     * @private\r\n\t     */\r\n\t    ItemOverviewComponent.prototype._updateDescriptor = function (itemType) {\r\n\t        var _this = this;\r\n\t        itemType = itemType || this.selectedItemType;\r\n\t        this._itemService\r\n\t            .getDescriptorFor(itemType)\r\n\t            .subscribe(function (descriptor) { return _this._commitChanges(descriptor, itemType); });\r\n\t    };\r\n\t    /**\r\n\t     * Finalize model changes, this is done so that we apply\r\n\t     * the itemType change at its last possible state so that\r\n\t     * all other values that are neede (name,rarity) have been\r\n\t     * set correctly for other method usage\r\n\t     * @param descriptor\r\n\t     * @param itemType\r\n\t     * @private\r\n\t     */\r\n\t    ItemOverviewComponent.prototype._commitChanges = function (descriptor, itemType) {\r\n\t        this.descriptor = descriptor;\r\n\t        if (this.item.type !== itemType) {\r\n\t            var item = descriptor.items[this.item.rarity][0];\r\n\t            if (!item) {\r\n\t                this.item.rarity = common_1.GearRarity.SUPERIOR;\r\n\t                item = descriptor.items[this.item.rarity][0];\r\n\t            }\r\n\t            this.item.name = item.name;\r\n\t        }\r\n\t        this.selectedItemType = this.item.type = itemType;\r\n\t        this.weaponTypeName = this._itemService.translateToName(itemType);\r\n\t        this._ensureWeaponBonus();\r\n\t    };\r\n\t    /**\r\n\t     * Checks or adds weapon bonus data\r\n\t     * @private\r\n\t     */\r\n\t    ItemOverviewComponent.prototype._ensureWeaponBonus = function () {\r\n\t        if (this.isWeapon) {\r\n\t            var weapon = this.item;\r\n\t            if (this.weaponHasBonus) {\r\n\t                if (!weapon.stats.bonus) {\r\n\t                    weapon.stats.bonus = this._itemService\r\n\t                        .defaultWeaponBonusFor(weapon.type);\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                weapon.stats.bonus = void 0;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"items\", {\r\n\t        get: function () {\r\n\t            return this.descriptor ? this.descriptor.items[this.item.rarity] : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"talentChoices\", {\r\n\t        get: function () {\r\n\t            return this.descriptor ? this.descriptor.talents : [];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"talents\", {\r\n\t        get: function () {\r\n\t            return this.item.talents;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"isHighEnd\", {\r\n\t        get: function () {\r\n\t            return this.item.rarity === common_1.GearRarity.HIGH_END;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"isGear\", {\r\n\t        get: function () {\r\n\t            return this.item && !this.isWeapon;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"isWeapon\", {\r\n\t        get: function () {\r\n\t            return item_service_1.isWeaponType(this.item.type);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"talentsHaveImage\", {\r\n\t        get: function () {\r\n\t            return this.isWeapon;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ItemOverviewComponent.prototype.onRarityChanged = function (rarity) {\r\n\t        // reset gear info when rarity changes\r\n\t        this.item.name = this.items[0].name;\r\n\t        this.item.score = this._itemService.scores[rarity][0];\r\n\t        if (this.isGear) {\r\n\t            if (this.isHighEnd) {\r\n\t                this.item.talents = [{ id: this.talentChoices[0].id }];\r\n\t            }\r\n\t            else {\r\n\t                this.item.talents = [];\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ItemOverviewComponent.prototype.onWeaponStatsChanged = function (statName, value) {\r\n\t        this.item.stats[statName] = value;\r\n\t    };\r\n\t    ItemOverviewComponent.prototype.onWeaponBonusChanged = function (value) {\r\n\t        this.item.stats.bonus.value = value;\r\n\t    };\r\n\t    ItemOverviewComponent.prototype.onWeaponTypeChanged = function (itemType) {\r\n\t        this._updateDescriptor(itemType);\r\n\t    };\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"weaponHasBonus\", {\r\n\t        get: function () {\r\n\t            var type = this.item.type;\r\n\t            return type === common_1.ItemType.SMG || type === common_1.ItemType.Sniper;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"weaponBonusText\", {\r\n\t        get: function () {\r\n\t            return this.item.type === common_1.ItemType.SMG\r\n\t                ? 'Critical Hit Chance'\r\n\t                : 'Headshot Damage';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"scores\", {\r\n\t        get: function () {\r\n\t            return this._itemService.scores[this.item.rarity];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ItemOverviewComponent.prototype.onArmorValueChanged = function (value) {\r\n\t        this.item.armor = value;\r\n\t    };\r\n\t    ItemOverviewComponent.prototype.onGearScoreChanged = function (score) {\r\n\t    };\r\n\t    Object.defineProperty(ItemOverviewComponent.prototype, \"metadata\", {\r\n\t        get: function () {\r\n\t            // weaponFamily: _.find(this.items, {name: this.item.name}).family\r\n\t            return {\r\n\t                level: this.item.score,\r\n\t                rarity: this.item.rarity,\r\n\t                belongsTo: this.item.type\r\n\t            };\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ItemOverviewComponent.prototype, \"item\", void 0);\r\n\t    ItemOverviewComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'item-overview',\r\n\t            pipes: [ucfirst_pipe_1.UcFirstPipe, prettynumber_1.PrettyNumberPipe],\r\n\t            // Set moduleId to current module so that all loading is done\r\n\t            // relative\r\n\t            styles: [__webpack_require__(533)],\r\n\t            template: __webpack_require__(547),\r\n\t            directives: [stats_display_1.StatsDisplay, attributes_component_1.AttributesComponent, common_2.NgFor,\r\n\t                editor_1.EditorDirective, auto_resize_input_component_1.AutoResizeInputComponent, modslots_component_1.ModSlotsComponent,\r\n\t                talents_component_1.TalentsComponent, weapon_stats_component_1.WeaponStatsComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [item_service_1.ItemsService])\r\n\t    ], ItemOverviewComponent);\r\n\t    return ItemOverviewComponent;\r\n\t}());\r\n\texports.ItemOverviewComponent = ItemOverviewComponent;\r\n\n\n/***/ },\n\n/***/ 534:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".mod-slot-wrapper{margin-bottom:5px}.mod-slot-wrapper.high-end .rarity-indicator{background-color:#ffaf10}.mod-slot-wrapper.high-end .rarity-wrapper select,.mod-slot-wrapper.high-end .rarity-wrapper label,.mod-slot-wrapper.high-end .talent-title-wrapper{color:#f8db97}.mod-slot-wrapper.superior .rarity-indicator{background-color:#af4296}.mod-slot-wrapper.superior .rarity-wrapper select,.mod-slot-wrapper.superior .rarity-wrapper label,.mod-slot-wrapper.superior .talent-title-wrapper{color:#d688c2}.mod-slot-wrapper.specialized .rarity-indicator{background-color:#5080ff}.mod-slot-wrapper.specialized .rarity-wrapper select,.mod-slot-wrapper.specialized .rarity-wrapper label,.mod-slot-wrapper.specialized .talent-title-wrapper{color:#97aceb}.mod-slot-wrapper.gear-set .rarity-indicator{background-color:#01BF61}.mod-slot-wrapper.gear-set .rarity-wrapper select,.mod-slot-wrapper.gear-set .rarity-wrapper label,.mod-slot-wrapper.gear-set .talent-title-wrapper{color:#01ff90}select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);font-weight:600;border-bottom:1px dotted #888 !important;display:block}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}select,label,.mod-slot-attributes-wrapper{margin-left:25px}.rarity-indicator{position:relative;height:12px;margin-top:2px;width:35px;display:inline-block;left:0px;-webkit-box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45);-moz-box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45);box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45)}.mod-slot-type-title-wrapper,.mod-slot-item-title-wrapper{display:inline-block}.mod-slot-item-title-wrapper label{display:block}.weapon .rarity-indicator{display:none}.mod-slot-wrapper.high-end .mod-slot-item-image{background-color:rgba(255,175,16,0.2)}.mod-slot-wrapper.high-end .mod-slot-item-name label:nth-child(1){font-weight:600}.mod-slot-wrapper.high-end .mod-slot-item-name label:nth-child(2),.mod-slot-wrapper.high-end .mod-slot-item-name select{color:#f8db97}.mod-slot-wrapper.superior .mod-slot-item-image{background-color:rgba(175,66,150,0.2)}.mod-slot-wrapper.superior .mod-slot-item-name label:nth-child(1){font-weight:600}.mod-slot-wrapper.superior .mod-slot-item-name label:nth-child(2),.mod-slot-wrapper.superior .mod-slot-item-name select{color:#d688c2 !important}.mod-slot-item-image{float:left;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;width:64px;height:64px}.mod-slot-item-image img{width:32px;margin:0 auto;display:block;position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.mod-slot-item-name{float:left}\\n\"\n\n/***/ },\n\n/***/ 508:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar modslots_service_1 = __webpack_require__(151);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar Rx_1 = __webpack_require__(85);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar attribute_component_1 = __webpack_require__(354);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar ModSlotComponent = (function () {\r\n\t    function ModSlotComponent(_modSlotService, _el) {\r\n\t        this._modSlotService = _modSlotService;\r\n\t        this._el = _el;\r\n\t        this.weaponModItems = [];\r\n\t        this.inheritPrimaryAttributeId = 0;\r\n\t        this._slotTypesById = {};\r\n\t        this._primaryAttributes = new Rx_1.BehaviorSubject([]);\r\n\t        this._secondaryAttributes = new Rx_1.BehaviorSubject([]);\r\n\t        this._primaryObservable = utils_1.asObservable(this._primaryAttributes);\r\n\t        this._secondaryObservable = utils_1.asObservable(this._secondaryAttributes);\r\n\t    }\r\n\t    Object.defineProperty(ModSlotComponent.prototype, \"isWeapon\", {\r\n\t        get: function () {\r\n\t            return item_service_1.isWeaponType(this.metadata.belongsTo);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotComponent.prototype, \"isGear\", {\r\n\t        get: function () {\r\n\t            return !this.isWeapon;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModSlotComponent.prototype.onSlotTypeChanged = function () {\r\n\t        var _this = this;\r\n\t        // Cast selected id to a number due to bug with angular2 and select\r\n\t        // http://stackoverflow.com/questions/35491608/how-to-get-number-in-ngmodel-in-angular-2\r\n\t        this.slot.id = +this.slot.id;\r\n\t        this._selectedSlotType = this._slotTypesById[this.slot.id];\r\n\t        this.slotName = this._selectedSlotType.name;\r\n\t        this.slotRarity = this._selectedSlotType.rarity;\r\n\t        if (this.isWeapon)\r\n\t            this._modSlotService\r\n\t                .weaponModItemsFor(this._selectedSlotType).subscribe(function (weaponModItems) {\r\n\t                _this.weaponModItems = weaponModItems;\r\n\t                if (!_this.slot.itemId)\r\n\t                    _this.slot.itemId = _this.weaponModItems[0].id;\r\n\t                _this.onWeaponSlotItemChanged(_this.slot.itemId);\r\n\t            });\r\n\t        this.refreshAttributeProviders();\r\n\t    };\r\n\t    Object.defineProperty(ModSlotComponent.prototype, \"weaponSlotImage\", {\r\n\t        get: function () {\r\n\t            return this._selectedSlotType\r\n\t                ? this._modSlotService.imageFor(this._selectedSlotType)\r\n\t                : '';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModSlotComponent.prototype.onWeaponSlotItemChanged = function (itemId) {\r\n\t        var weaponModItem = _.find(this.weaponModItems, { id: +itemId });\r\n\t        this.weaponModItemName = weaponModItem.name;\r\n\t        this.inheritPrimaryAttributeId = weaponModItem.inheritAttribute || 0;\r\n\t    };\r\n\t    /**\r\n\t     *  Function that returns an Observable that allows the @link AttributeComponent to\r\n\t     *  fetch the correct set of attributes to display for both primary and secondary\r\n\t     * @param primary\r\n\t     * @returns {Observable<GearAttribute[]>|Observable<R>}\r\n\t     */\r\n\t    ModSlotComponent.prototype.getAttributesProvider = function (primary) {\r\n\t        return primary ? this._primaryObservable : this._secondaryObservable;\r\n\t    };\r\n\t    ModSlotComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this.slotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\r\n\t        this.slotTypes.forEach(function (type) { return _this._slotTypesById[type.id] = type; });\r\n\t        this.onSlotTypeChanged();\r\n\t        // allow selecting of weapon mod rarity\r\n\t        if (this.isWeapon) {\r\n\t            var slotTypeId = this.slot.id;\r\n\t            this.slotTypes = _.filter(this.slotTypes, { kind: this._selectedSlotType.kind });\r\n\t        }\r\n\t    };\r\n\t    ModSlotComponent.prototype.refreshAttributeProviders = function () {\r\n\t        var _this = this;\r\n\t        this._modSlotService\r\n\t            .getAttributeSetFor(this._selectedSlotType)\r\n\t            .subscribe(function (attributeSet) {\r\n\t            _this._primaryAttributes.next(attributeSet.primary);\r\n\t            _this._secondaryAttributes.next(attributeSet.secondary);\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ModSlotComponent.prototype, \"slot\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('gear-metadata'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ModSlotComponent.prototype, \"metadata\", void 0);\r\n\t    ModSlotComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'modslot',\r\n\t            templateUrl: 'app/components/modslots/modslot.component.html',\r\n\t            styles: [__webpack_require__(534)],\r\n\t            directives: [editor_1.EditorDirective, attribute_component_1.AttributeComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [modslots_service_1.ModSlotService, core_1.ElementRef])\r\n\t    ], ModSlotComponent);\r\n\t    return ModSlotComponent;\r\n\t}());\r\n\texports.ModSlotComponent = ModSlotComponent;\r\n\n\n/***/ },\n\n/***/ 548:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mod-slots-wrapper section-wrapper \\\">\\n\\n  <modslot [slot]=\\\"slot\\\" *ngFor=\\\"let slot of slots\\\" [gear-metadata]=\\\"metadata\\\"></modslot>\\n\\n\\n  <div *ngIf=\\\"canDisplayControls\\\" class=\\\"button-bar\\\" editor=\\\"true\\\">\\n    <button (click)=\\\"onAddSlot()\\\" *ngIf=\\\"canAddSlot\\\">+ slot</button>\\n    <button (click)=\\\"onRemoveSlot()\\\" *ngIf=\\\"canRemoveSlot\\\">- slot</button>\\n  </div>\\n\\n\\n</div>\\n\"\n\n/***/ },\n\n/***/ 535:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".button-bar button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:75px;color:#eb7c09;display:inline-block}\\n\"\n\n/***/ },\n\n/***/ 509:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar modslots_service_1 = __webpack_require__(151);\r\n\tvar modslot_component_1 = __webpack_require__(508);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar ModSlotsComponent = (function () {\r\n\t    function ModSlotsComponent(_modSlotService, _ngZone) {\r\n\t        this._modSlotService = _modSlotService;\r\n\t        this._ngZone = _ngZone;\r\n\t    }\r\n\t    ModSlotsComponent.prototype.ngOnInit = function () {\r\n\t        var itemType = this.metadata.belongsTo;\r\n\t        this._hasNative = modslots_service_1.ModSlotService.hasNative(itemType);\r\n\t        var canAddSlots = (this._hasNative || item_service_1.isWeaponType(itemType)) && this.slots.length < 1;\r\n\t        if (canAddSlots) {\r\n\t            this.onAddSlot();\r\n\t        }\r\n\t        this._canHaveExtra = modslots_service_1.ModSlotService.canHaveExtra(itemType);\r\n\t    };\r\n\t    Object.defineProperty(ModSlotsComponent.prototype, \"canAddSlot\", {\r\n\t        get: function () {\r\n\t            return this.slots.length < this._canHaveExtra + (this._hasNative ? 1 : 0);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotsComponent.prototype, \"canRemoveSlot\", {\r\n\t        get: function () {\r\n\t            return !!this.slots.length;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotsComponent.prototype, \"canDisplayControls\", {\r\n\t        get: function () {\r\n\t            return this._hasNative || this._canHaveExtra > 0;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModSlotsComponent.prototype.onAddSlot = function () {\r\n\t        item_service_1.isWeaponType(this.metadata.belongsTo) ? this.onAddWeaponModSlot() : this.onAddGearModSlot();\r\n\t    };\r\n\t    ModSlotsComponent.prototype.onAddWeaponModSlot = function () {\r\n\t        // check to see which ModSlotType's are acceptable for this weapon\r\n\t        var _this = this;\r\n\t        var modSlotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\r\n\t        // filter to avoid duplicates\r\n\t        modSlotTypes = _.filter(modSlotTypes, { rarity: common_1.GearRarity.SUPERIOR });\r\n\t        var tree = [];\r\n\t        var self = this;\r\n\t        _.forEach(modSlotTypes, function (modSlotType, id) {\r\n\t            _this._modSlotService.getAttributeSetFor(modSlotType)\r\n\t                .subscribe(function (attributeSet) {\r\n\t                tree.push([modSlotType, attributeSet]);\r\n\t                if (tree.length === modSlotTypes.length) {\r\n\t                    _.forEach(tree, function (branch) {\r\n\t                        modSlotType = branch[0];\r\n\t                        attributeSet = branch[1];\r\n\t                        self._addSlot(modSlotType, attributeSet);\r\n\t                    });\r\n\t                }\r\n\t            });\r\n\t        });\r\n\t    };\r\n\t    ModSlotsComponent.prototype.weaponModItemChoices = function () {\r\n\t        var _this = this;\r\n\t        if (!item_service_1.isWeaponType(this.metadata.belongsTo))\r\n\t            return void 0;\r\n\t        var choices = {};\r\n\t        var modSlotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\r\n\t        _.forEach(this.slots, function (slot, _) {\r\n\t            var modSlotType = _.find(modSlotTypes, { id: slot.id });\r\n\t            choices[slot.id] = _this._modSlotService.weaponModItemsFor(modSlotType);\r\n\t        });\r\n\t        return choices;\r\n\t    };\r\n\t    ModSlotsComponent.prototype.onAddGearModSlot = function () {\r\n\t        var _this = this;\r\n\t        var defaultModSlotType = this._modSlotService.getTypes(this.metadata.belongsTo)[0];\r\n\t        if (this.canAddSlot)\r\n\t            if (this._defaultModSlotAttributeSet) {\r\n\t                this._addSlot(defaultModSlotType, this._defaultModSlotAttributeSet);\r\n\t            }\r\n\t            else {\r\n\t                this._modSlotService.getAttributeSetFor(defaultModSlotType)\r\n\t                    .subscribe(function (attributeSet) {\r\n\t                    _this._defaultModSlotAttributeSet = attributeSet;\r\n\t                    _this._addSlot(defaultModSlotType, attributeSet);\r\n\t                });\r\n\t            }\r\n\t    };\r\n\t    ModSlotsComponent.prototype.onRemoveSlot = function () {\r\n\t        this.slots.pop();\r\n\t    };\r\n\t    ModSlotsComponent.prototype._addSlot = function (modSlotType, attributeSet) {\r\n\t        var primary = attributeSet.primary[0];\r\n\t        var secondary = attributeSet.secondary[0];\r\n\t        if (secondary.id === primary.id) {\r\n\t            secondary = attributeSet.secondary[1];\r\n\t        }\r\n\t        var slot = {\r\n\t            id: modSlotType.id,\r\n\t            primary: {\r\n\t                id: primary.id,\r\n\t                value: 0\r\n\t            },\r\n\t            secondary: {\r\n\t                id: secondary.id,\r\n\t                value: 0\r\n\t            }\r\n\t        };\r\n\t        this.slots.push(slot);\r\n\t        return slot;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], ModSlotsComponent.prototype, \"slots\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('gear-metadata'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ModSlotsComponent.prototype, \"metadata\", void 0);\r\n\t    ModSlotsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'modslots',\r\n\t            template: __webpack_require__(548),\r\n\t            styles: [__webpack_require__(535)],\r\n\t            directives: [modslot_component_1.ModSlotComponent, editor_1.EditorDirective]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [modslots_service_1.ModSlotService, core_1.NgZone])\r\n\t    ], ModSlotsComponent);\r\n\t    return ModSlotsComponent;\r\n\t}());\r\n\texports.ModSlotsComponent = ModSlotsComponent;\r\n\n\n/***/ },\n\n/***/ 510:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar ModSlotType = (function () {\r\n\t    function ModSlotType(_id, _rarity, _slotKind) {\r\n\t        this._id = _id;\r\n\t        this._rarity = _rarity;\r\n\t        this._slotKind = _slotKind;\r\n\t    }\r\n\t    ModSlotType.toString = function (slotKind) {\r\n\t        switch (slotKind) {\r\n\t            case ModSlotKind.PERFORMANCE:\r\n\t                return 'Performance';\r\n\t            case ModSlotKind.FIREARMS:\r\n\t                return 'Firearms';\r\n\t            case ModSlotKind.STAMINA:\r\n\t                return 'Stamina';\r\n\t            case ModSlotKind.ELECTRONICS:\r\n\t                return 'Electronics';\r\n\t            case ModSlotKind.MUZZLE:\r\n\t                return 'Muzzle';\r\n\t            case ModSlotKind.UNDERBARREL:\r\n\t                return 'Underbarrel';\r\n\t            case ModSlotKind.OPTICS:\r\n\t                return 'Optics';\r\n\t            case ModSlotKind.MAGAZINE:\r\n\t                return 'Magazine';\r\n\t            default:\r\n\t                throw new Error('Invalid ModSlotKind');\r\n\t        }\r\n\t    };\r\n\t    Object.defineProperty(ModSlotType.prototype, \"kind\", {\r\n\t        get: function () {\r\n\t            return this._slotKind;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotType.prototype, \"id\", {\r\n\t        get: function () {\r\n\t            return this._id;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotType.prototype, \"rarity\", {\r\n\t        get: function () {\r\n\t            return this._rarity;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotType.prototype, \"identifier\", {\r\n\t        get: function () {\r\n\t            return ModSlotType.toString(this._slotKind).toLowerCase();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotType.prototype, \"belongsToWeapon\", {\r\n\t        get: function () {\r\n\t            return this._slotKind >= ModSlotKind.MUZZLE;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ModSlotType.prototype, \"name\", {\r\n\t        get: function () {\r\n\t            return this._slotKind < ModSlotKind.MUZZLE ? [\r\n\t                this._rarity === common_1.GearRarity.SUPERIOR\r\n\t                    ? 'Advanced ' : 'Prototype ',\r\n\t                ModSlotType.toString(this._slotKind),\r\n\t                ' Mod'].join('') : ModSlotType.toString(this._slotKind);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ModSlotType.prototype.resolveMainAttribute = function (attributes) {\r\n\t        return _.find(attributes, { name: ModSlotType.toString(this._slotKind) });\r\n\t    };\r\n\t    Object.defineProperty(ModSlotType.prototype, \"isPerformance\", {\r\n\t        get: function () {\r\n\t            return this._slotKind === ModSlotKind.PERFORMANCE;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    return ModSlotType;\r\n\t}());\r\n\texports.ModSlotType = ModSlotType;\r\n\t(function (ModSlotKind) {\r\n\t    ModSlotKind[ModSlotKind[\"PERFORMANCE\"] = 0] = \"PERFORMANCE\";\r\n\t    ModSlotKind[ModSlotKind[\"FIREARMS\"] = 1] = \"FIREARMS\";\r\n\t    ModSlotKind[ModSlotKind[\"STAMINA\"] = 2] = \"STAMINA\";\r\n\t    ModSlotKind[ModSlotKind[\"ELECTRONICS\"] = 3] = \"ELECTRONICS\";\r\n\t    ModSlotKind[ModSlotKind[\"MUZZLE\"] = 4] = \"MUZZLE\";\r\n\t    ModSlotKind[ModSlotKind[\"UNDERBARREL\"] = 5] = \"UNDERBARREL\";\r\n\t    ModSlotKind[ModSlotKind[\"OPTICS\"] = 6] = \"OPTICS\";\r\n\t    ModSlotKind[ModSlotKind[\"MAGAZINE\"] = 7] = \"MAGAZINE\";\r\n\t})(exports.ModSlotKind || (exports.ModSlotKind = {}));\r\n\tvar ModSlotKind = exports.ModSlotKind;\r\n\texports.GEAR_MOD_SLOT_TYPES = [\r\n\t    new ModSlotType(1, common_1.GearRarity.SUPERIOR, ModSlotKind.FIREARMS),\r\n\t    new ModSlotType(2, common_1.GearRarity.SUPERIOR, ModSlotKind.STAMINA),\r\n\t    new ModSlotType(3, common_1.GearRarity.SUPERIOR, ModSlotKind.ELECTRONICS),\r\n\t    new ModSlotType(4, common_1.GearRarity.SUPERIOR, ModSlotKind.PERFORMANCE),\r\n\t    new ModSlotType(5, common_1.GearRarity.HIGH_END, ModSlotKind.FIREARMS),\r\n\t    new ModSlotType(6, common_1.GearRarity.HIGH_END, ModSlotKind.STAMINA),\r\n\t    new ModSlotType(7, common_1.GearRarity.HIGH_END, ModSlotKind.ELECTRONICS),\r\n\t    new ModSlotType(8, common_1.GearRarity.HIGH_END, ModSlotKind.PERFORMANCE)\r\n\t];\r\n\texports.WEAPON_MOD_SLOT_TYPES = [\r\n\t    new ModSlotType(1, common_1.GearRarity.SUPERIOR, ModSlotKind.MUZZLE),\r\n\t    new ModSlotType(2, common_1.GearRarity.SUPERIOR, ModSlotKind.UNDERBARREL),\r\n\t    new ModSlotType(3, common_1.GearRarity.SUPERIOR, ModSlotKind.OPTICS),\r\n\t    new ModSlotType(4, common_1.GearRarity.SUPERIOR, ModSlotKind.MAGAZINE),\r\n\t    new ModSlotType(5, common_1.GearRarity.HIGH_END, ModSlotKind.MUZZLE),\r\n\t    new ModSlotType(6, common_1.GearRarity.HIGH_END, ModSlotKind.UNDERBARREL),\r\n\t    new ModSlotType(7, common_1.GearRarity.HIGH_END, ModSlotKind.OPTICS),\r\n\t    new ModSlotType(8, common_1.GearRarity.HIGH_END, ModSlotKind.MAGAZINE)\r\n\t];\r\n\n\n/***/ },\n\n/***/ 536:\n/***/ function(module, exports) {\n\n\tmodule.exports = \":host input{font-size:1.2em !important;color:#fff !important;float:none}.icon{background-size:contain;float:left;height:64px;width:64px}.icon.firearms{background-image:url(\\\"app/assets/images/icon-stat-firearms.png\\\")}.icon.stamina{background-image:url(\\\"app/assets/images/icon-stat-stamina.png\\\")}.icon.electronics{background-image:url(\\\"app/assets/images/icon-stat-electronics.png\\\")}.single-stat-block{background-color:rgba(255,255,255,0.1);box-shadow:1px 1px 4px 0 rgba(50,50,50,0.75);font-weight:700;text-align:center}.single-stat-block.inactive{background-color:rgba(0,0,0,0.2);opacity:0.1}.single-stat-block .icon{float:none;height:48px;margin:0 auto;width:48px}.single-stat-value-wrapper{font-size:1.2em}\\n\"\n\n/***/ },\n\n/***/ 537:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".stats-wrapper{display:flex;justify-content:space-between;overflow:visible;padding:1px}single-stat-display{width:calc(33.33333% - 3px)}\\n\"\n\n/***/ },\n\n/***/ 511:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/2/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar common_2 = __webpack_require__(35);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar SingleStatDisplay = (function () {\r\n\t    function SingleStatDisplay() {\r\n\t        this.change = new core_1.EventEmitter();\r\n\t    }\r\n\t    SingleStatDisplay.prototype.onStatValueChanged = function (value) {\r\n\t        this.value = value;\r\n\t        this.change.emit({\r\n\t            type: this.type,\r\n\t            value: this.value\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], SingleStatDisplay.prototype, \"type\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], SingleStatDisplay.prototype, \"value\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], SingleStatDisplay.prototype, \"change\", void 0);\r\n\t    SingleStatDisplay = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'single-stat-display',\r\n\t            templateUrl: 'app/components/stats-display/single-stat-display.html',\r\n\t            directives: [common_2.NgClass, auto_resize_input_component_1.AutoResizeInputComponent],\r\n\t            styles: [__webpack_require__(536)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], SingleStatDisplay);\r\n\t    return SingleStatDisplay;\r\n\t}());\r\n\texports.SingleStatDisplay = SingleStatDisplay;\r\n\tvar StatsDisplay = (function () {\r\n\t    function StatsDisplay() {\r\n\t    }\r\n\t    StatsDisplay.prototype.stat = function (name) {\r\n\t        return !this.stats ? 0 : this.stats[name];\r\n\t    };\r\n\t    StatsDisplay.prototype.onStateValueChanged = function (event) {\r\n\t        this.stats[event.type] = event.value;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', common_1.GearStats)\r\n\t    ], StatsDisplay.prototype, \"stats\", void 0);\r\n\t    StatsDisplay = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'stats-display',\r\n\t            templateUrl: 'app/components/stats-display/stats-display.html',\r\n\t            directives: [SingleStatDisplay],\r\n\t            styles: [__webpack_require__(537)]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], StatsDisplay);\r\n\t    return StatsDisplay;\r\n\t}());\r\n\texports.StatsDisplay = StatsDisplay;\r\n\n\n/***/ },\n\n/***/ 549:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"talent-wrapper\\\" [ngClass]=\\\"{unlocked:talent.unlocked}\\\">\\n\\n  <div class=\\\"talent-title-wrapper\\\">\\n    Talent\\n  </div>\\n  <div class=\\\"talent-title-separator\\\">|</div>\\n  <div class=\\\"talent-title-name\\\">\\n    <label editor>{{talent.id|ucfirst}}</label>\\n    <div editor=\\\"true\\\">\\n      <select [(ngModel)]=\\\"talent.id\\\" (ngModelChange)=\\\"onTalentChanged($event)\\\">\\n        <option *ngFor=\\\"let choice of choices\\\" [value]=\\\"choice.id\\\">{{choice.id|ucfirst}}</option>\\n      </select>\\n    </div>\\n    <div editor=\\\"true\\\" class=\\\"talent-unlocked\\\">\\n      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"talent.unlocked\\\" (ngModelChange)=\\\"onTalentUnlockedChanged($event)\\\"/>\\n      Unlocked\\n    </div>\\n  </div>\\n  <div class=\\\"talent-description-text\\\">\\n    <div #description></div>\\n\\n  </div>\\n  <div class=\\\"talent-image\\\" *ngIf=\\\"hasImage\\\">\\n    <img [src]=\\\"talentImage\\\"/>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 538:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}.talent-wrapper{background-color:rgba(255,255,255,0.1);margin-bottom:10px;overflow:auto;padding:10px 15px}.talent-wrapper .talent-image,.talent-wrapper .talent-description-text,.talent-wrapper select{opacity:0.5}.talent-wrapper.unlocked .talent-image,.talent-wrapper.unlocked .talent-description-text,.talent-wrapper.unlocked select{opacity:1}.talent-unlocked{font-size:12px;position:absolute;right:19px}.talent-unlocked input{float:left;display:inline-block}.talent-title-wrapper{float:left;font-weight:600}.talent-title-separator{color:#8e8e8e;float:left;padding:0 8px}.talent-title-name-wrapper{float:left}.talent-title-name div,.talent-title-name label{display:inline-block;width:75px}.talent-description-text{padding-bottom:10px}.talent-description-text div{display:inline-block}.talent-image img{width:64px;margin:0 auto;display:block}\\n\"\n\n/***/ },\n\n/***/ 550:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"talents-wrapper\\\">\\n  <talent *ngFor=\\\"let talent of talents\\\" [choices]=\\\"choices\\\" [talent]=\\\"talent\\\" [has-image]=\\\"hasImage\\\"></talent>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 512:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 4/26/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar ucfirst_pipe_1 = __webpack_require__(353);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar editor_1 = __webpack_require__(84);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar converters_1 = __webpack_require__(115);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar TEMPLATE_INPUT_PERCENT_MARKER = 'x%';\r\n\tvar TEMPLATE_INPUT_NUMBER_MARKER = '#';\r\n\tvar TEMPLATE_INPUT_MARKER_REXP = new RegExp(\"(\" + TEMPLATE_INPUT_PERCENT_MARKER + \"|\" + TEMPLATE_INPUT_NUMBER_MARKER + \")\");\r\n\tvar INPUT_FORMAT_MARKER = '%format%';\r\n\tvar TALENT_INPUT_FORMAT = (function () {\r\n\t    var o = {};\r\n\t    o[TEMPLATE_INPUT_PERCENT_MARKER] = common_1.ValueFormat.PERCENT;\r\n\t    o[TEMPLATE_INPUT_NUMBER_MARKER] = common_1.ValueFormat.NUMBER;\r\n\t    return o;\r\n\t})();\r\n\tvar TALENT_INPUT_TEMPLATE = \" <auto-resize-input [length]='2' \\n                            inputType='number' [format]='%format%'\\n                            (input)=\\\"onTalentValueChanged($event)\\\"\\n                           [(ngModel)]='talent.value'\\n        ></auto-resize-input>\";\r\n\tvar TalentComponent = (function () {\r\n\t    function TalentComponent(_loader, _elementRef, _itemsService) {\r\n\t        this._loader = _loader;\r\n\t        this._elementRef = _elementRef;\r\n\t        this._itemsService = _itemsService;\r\n\t    }\r\n\t    TalentComponent.toComponent = function (template, talent) {\r\n\t        var directives = [auto_resize_input_component_1.AutoResizeInputComponent];\r\n\t        var TalentTemplateComponent = (function () {\r\n\t            function TalentTemplateComponent() {\r\n\t                this.talent = talent;\r\n\t            }\r\n\t            TalentTemplateComponent.prototype.onTalentValueChanged = function (value) {\r\n\t                this.talent.value = value;\r\n\t            };\r\n\t            TalentTemplateComponent = __decorate([\r\n\t                core_1.Component({\r\n\t                    selector: 'talent-template',\r\n\t                    template: template,\r\n\t                    styles: [\r\n\t                        \":host auto-resize-input{\\n        display:inline-block;\\n        }\\n        :host label{\\n          margin-right:0px;\\n        }\\n        :host input{\\n        color:#fff;\\n        font-weight: normal;\\n        }\"\r\n\t                    ],\r\n\t                    directives: directives\r\n\t                }), \r\n\t                __metadata('design:paramtypes', [])\r\n\t            ], TalentTemplateComponent);\r\n\t            return TalentTemplateComponent;\r\n\t        }());\r\n\t        return TalentTemplateComponent;\r\n\t    };\r\n\t    TalentComponent.prototype.ngOnInit = function () {\r\n\t        // ensure that there is a value for the talent even if its 0\r\n\t        if (!this.talent.value)\r\n\t            this.talent.value = 0;\r\n\t        if (!this.talent.id) {\r\n\t            this.talent.id = this.choices[0].id;\r\n\t        }\r\n\t    };\r\n\t    TalentComponent.prototype.ngAfterViewInit = function () {\r\n\t        this.renderDescription(this.talent.id);\r\n\t    };\r\n\t    /**\r\n\t     * This method was created to add the ability of dynamicallyy generating the correct\r\n\t     * template for the talent description. Angular2 doesn't allow passing a function to say\r\n\t     *  Component.template so the use of  DynamicComponentLoader is needed.\r\n\t     *  Also using a ngFor with children set to display based off an ngIf statement will cause\r\n\t     *  elements to not float correct due to angular having to wrap each directive in a shadow\r\n\t     *  div/template. Using DynamicComponentLoader allows us to inline our input component\r\n\t     *  right with text and display it as if it was one string of text\r\n\t     *\r\n\t     *  for 2.0.0-beta.16+ refer to this commit :\r\n\t     *  https://github.com/angular/angular/commit/efbd446d18e6e0380beafcad6e94a7751d788623\r\n\t     * @param id\r\n\t     */\r\n\t    TalentComponent.prototype.renderDescription = function (id) {\r\n\t        var _this = this;\r\n\t        if (this._previousTalentId === id)\r\n\t            return;\r\n\t        this._previousTalentId = id;\r\n\t        if (this._componentRef)\r\n\t            this._componentRef.destroy();\r\n\t        var text = _.find(this.choices, { id: id }).template;\r\n\t        var template = text.split(TEMPLATE_INPUT_MARKER_REXP)\r\n\t            .map(function (part) {\r\n\t            if (!part)\r\n\t                return '';\r\n\t            var matches = part.match(TEMPLATE_INPUT_MARKER_REXP);\r\n\t            var format = matches ? TALENT_INPUT_FORMAT[matches.pop()] : false;\r\n\t            return format ? TALENT_INPUT_TEMPLATE.replace(INPUT_FORMAT_MARKER, format) : part;\r\n\t        }).join('');\r\n\t        this._loader.loadNextToLocation(TalentComponent.toComponent(template, this.talent), this._descriptionContainerRef).then(function (ref) { return _this._componentRef = ref; });\r\n\t    };\r\n\t    TalentComponent.prototype.onTalentChanged = function (id) {\r\n\t        this.renderDescription(id);\r\n\t    };\r\n\t    TalentComponent.prototype.onTalentUnlockedChanged = function (unlocked) {\r\n\t        this.talent.unlocked = unlocked;\r\n\t    };\r\n\t    Object.defineProperty(TalentComponent.prototype, \"talentImage\", {\r\n\t        get: function () {\r\n\t            return this._itemsService\r\n\t                .talentImageResolve(this.talent.id).primary;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], TalentComponent.prototype, \"talent\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], TalentComponent.prototype, \"choices\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('has-image'),\r\n\t        converters_1.InputConverter(converters_1.BooleanConverter), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], TalentComponent.prototype, \"hasImage\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('description', { read: core_1.ViewContainerRef }), \r\n\t        __metadata('design:type', core_1.ViewContainerRef)\r\n\t    ], TalentComponent.prototype, \"_descriptionContainerRef\", void 0);\r\n\t    TalentComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'talent',\r\n\t            styles: [__webpack_require__(538)],\r\n\t            template: __webpack_require__(549),\r\n\t            pipes: [ucfirst_pipe_1.UcFirstPipe],\r\n\t            directives: [editor_1.EditorDirective, auto_resize_input_component_1.AutoResizeInputComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.DynamicComponentLoader, core_1.ElementRef, item_service_1.ItemsService])\r\n\t    ], TalentComponent);\r\n\t    return TalentComponent;\r\n\t}());\r\n\texports.TalentComponent = TalentComponent;\r\n\tvar TalentsComponent = (function () {\r\n\t    function TalentsComponent() {\r\n\t    }\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], TalentsComponent.prototype, \"talents\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], TalentsComponent.prototype, \"choices\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('has-image'),\r\n\t        converters_1.InputConverter(converters_1.BooleanConverter), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], TalentsComponent.prototype, \"hasImage\", void 0);\r\n\t    TalentsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'talents',\r\n\t            styles: [\" \\n  .talents-wrapper {\\n    padding: 1px;\\n  }\\n\"],\r\n\t            template: __webpack_require__(550),\r\n\t            directives: [TalentComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], TalentsComponent);\r\n\t    return TalentsComponent;\r\n\t}());\r\n\texports.TalentsComponent = TalentsComponent;\r\n\n\n/***/ },\n\n/***/ 551:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"weapon-stats-wrapper\\\">\\n  <div class=\\\"stats-wrapper\\\">\\n    DMG\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      <auto-resize-input\\n        resize-increment=\\\"20\\\"\\n        prepend=\\\"\\\"\\n        format=\\\"weapon\\\"\\n        [(ngModel)]=\\\"damage\\\"\\n        (input)=\\\"onWeaponStatsChanged('damage',$event)\\\"></auto-resize-input>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"stats-wrapper\\\">\\n    RPM\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      {{rpm}}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"stats-wrapper\\\">\\n    MAG\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      {{magazine}}\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 539:\n/***/ function(module, exports) {\n\n\tmodule.exports = \".weapon-stats-wrapper{display:flex;justify-content:space-between}.stat-wrapper{font-weight:600}\\n\"\n\n/***/ },\n\n/***/ 513:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar auto_resize_input_component_1 = __webpack_require__(100);\r\n\tvar editor_service_1 = __webpack_require__(118);\r\n\tvar build_stats_service_1 = __webpack_require__(117);\r\n\tvar WeaponStatsComponent = (function () {\r\n\t    function WeaponStatsComponent(_editorService, _buildStatsService) {\r\n\t        this._editorService = _editorService;\r\n\t        this._buildStatsService = _buildStatsService;\r\n\t    }\r\n\t    WeaponStatsComponent.prototype.ngOnInit = function () {\r\n\t        this._calc = this._buildStatsService\r\n\t            .createForWeapon(this.weapon);\r\n\t    };\r\n\t    Object.defineProperty(WeaponStatsComponent.prototype, \"_editing\", {\r\n\t        get: function () {\r\n\t            return this._editorService.state;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsComponent.prototype, \"damage\", {\r\n\t        get: function () {\r\n\t            return this._editing ? this.weapon.stats.damage\r\n\t                : this._calc.damage;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsComponent.prototype, \"rpm\", {\r\n\t        get: function () {\r\n\t            return this._calc.rpm;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsComponent.prototype, \"magazine\", {\r\n\t        get: function () {\r\n\t            return this._calc.magazineSize;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], WeaponStatsComponent.prototype, \"weapon\", void 0);\r\n\t    WeaponStatsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'weapon-stats',\r\n\t            styles: [__webpack_require__(539)],\r\n\t            template: __webpack_require__(551),\r\n\t            directives: [auto_resize_input_component_1.AutoResizeInputComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [editor_service_1.EditorService, build_stats_service_1.BuildStatsService])\r\n\t    ], WeaponStatsComponent);\r\n\t    return WeaponStatsComponent;\r\n\t}());\r\n\texports.WeaponStatsComponent = WeaponStatsComponent;\r\n\n\n/***/ },\n\n/***/ 84:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/7/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar editor_service_1 = __webpack_require__(118);\r\n\tvar converters_1 = __webpack_require__(115);\r\n\tvar EditorDirective = (function () {\r\n\t    function EditorDirective(_elementRef, _editorService, _renderer) {\r\n\t        this._elementRef = _elementRef;\r\n\t        this._editorService = _editorService;\r\n\t        this._renderer = _renderer;\r\n\t        this.isEditorComponent = false;\r\n\t    }\r\n\t    EditorDirective.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this._subscription = this._editorService\r\n\t            .subscribe(function (value) { return _this._onEditorStateChanged(value); });\r\n\t    };\r\n\t    EditorDirective.prototype.ngOnDestroy = function () {\r\n\t        this._subscription.unsubscribe();\r\n\t    };\r\n\t    EditorDirective.prototype._onEditorStateChanged = function (inEditMode) {\r\n\t        var showElement = ((inEditMode && this.isEditorComponent)\r\n\t            || (!inEditMode && !this.isEditorComponent));\r\n\t        this._renderer.setElementClass(this._elementRef.nativeElement, 'hidden', !showElement);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input('editor'),\r\n\t        converters_1.InputConverter(converters_1.BooleanConverter), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], EditorDirective.prototype, \"isEditorComponent\", void 0);\r\n\t    EditorDirective = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: '[editor]'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ElementRef, editor_service_1.EditorService, core_1.Renderer])\r\n\t    ], EditorDirective);\r\n\t    return EditorDirective;\r\n\t}());\r\n\texports.EditorDirective = EditorDirective;\r\n\n\n/***/ },\n\n/***/ 514:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\tvar core_1 = __webpack_require__(515);\r\n\tvar inventory_component_1 = __webpack_require__(357);\r\n\tvar item_overview_component_ts_1 = __webpack_require__(359);\r\n\t__export(__webpack_require__(497));\r\n\texports.APP_DIRECTIVES = [\r\n\t    inventory_component_1.InventoryComponent, item_overview_component_ts_1.ItemOverviewComponent\r\n\t];\r\n\texports.APP_PROVIDERS = core_1.DIVISION_PROVIDERS.slice();\r\n\n\n/***/ },\n\n/***/ 552:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<base href=\\\"/\\\">\\n<main *ngIf=\\\"loaded\\\">\\n  <build-stats-banner></build-stats-banner>\\n  <router-outlet></router-outlet>\\n</main>\\n\\n\\n\\n\\n<footer>\\n  © 2016\\n  <div>Font made from <a href=\\\"http://www.onlinewebfonts.com\\\">www.onlinewebfonts.com</a> is licensed by CC BY 3.0</div>\\n</footer>\\n\"\n\n/***/ },\n\n/***/ 150:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar http_1 = __webpack_require__(80);\r\n\t__webpack_require__(366);\r\n\t__webpack_require__(367);\r\n\tvar Rx_1 = __webpack_require__(85);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar AttributesService = (function () {\r\n\t    function AttributesService(_http) {\r\n\t        // this._bodyArmor = new AttributeStore(ItemType.BodyArmor, this._http);\r\n\t        this._http = _http;\r\n\t        this._gearAttributes = new Rx_1.BehaviorSubject([]);\r\n\t        this._weaponAttributes = new Rx_1.BehaviorSubject([]);\r\n\t    }\r\n\t    AttributesService.defaultFilterProvider = function (gearType, attributeType) {\r\n\t        return { type: attributeType, supports: [gearType] };\r\n\t    };\r\n\t    AttributesService.skillFilterProvider = function (gearType) {\r\n\t        return { type: common_1.AttributeType.SKILL, skill: true, supports: [gearType] };\r\n\t    };\r\n\t    AttributesService.prototype.init = function () {\r\n\t        this._loadGearAttributes();\r\n\t        this._loadWeaponAttributes();\r\n\t    };\r\n\t    AttributesService.prototype._loadWeaponAttributes = function () {\r\n\t        var _this = this;\r\n\t        var basePath = 'app/assets/json/weapon-attributes.json';\r\n\t        this._http.get(basePath)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .subscribe(function (attributes) { return _this._weaponAttributes.next(attributes); }, function (err) { return console.error(err); }, function () { return console.log('Finished loading attributes'); });\r\n\t    };\r\n\t    AttributesService.prototype._loadGearAttributes = function () {\r\n\t        var _this = this;\r\n\t        var basePath = 'app/assets/json/gear-attributes.json';\r\n\t        this._http.get(basePath)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .subscribe(function (attributes) { return _this._gearAttributes.next(attributes); }, function (err) { return console.error(err); }, function () { return console.log('Finished loading attributes'); });\r\n\t    };\r\n\t    Object.defineProperty(AttributesService.prototype, \"weaponAttributes\", {\r\n\t        get: function () {\r\n\t            return utils_1.asObservable(this._weaponAttributes, true);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(AttributesService.prototype, \"gearAttributes\", {\r\n\t        get: function () {\r\n\t            return utils_1.asObservable(this._gearAttributes.first(function (attrs, idx, obs) { return !!attrs.length; }));\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    AttributesService.prototype.getFor = function (itemType, attributeType) {\r\n\t        return item_service_1.isWeaponType(itemType)\r\n\t            ? this._weaponAttributesFor(itemType, attributeType)\r\n\t            : this._gearAttributesFor(itemType, attributeType);\r\n\t    };\r\n\t    AttributesService.prototype._weaponAttributesFor = function (itemType, attributeType) {\r\n\t        return this.weaponAttributes;\r\n\t    };\r\n\t    AttributesService.prototype._gearAttributesFor = function (itemType, attributeType) {\r\n\t        var providerName = attributeType + 'FilterProvider';\r\n\t        var filterProvider = AttributesService[providerName]\r\n\t            ? AttributesService[providerName] : AttributesService.defaultFilterProvider;\r\n\t        return utils_1.asObservable(this._gearAttributes.map(function (attrs) {\r\n\t            return _.filter(attrs, filterProvider(itemType, attributeType));\r\n\t        }));\r\n\t    };\r\n\t    AttributesService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], AttributesService);\r\n\t    return AttributesService;\r\n\t}());\r\n\texports.AttributesService = AttributesService;\r\n\n\n/***/ },\n\n/***/ 116:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar index_1 = __webpack_require__(229);\r\n\tvar strategy_1 = __webpack_require__(517);\r\n\tvar AuthStrategies = (function () {\r\n\t    function AuthStrategies() {\r\n\t    }\r\n\t    return AuthStrategies;\r\n\t}());\r\n\t// tslint:disable-next-line\r\n\texports.AuthType = {\r\n\t    PSN: 'psn'\r\n\t};\r\n\tvar AuthService = (function () {\r\n\t    function AuthService(_strategies) {\r\n\t        this._strategies = _strategies;\r\n\t    }\r\n\t    AuthService.prototype.authFor = function (authType) {\r\n\t        return this._strategies[authType];\r\n\t    };\r\n\t    AuthService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [AuthStrategies])\r\n\t    ], AuthService);\r\n\t    return AuthService;\r\n\t}());\r\n\texports.AuthService = AuthService;\r\n\texports.AUTH_PROVIDERS = strategy_1.LOGIN_STRATEGY_PROVIDERS.concat([\r\n\t    core_1.provide(AuthStrategies, {\r\n\t        useFactory: function (psn) {\r\n\t            var strategies = new AuthStrategies();\r\n\t            strategies[exports.AuthType.PSN] = psn;\r\n\t            return strategies;\r\n\t        },\r\n\t        deps: [index_1.PSNIdentityStrategy]\r\n\t    }),\r\n\t    AuthService\r\n\t]);\r\n\n\n/***/ },\n\n/***/ 360:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar Subject_1 = __webpack_require__(17);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\t/**\r\n\t * Created by Keyston on 5/7/2016.\r\n\t */\r\n\tvar BootstrapService = (function () {\r\n\t    function BootstrapService(_itemsService, _inventoryService) {\r\n\t        this._itemsService = _itemsService;\r\n\t        this._inventoryService = _inventoryService;\r\n\t    }\r\n\t    BootstrapService.prototype.boot = function () {\r\n\t        var _this = this;\r\n\t        this._itemsService.init();\r\n\t        var subject = new Subject_1.Subject();\r\n\t        var toLoad = 0;\r\n\t        _.forEach(common_1.ItemType, function (itemType, key) {\r\n\t            var isWeapon = item_service_1.isWeaponType(itemType);\r\n\t            if (isWeapon && itemType !== common_1.ItemType.AR)\r\n\t                return;\r\n\t            toLoad++;\r\n\t            _this._itemsService\r\n\t                .getDescriptorFor(itemType)\r\n\t                .subscribe(function (descriptor) {\r\n\t                var first = descriptor.items[common_1.GearRarity.SUPERIOR][0];\r\n\t                var empty = isWeapon\r\n\t                    ? _this._weaponDefaultState(descriptor.talents, itemType, first.name)\r\n\t                    : _this._gearDefaultState(itemType, first.name);\r\n\t                if (isWeapon) {\r\n\t                    _this._inventoryService.updateWeapon('primary', empty);\r\n\t                    _this._inventoryService.updateWeapon('secondary', _.cloneDeep(empty));\r\n\t                }\r\n\t                else {\r\n\t                    _this._inventoryService.update(itemType, empty);\r\n\t                }\r\n\t                toLoad--;\r\n\t                if (!toLoad) {\r\n\t                    subject.next(_this._inventoryService);\r\n\t                }\r\n\t            });\r\n\t        });\r\n\t        return utils_1.asObservable(subject);\r\n\t    };\r\n\t    BootstrapService.prototype._weaponDefaultState = function (talents, itemType, name) {\r\n\t        var _talents = _.chain(talents).take(2).map(function (talent) {\r\n\t            return { id: talent.id };\r\n\t        }).value();\r\n\t        return {\r\n\t            rarity: common_1.GearRarity.SUPERIOR,\r\n\t            type: itemType,\r\n\t            name: name,\r\n\t            score: 131,\r\n\t            stats: {\r\n\t                damage: 13500\r\n\t            },\r\n\t            mods: [],\r\n\t            talents: _talents\r\n\t        };\r\n\t    };\r\n\t    BootstrapService.prototype._gearDefaultState = function (itemType, name) {\r\n\t        var gear = {\r\n\t            rarity: common_1.GearRarity.SUPERIOR,\r\n\t            type: itemType,\r\n\t            name: name,\r\n\t            score: 131,\r\n\t            stats: {\r\n\t                firearms: 0,\r\n\t                stamina: 0,\r\n\t                electronics: 0\r\n\t            },\r\n\t            armor: 100,\r\n\t            attributes: {\r\n\t                major: [],\r\n\t                minor: [],\r\n\t                skill: []\r\n\t            },\r\n\t            mods: [],\r\n\t            talents: []\r\n\t        };\r\n\t        var keys = ['firearms', 'stamina', 'electronics'];\r\n\t        var key = keys[_.random(0, keys.length - 1)];\r\n\t        gear.stats[key] = _.random(450, 650);\r\n\t        return gear;\r\n\t    };\r\n\t    BootstrapService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [item_service_1.ItemsService, inventory_service_1.InventoryService])\r\n\t    ], BootstrapService);\r\n\t    return BootstrapService;\r\n\t}());\r\n\texports.BootstrapService = BootstrapService;\r\n\n\n/***/ },\n\n/***/ 117:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 5/7/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar BuildStatsService = (function () {\r\n\t    function BuildStatsService(_itemsService, _inventoryService) {\r\n\t        this._itemsService = _itemsService;\r\n\t        this._inventoryService = _inventoryService;\r\n\t    }\r\n\t    BuildStatsService.prototype.create = function (inventory, primary, secondary) {\r\n\t        var gearDescriptors = this._itemsService._gearDescriptors;\r\n\t        var weaponDescriptors = this._itemsService._weaponDescriptors;\r\n\t        inventory = inventory ? inventory : this._inventoryService.inventory;\r\n\t        primary = primary || inventory.weapons.primary;\r\n\t        secondary = secondary || inventory.weapons.secondary;\r\n\t        return new InventoryCalculator(inventory, weaponDescriptors, gearDescriptors, primary, secondary);\r\n\t    };\r\n\t    BuildStatsService.prototype.createForWeapon = function (weapon, inventory) {\r\n\t        return this.create(inventory, weapon).primary;\r\n\t    };\r\n\t    BuildStatsService = __decorate([\r\n\t        core_1.Injectable(),\r\n\t        __param(1, core_1.Inject(core_1.forwardRef(function () { return inventory_service_1.InventoryService; }))), \r\n\t        __metadata('design:paramtypes', [item_service_1.ItemsService, inventory_service_1.InventoryService])\r\n\t    ], BuildStatsService);\r\n\t    return BuildStatsService;\r\n\t}());\r\n\texports.BuildStatsService = BuildStatsService;\r\n\tvar InventoryCalculator = (function () {\r\n\t    function InventoryCalculator(_inventory, weaponDescriptors, _gearDescriptors, _primaryWeapon, _secondaryWeapon) {\r\n\t        this._inventory = _inventory;\r\n\t        this._gearDescriptors = _gearDescriptors;\r\n\t        this._primaryWeapon = _primaryWeapon;\r\n\t        this._secondaryWeapon = _secondaryWeapon;\r\n\t        this._primary = new WeaponStatsCalculator(_primaryWeapon, weaponDescriptors, this);\r\n\t        this._secondary = new WeaponStatsCalculator(_secondaryWeapon, weaponDescriptors, this);\r\n\t    }\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"primary\", {\r\n\t        get: function () {\r\n\t            return this._primary;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"secondary\", {\r\n\t        get: function () {\r\n\t            return this._secondary;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"skillpower\", {\r\n\t        get: function () {\r\n\t            var fromElectronics = (this.electronics * 10);\r\n\t            var fromMods = this.calculateAffectsValueFromMods(common_1.Affects.SKILL_POWER);\r\n\t            var fromAttributes = this.calculateAffectsValueFromAttributes(common_1.Affects.SKILL_POWER);\r\n\t            return fromElectronics + fromMods + fromAttributes;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"firearms\", {\r\n\t        get: function () {\r\n\t            var base = this._reduce(function (sum, gear) { return sum + gear.stats.firearms; });\r\n\t            var fireArmsFromMods = this.calculateAffectsValueFromMods(common_1.Affects.FIREARMS);\r\n\t            return base + fireArmsFromMods;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"stamina\", {\r\n\t        get: function () {\r\n\t            var base = this._reduce(function (sum, gear) { return sum + gear.stats.stamina; });\r\n\t            var fromMods = this.calculateAffectsValueFromMods(common_1.Affects.STAMINA);\r\n\t            return base + fromMods;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryCalculator.prototype.staminaFor = function (gear) {\r\n\t        var base = gear.stats.stamina;\r\n\t        var fromMods = this.calculateAffectsValueFromMods(common_1.Affects.STAMINA, gear);\r\n\t        return base + fromMods;\r\n\t    };\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"electronics\", {\r\n\t        get: function () {\r\n\t            var base = 535; // base at lvl 30\r\n\t            var fromGear = this._reduce(function (sum, gear) { return sum + gear.stats.electronics; });\r\n\t            var fromMods = this.calculateAffectsValueFromMods(common_1.Affects.ELECTRONICS);\r\n\t            return base + fromGear + fromMods;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(InventoryCalculator.prototype, \"health\", {\r\n\t        get: function () {\r\n\t            // http://divisionfieldguide.com/post/2016/03/which-is-better-armor-versus-health/\r\n\t            var base = this.stamina * 30;\r\n\t            var fromMods = this.calculateAffectsValueFromMods(common_1.Affects.HEALTH);\r\n\t            var fromAttributes = this.calculateAffectsValueFromAttributes(common_1.Affects.HEALTH);\r\n\t            return base + fromMods + fromAttributes;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryCalculator.prototype.weaponDamage = function (itemType) {\r\n\t        var affects = common_1.Affects.normalize(itemType + '_damage');\r\n\t        return this.calculateAffectsValueFromAttributes(affects);\r\n\t    };\r\n\t    InventoryCalculator.prototype.calculateTotalAffectsValue = function (affects) {\r\n\t        var talentAffects = this.calculateAffectsValueFromTalents(affects);\r\n\t        var modsAffects = this.calculateAffectsValueFromMods(affects);\r\n\t        var attributesAffects = this.calculateAffectsValueFromAttributes(affects);\r\n\t        return talentAffects + modsAffects + attributesAffects;\r\n\t    };\r\n\t    InventoryCalculator.prototype.descriptorForType = function (itemType) {\r\n\t        return this._gearDescriptors.forType(itemType);\r\n\t    };\r\n\t    InventoryCalculator.prototype.calculateAffectsValueFromTalents = function (affects) {\r\n\t        var _this = this;\r\n\t        return this._reduce(function (sum, gear) {\r\n\t            if (!gear.talents.length)\r\n\t                return sum;\r\n\t            // resolve descriptor to get correct talents\r\n\t            var descriptor = _this.descriptorForType(gear.type);\r\n\t            // filter out only the talents that can affect this value\r\n\t            // and return only the ids for quick checking\r\n\t            var talentsThatAffects = _.filter(descriptor.talents, { affects: [affects] }).map(function (talent) { return talent.id; });\r\n\t            // no talents found that can affect this so return zero\r\n\t            if (!talentsThatAffects.length)\r\n\t                return sum;\r\n\t            // gear only has one talent\r\n\t            var talent = gear.talents[0];\r\n\t            return sum + (_.includes(talentsThatAffects, talent.id) ? talent.value : 0);\r\n\t        });\r\n\t    };\r\n\t    InventoryCalculator.prototype._attributesThatAffects = function (affects) {\r\n\t        return _.filter(this._gearDescriptors.attributes, { affects: [affects] }).map(function (attr) { return attr.id; });\r\n\t    };\r\n\t    InventoryCalculator.prototype.calculateAffectsValueFromMods = function (affects, limitToGear) {\r\n\t        var attributesThatAffects = this._attributesThatAffects(affects);\r\n\t        if (!attributesThatAffects.length)\r\n\t            return 0;\r\n\t        return this._reduce(function (sum, gear) {\r\n\t            var mods = gear.mods;\r\n\t            return sum + _.reduce(mods, function (total, mod) {\r\n\t                var primary = mod.primary && _.includes(attributesThatAffects, mod.primary.id)\r\n\t                    ? mod.primary.value\r\n\t                    : 0;\r\n\t                var secondary = mod.secondary && _.includes(attributesThatAffects, mod.secondary.id)\r\n\t                    ? mod.secondary.value\r\n\t                    : 0;\r\n\t                return total + primary + secondary;\r\n\t            }, 0);\r\n\t        }, limitToGear);\r\n\t    };\r\n\t    InventoryCalculator.prototype.calculateAffectsValueFromAttributes = function (affects) {\r\n\t        var attributesThatAffects = this._attributesThatAffects(affects);\r\n\t        if (!attributesThatAffects.length)\r\n\t            return 0;\r\n\t        return this._reduce(function (sum, gear) {\r\n\t            var attributes = _.flatten(_.values(gear.attributes));\r\n\t            return sum + _.reduce(attributes, function (total, attr) {\r\n\t                return total + (_.includes(attributesThatAffects, attr.id) ? +attr.value : 0);\r\n\t            }, 0);\r\n\t        });\r\n\t    };\r\n\t    InventoryCalculator.prototype._reduce = function (fn, limitToGear) {\r\n\t        var all = limitToGear ? [limitToGear] : _.values(this._inventory.gear);\r\n\t        return _.reduce(all, function (sum, gear) {\r\n\t            return gear ? fn(sum, gear) : sum;\r\n\t        }, 0);\r\n\t    };\r\n\t    InventoryCalculator.prototype.caculateDps = function (weapon) {\r\n\t        var calc = weapon === this._secondaryWeapon\r\n\t            ? this._secondary : this._primary;\r\n\t        return calc.dps;\r\n\t    };\r\n\t    return InventoryCalculator;\r\n\t}());\r\n\texports.InventoryCalculator = InventoryCalculator;\r\n\tvar WeaponStatsCalculator = (function () {\r\n\t    function WeaponStatsCalculator(_weapon, _weaponDescriptors, _inventoryCalc) {\r\n\t        this._weapon = _weapon;\r\n\t        this._weaponDescriptors = _weaponDescriptors;\r\n\t        this._inventoryCalc = _inventoryCalc;\r\n\t    }\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"dps\", {\r\n\t        get: function () {\r\n\t            // https://docs.google.com/spreadsheets/d/1lOh5fD3l1xhh1NE8HG0iQfY-d2Q_3-Yi9euvx_MH4Lg/edit#gid=522138074\r\n\t            var rpm = this.rpm;\r\n\t            var reloadSpeed = this.reloadSpeed; // C18\r\n\t            var magazineSize = this.magazineSize; // C19\r\n\t            var damagePerBullet = this.damage; // C12\r\n\t            var accuracy = this.accuracy / 100; // C13\r\n\t            var critChanceFromGear = this._inventoryCalc\r\n\t                .calculateTotalAffectsValue(common_1.Affects.CRIT_HIT_CHANCE);\r\n\t            var critChanceFromWeaponMods = this\r\n\t                .calculateAffectsValueFromMods(common_1.Affects.CRIT_HIT_CHANCE);\r\n\t            var critChanceFromWeaponTalents = this\r\n\t                .calculateAffectsFromWeaponTalents(common_1.Affects.CRIT_HIT_CHANCE);\r\n\t            var inheritedWeaponCritChance = this.calculateAffectsFromWeaponBonus(common_1.Affects.CRIT_HIT_CHANCE);\r\n\t            var critChance = (inheritedWeaponCritChance + critChanceFromGear\r\n\t                + critChanceFromWeaponTalents + critChanceFromWeaponMods)\r\n\t                / 100; // C15\r\n\t            critChance = 0.235;\r\n\t            var critDamageFromGear = this._inventoryCalc\r\n\t                .calculateTotalAffectsValue(common_1.Affects.CRIT_HIT_DAMAGE);\r\n\t            var critDamageFromWeaponMods = this.calculateAffectsValueFromMods(common_1.Affects.CRIT_HIT_DAMAGE);\r\n\t            var critDamageFromWeaponTalents = this\r\n\t                .calculateAffectsFromWeaponTalents(common_1.Affects.CRIT_HIT_DAMAGE);\r\n\t            var critDamage = (critDamageFromGear + critDamageFromWeaponMods\r\n\t                + critDamageFromWeaponTalents) / 100; // C16\r\n\t            var headShotBonus = this\r\n\t                .calculateAffectsValueFromMods(common_1.Affects.ASSAULT_RIFLE_DAMAGE) / 100; // C14\r\n\t            var damagePerHeadShot = damagePerBullet * headShotBonus; // F15\r\n\t            var nonHeadShotBullets = magazineSize * (1 - accuracy); // F20\r\n\t            var headShotBullets = magazineSize * accuracy; // F21\r\n\t            var oneIsNoneExtraBullets = 0; // F22\r\n\t            var adjustedMagSize = magazineSize + oneIsNoneExtraBullets; // F23\r\n\t            var adjustedNonHeadShotBullets = nonHeadShotBullets + (oneIsNoneExtraBullets * (1 - accuracy)); // F24\r\n\t            var adjustedHeadShotBullets = headShotBullets + (oneIsNoneExtraBullets * accuracy); // F25\r\n\t            // Crit\r\n\t            // let critNonHeadShotDamage = damagePerBullet * (1 + critDamage); // F29\r\n\t            // let critHeadShotDamage = damagePerHeadShot + (1 + critDamage); // F30\r\n\t            // let nonHeadShotCritChance = adjustedNonHeadShotBullets * critChance; // F31\r\n\t            // let headShotCritChance = adjustedHeadShotBullets * critChance; // F32\r\n\t            // DPS Breakdown\r\n\t            var totalDamage = (adjustedMagSize * (1 - critChance) * (1 - accuracy)) * damagePerBullet;\r\n\t            var totalHeadShotDamage = (adjustedMagSize * accuracy\r\n\t                - (adjustedMagSize * critChance * accuracy))\r\n\t                * (damagePerBullet * headShotBonus);\r\n\t            var totalCritDamage = (adjustedMagSize * (critChance * (1 - accuracy)))\r\n\t                * (damagePerBullet * (1 + critDamage));\r\n\t            var critHeadShotDamage = (adjustedMagSize * accuracy * critChance)\r\n\t                * (damagePerBullet * headShotBonus * (1 + critDamage));\r\n\t            var cycleTime = adjustedMagSize / (rpm / 60) + reloadSpeed;\r\n\t            var finalDPS = (totalDamage + totalHeadShotDamage + totalCritDamage + critHeadShotDamage)\r\n\t                / cycleTime;\r\n\t            return Math.floor(finalDPS);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"reloadSpeed\", {\r\n\t        get: function () {\r\n\t            var stats = this._weaponBaseStats;\r\n\t            var base = stats.reloadEmpty / 1000;\r\n\t            return (base * (this.calculateAffectsValueFromMods(common_1.Affects.RELOAD) / 100)) + base;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"rpm\", {\r\n\t        get: function () {\r\n\t            var stats = this._weaponBaseStats;\r\n\t            var rpm = (stats.rpm * (this.calculateAffectsValueFromMods(common_1.Affects.RPM) / 100)) + stats.rpm;\r\n\t            return Math.floor(rpm);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"magazineSize\", {\r\n\t        get: function () {\r\n\t            var stats = this._weaponBaseStats;\r\n\t            var magazineSize = (stats.magazine\r\n\t                * (this.calculateAffectsValueFromMods(common_1.Affects.MAGAZINE_SIZE) / 100)) + stats.magazine;\r\n\t            return Math.floor(magazineSize);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"weaponDescriptor\", {\r\n\t        get: function () {\r\n\t            return this._weaponDescriptors.forType(this._weapon.type);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    WeaponStatsCalculator.prototype.weaponInfo = function (descriptor) {\r\n\t        var items = _.merge.apply(_, [[]].concat(_.values(descriptor\r\n\t            ? descriptor.items : this.weaponDescriptor.items)));\r\n\t        return _.find(items, { name: this._weapon.name });\r\n\t    };\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"damage\", {\r\n\t        get: function () {\r\n\t            // https://www.reddit.com/r/thedivision/comments/4cfhr6/more_information_on_weapon_damage_math/\r\n\t            // https://www.reddit.com/r/thedivision/comments/4auh6v/actual_formula_for_weapon_damage/\r\n\t            var base = (this._weapon.stats.damage\r\n\t                + this._flatDamageBonus + this._scalingFactor\r\n\t                * this._inventoryCalc.firearms);\r\n\t            var damagePercentage = 1 + this._weaponDamagePercent();\r\n\t            return base * damagePercentage * this._otherWeaponDamageMultipliers();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"accuracy\", {\r\n\t        get: function () {\r\n\t            return this._weapon.type !== common_1.ItemType.Sniper\r\n\t                ? this._accuracy() : this._sniperAccuracy();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    WeaponStatsCalculator.prototype._accuracy = function () {\r\n\t        // ui_dictionary.mdict   WeaponAccuracyCompareUI\r\n\t        var stats = this._weaponBaseStats;\r\n\t        // (1/(1+Weapon.AimSpreadMin))*100 + (1/(1+Weapon.AimSpreadMax))*10\r\n\t        // + (1/(1+Weapon.SpreadMax))*20 + WeaponSpreadSizeModBonus*40\r\n\t        // + WeaponSpreadMaxModBonus*20 -40\r\n\t        var base = (1 / (1 + stats.aimSpreadMin)) * 100\r\n\t            + (1 / (1 + stats.aimSpreadMax)) * 10\r\n\t            + (1 / (1 + stats.spreadMax));\r\n\t        var spreadSizeModBonus = this.calculateAffectsValueFromMods(common_1.Affects.ACCURACY) * 40;\r\n\t        var spreadMaxModBonus = this.calculateAffectsValueFromMods(common_1.Affects.HIP_ACCURACY) * 20;\r\n\t        return base + spreadSizeModBonus + spreadMaxModBonus - 40;\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype._sniperAccuracy = function () {\r\n\t        var stats = this._weaponBaseStats;\r\n\t        // ((1/(1+(TimeToMinAccuracyMSFinal + TimeToMaxAccuracyMSFinal))) *200 + 0.6)\r\n\t        // * 60 + WeaponSpreadSizeModBonus*40 +20\r\n\t        var base = ((1 / (1 + (stats.timeToMinAccuracy + stats.timeToMaxAccuracy))) * 200 + 0.6) * 60;\r\n\t        var spreadSizeModBonus = this.calculateAffectsValueFromMods(common_1.Affects.ACCURACY) * 40;\r\n\t        return base + spreadSizeModBonus + 20;\r\n\t    };\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"_weaponBaseStats\", {\r\n\t        get: function () {\r\n\t            var descriptor = this.weaponDescriptor;\r\n\t            var family = this.weaponInfo(descriptor).family;\r\n\t            return this._weaponDescriptors.weaponStatsFor(descriptor, family);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"_scalingFactor\", {\r\n\t        get: function () {\r\n\t            // https://www.reddit.com/r/thedivision/comments/4e0c7k/all_weapons_dmg_scaling_values/\r\n\t            return this._weaponBaseStats.scaling;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(WeaponStatsCalculator.prototype, \"_flatDamageBonus\", {\r\n\t        get: function () {\r\n\t            return this._inventoryCalc.weaponDamage(this._weapon.type);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    WeaponStatsCalculator.prototype._weaponDamagePercent = function () {\r\n\t        return this\r\n\t            .calculateAffectsValueFromMods(common_1.Affects.WEAPON_DAMAGE)\r\n\t            + this._inventoryCalc\r\n\t                .calculateTotalAffectsValue(common_1.Affects.WEAPON_DAMAGE);\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype._otherWeaponDamageMultipliers = function () {\r\n\t        // https://www.reddit.com/r/thedivision/comments/4gica6/all_your_multipliers_are_belong_to_us/\r\n\t        return 1;\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype.calculateAffectsFromWeaponBonus = function (affects) {\r\n\t        var bonus = this._weapon.stats.bonus;\r\n\t        return bonus && bonus.affects === affects ? bonus.value : 0;\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype.calculateAffectsFromWeaponTalents = function (affects) {\r\n\t        var talentsThatAffects = this._attributesThatAffects(affects);\r\n\t        if (!talentsThatAffects.length)\r\n\t            return 0;\r\n\t        var talents = _.filter(this._weapon.talents, { unlocked: true });\r\n\t        return _.reduce(talents, function (sum, talent) { return sum + (_.includes(talentsThatAffects, talent.id)\r\n\t            ? talent.value : 0); }, 0);\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype._attributesThatAffects = function (affects) {\r\n\t        return _.filter(this.weaponDescriptor.talents, { affects: [affects] }).map(function (attr) { return attr.id; });\r\n\t    };\r\n\t    WeaponStatsCalculator.prototype.calculateAffectsValueFromMods = function (affects) {\r\n\t        var mods = this._weapon.mods;\r\n\t        var attributes = _.filter(this._weaponDescriptors.attributes, { affects: [affects] }).map(function (attr) { return attr.id; });\r\n\t        if (!attributes.length)\r\n\t            return 0;\r\n\t        return _.reduce(mods, function (sum, mod) {\r\n\t            var primary = _.includes(attributes, mod.primary.id) ? mod.primary.value : 0;\r\n\t            var secondary = _.includes(attributes, mod.secondary.id) ? mod.secondary.value : 0;\r\n\t            return sum + primary + secondary;\r\n\t        }, 0);\r\n\t    };\r\n\t    return WeaponStatsCalculator;\r\n\t}());\r\n\texports.WeaponStatsCalculator = WeaponStatsCalculator;\r\n\n\n/***/ },\n\n/***/ 515:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar attributes_service_1 = __webpack_require__(150);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar editor_service_1 = __webpack_require__(118);\r\n\tvar modslots_service_1 = __webpack_require__(151);\r\n\tvar inventory_service_1 = __webpack_require__(70);\r\n\tvar bootstrap_service_1 = __webpack_require__(360);\r\n\tvar build_stats_service_1 = __webpack_require__(117);\r\n\tvar auth_service_ts_1 = __webpack_require__(116);\r\n\t/**\r\n\t * Created by Keyston on 4/3/2016.\r\n\t */\r\n\texports.DIVISION_PROVIDERS = [attributes_service_1.AttributesService, item_service_1.ItemsService,\r\n\t    editor_service_1.EditorService, modslots_service_1.ModSlotService, inventory_service_1.InventoryService, build_stats_service_1.BuildStatsService,\r\n\t    bootstrap_service_1.BootstrapService, auth_service_ts_1.AuthService];\r\n\n\n/***/ },\n\n/***/ 118:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar Rx_1 = __webpack_require__(85);\r\n\t/**\r\n\t * Created by Keyston on 4/7/2016.\r\n\t */\r\n\tvar EditorService = (function () {\r\n\t    function EditorService() {\r\n\t        this._current = true;\r\n\t        this.event = new Rx_1.BehaviorSubject(this._current);\r\n\t    }\r\n\t    EditorService.prototype.toggle = function () {\r\n\t        this.event.next(this._current = !this._current);\r\n\t    };\r\n\t    EditorService.prototype.subscribe = function (generatorOrNext, error, complete) {\r\n\t        return this.event.subscribe(generatorOrNext, error, complete);\r\n\t    };\r\n\t    Object.defineProperty(EditorService.prototype, \"state\", {\r\n\t        get: function () {\r\n\t            return this._current;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    EditorService.prototype.on = function () {\r\n\t        this.event.next(this._current = true);\r\n\t    };\r\n\t    EditorService.prototype.off = function () {\r\n\t        this.event.next(this._current = false);\r\n\t    };\r\n\t    EditorService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], EditorService);\r\n\t    return EditorService;\r\n\t}());\r\n\texports.EditorService = EditorService;\r\n\n\n/***/ },\n\n/***/ 70:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar inventory_model_1 = __webpack_require__(358);\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar util_1 = __webpack_require__(49);\r\n\tvar http_1 = __webpack_require__(80);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar rxjs_1 = __webpack_require__(85);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar build_stats_service_1 = __webpack_require__(117);\r\n\tvar STORAGE_KEY = 'inventories';\r\n\tvar InventoryService = (function () {\r\n\t    function InventoryService(_http, itemsService) {\r\n\t        this._http = _http;\r\n\t        this._weaponSelected = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._api = 'https://api.myjson.com/bins';\r\n\t        var storage = localStorage.getItem(STORAGE_KEY);\r\n\t        if (storage)\r\n\t            this._inventories = JSON.parse(storage);\r\n\t        this._stats = new build_stats_service_1.BuildStatsService(itemsService, this);\r\n\t        this.reset();\r\n\t    }\r\n\t    Object.defineProperty(InventoryService.prototype, \"weaponSelected\", {\r\n\t        get: function () {\r\n\t            return utils_1.asObservable(this._weaponSelected.filter(function (x, _) { return !!x; }));\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryService.prototype._isWeaponSlot = function (value) {\r\n\t        return !!_.includes(_.values(common_1.WeaponSlot), value);\r\n\t    };\r\n\t    InventoryService.prototype._inventoryItemSlot = function (value) {\r\n\t        return this._isWeaponSlot(value) ? 'weapons' : 'gear';\r\n\t    };\r\n\t    InventoryService.prototype.retrieveWeapon = function (slot) {\r\n\t        return this._inventory.weapons[slot];\r\n\t    };\r\n\t    InventoryService.prototype.retrieve = function (itemType) {\r\n\t        return this._inventory[this._inventoryItemSlot(itemType)][util_1.dashCaseToCamelCase(itemType)];\r\n\t    };\r\n\t    InventoryService.prototype.updateWeapon = function (slot, value) {\r\n\t        this._inventory.weapons[slot] = value;\r\n\t        if (slot === 'primary' && !this._weaponSelected.getValue()) {\r\n\t            this._weaponSelected.next(value);\r\n\t        }\r\n\t    };\r\n\t    InventoryService.prototype.update = function (itemType, value) {\r\n\t        this._inventory.gear[util_1.dashCaseToCamelCase(itemType)] = value;\r\n\t    };\r\n\t    InventoryService.prototype.remove = function (id) {\r\n\t        delete this._inventories[id];\r\n\t    };\r\n\t    InventoryService.prototype.save = function () {\r\n\t        var _this = this;\r\n\t        var id = this._inventory.id || '';\r\n\t        var json = JSON.stringify(this._inventory);\r\n\t        var url = this._api + (id ? \"/\" + id : '');\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json; charset=UTF-8' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var request = id ? this._http.put(url, json, options).map(function (_) {\r\n\t            return {\r\n\t                id: id,\r\n\t                url: url\r\n\t            };\r\n\t        })\r\n\t            : this._http.post(url, json, options).map(function (resp) {\r\n\t                var uri = resp.json().uri;\r\n\t                return {\r\n\t                    url: uri,\r\n\t                    id: uri.split('/').pop()\r\n\t                };\r\n\t            });\r\n\t        request.subscribe(function (data) {\r\n\t            data.name = _this._inventory.name;\r\n\t            var calc = _this._stats.create();\r\n\t            data.meta = {\r\n\t                firearms: calc.firearms,\r\n\t                stamina: calc.stamina,\r\n\t                electronics: calc.electronics,\r\n\t                dps: calc.caculateDps(_this._inventory.weapons.primary),\r\n\t                health: calc.health,\r\n\t                skillpower: calc.skillpower\r\n\t            };\r\n\t            _this._inventories[data.id] = data;\r\n\t            _this._inventory.id = data.id;\r\n\t            localStorage.setItem(STORAGE_KEY, JSON.stringify(_this._inventories));\r\n\t        });\r\n\t    };\r\n\t    Object.defineProperty(InventoryService.prototype, \"inventory\", {\r\n\t        get: function () {\r\n\t            return this._inventory;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    InventoryService.prototype.load = function (id) {\r\n\t        var _this = this;\r\n\t        if (id) {\r\n\t            var url = this._api + '/' + id;\r\n\t            this._http.get(url)\r\n\t                .map(function (resp) { return resp.json(); })\r\n\t                .subscribe(function (inventory) {\r\n\t                _this._inventory = inventory;\r\n\t            }, function (error) { return console.log('Not Found'); });\r\n\t        }\r\n\t        else {\r\n\t            this.reset();\r\n\t        }\r\n\t    };\r\n\t    InventoryService.prototype.reset = function () {\r\n\t        this._inventory = new inventory_model_1.Inventory();\r\n\t        // TODO: Add selector for choosing gender\r\n\t        this._inventory.name = 'New Build';\r\n\t        this._inventory.gender = common_1.Gender.FEMALE;\r\n\t    };\r\n\t    ;\r\n\t    InventoryService.prototype.owns = function () {\r\n\t        if (!this._inventory)\r\n\t            return false;\r\n\t        var id = this._inventory.id;\r\n\t        return !id || !!this._inventories[id];\r\n\t    };\r\n\t    InventoryService.prototype.freeze = function () {\r\n\t        this._defaultInventoryState = _.cloneDeep(this._inventory);\r\n\t    };\r\n\t    InventoryService = __decorate([\r\n\t        core_1.Injectable(),\r\n\t        __param(1, core_1.Inject(core_1.forwardRef(function () { return item_service_1.ItemsService; }))), \r\n\t        __metadata('design:paramtypes', [http_1.Http, item_service_1.ItemsService])\r\n\t    ], InventoryService);\r\n\t    return InventoryService;\r\n\t}());\r\n\texports.InventoryService = InventoryService;\r\n\n\n/***/ },\n\n/***/ 33:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Keyston on 4/4/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar http_1 = __webpack_require__(80);\r\n\tvar rxjs_1 = __webpack_require__(85);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar util_1 = __webpack_require__(49);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar gear_model_1 = __webpack_require__(507);\r\n\tvar attributes_service_1 = __webpack_require__(150);\r\n\tvar ItemStore = (function () {\r\n\t    function ItemStore() {\r\n\t        this._items = new rxjs_1.BehaviorSubject([]);\r\n\t    }\r\n\t    return ItemStore;\r\n\t}());\r\n\tvar WEAPON_TYPES_TO_LABEL = (function () {\r\n\t    var values = {};\r\n\t    values[common_1.ItemType.AR] = 'Assault Rifle';\r\n\t    values[common_1.ItemType.LMG] = 'Light Machine gun';\r\n\t    values[common_1.ItemType.SMG] = 'Submachine Gun';\r\n\t    values[common_1.ItemType.Sniper] = 'Marksman Rifle';\r\n\t    values[common_1.ItemType.Shotgun] = 'Shotgun';\r\n\t    return values;\r\n\t})();\r\n\tvar defaultDescriptorProcessor = function (type, json) { return json; };\r\n\tvar DescriptorCollection = (function () {\r\n\t    function DescriptorCollection() {\r\n\t    }\r\n\t    DescriptorCollection.prototype.forType = function (itemType) {\r\n\t        var name = util_1.dashCaseToCamelCase(itemType);\r\n\t        return this.hasOwnProperty(name) ? this[name] : void 0;\r\n\t    };\r\n\t    return DescriptorCollection;\r\n\t}());\r\n\tvar GearDescriptorCollection = (function (_super) {\r\n\t    __extends(GearDescriptorCollection, _super);\r\n\t    function GearDescriptorCollection() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    return GearDescriptorCollection;\r\n\t}(DescriptorCollection));\r\n\texports.GearDescriptorCollection = GearDescriptorCollection;\r\n\tvar WeaponDescriptorCollection = (function (_super) {\r\n\t    __extends(WeaponDescriptorCollection, _super);\r\n\t    function WeaponDescriptorCollection() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    WeaponDescriptorCollection.prototype.weaponStatsFor = function (descriptor, family) {\r\n\t        var customizer = function (objValue, srcValue, key, object, source) {\r\n\t            return _.isUndefined(objValue) ? srcValue : objValue;\r\n\t        };\r\n\t        var stats = descriptor.stats;\r\n\t        var weaponStats = {};\r\n\t        var familyStats;\r\n\t        while (family) {\r\n\t            familyStats = stats[family];\r\n\t            family = familyStats ? familyStats.parent : void 0;\r\n\t            weaponStats = _.assignWith(weaponStats, familyStats.values, customizer);\r\n\t        }\r\n\t        return weaponStats;\r\n\t    };\r\n\t    return WeaponDescriptorCollection;\r\n\t}(DescriptorCollection));\r\n\texports.WeaponDescriptorCollection = WeaponDescriptorCollection;\r\n\tvar ItemsService = (function () {\r\n\t    // for some reason without using @Inject(forwardRef(() => AttributesService))\r\n\t    // AttributesService will resolve to undefined and throw an error\r\n\t    function ItemsService(_http, _attributesService) {\r\n\t        this._http = _http;\r\n\t        this._attributesService = _attributesService;\r\n\t        // gear\r\n\t        this._bodyArmor = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._mask = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._backPack = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._gloves = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._kneePads = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._holster = new rxjs_1.BehaviorSubject(void 0);\r\n\t        // weapons\r\n\t        this._weaponDescriptorCollection = new WeaponDescriptorCollection();\r\n\t        this._gearDescriptorCollection = new GearDescriptorCollection();\r\n\t        this._assaultRifle = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._smg = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._lmg = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._shotgun = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._sniper = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._weaponTalents = new rxjs_1.BehaviorSubject(void 0);\r\n\t        this._basePath = 'app/assets/json/';\r\n\t        this._imagePath = 'app/assets/images/inventory/';\r\n\t    }\r\n\t    ItemsService.prototype.init = function () {\r\n\t        var _this = this;\r\n\t        this._attributesService.init();\r\n\t        this._loadItems(common_1.GEAR_TYPES, this._gearDescriptorCollection);\r\n\t        this._loadWeaponTalents();\r\n\t        utils_1.asObservable(this._weaponTalents, true)\r\n\t            .subscribe(function (talents) { return _this._loadWeapons(talents); });\r\n\t        this._attributesService.weaponAttributes\r\n\t            .subscribe(function (attributes) { return _this._weaponDescriptorCollection.attributes = attributes; });\r\n\t        this._attributesService.gearAttributes\r\n\t            .subscribe(function (attributes) { return _this._gearDescriptorCollection.attributes = attributes; });\r\n\t    };\r\n\t    ItemsService.prototype._collectDescriptors = function (metadata, types) {\r\n\t        var _this = this;\r\n\t        types = types.slice(0);\r\n\t        var obs = types.map(function (type) { return _this['_' + util_1.dashCaseToCamelCase(type)]; });\r\n\t        var all = new rxjs_1.Subject();\r\n\t        rxjs_1.Observable.merge.apply(rxjs_1.Observable, obs).take(obs.length).subscribe(function (descriptor) {\r\n\t            var itemType = types.shift();\r\n\t            var name = util_1.dashCaseToCamelCase(itemType);\r\n\t            metadata[name] = descriptor;\r\n\t        }, function (error) { return console.log(error); }, function () { return all.next(metadata); });\r\n\t        return all;\r\n\t    };\r\n\t    Object.defineProperty(ItemsService.prototype, \"_gearDescriptors\", {\r\n\t        get: function () {\r\n\t            return this._gearDescriptorCollection;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemsService.prototype, \"_weaponDescriptors\", {\r\n\t        get: function () {\r\n\t            return this._weaponDescriptorCollection;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ItemsService.prototype._loadWeapons = function (talents) {\r\n\t        this._loadItems(common_1.WEAPON_TYPES, this._weaponDescriptorCollection, function (weaponType, manifest) {\r\n\t            var weapons = manifest.weapons;\r\n\t            var superior = _.filter(weapons, function (weapon) { return !weapon.named; });\r\n\t            var items = {};\r\n\t            items[common_1.GearRarity.SUPERIOR] = superior;\r\n\t            items[common_1.GearRarity.HIGH_END] = weapons;\r\n\t            items[common_1.GearRarity.GEAR_SET] = [];\r\n\t            var supportedTalents = _.filter(talents, { supports: [weaponType] });\r\n\t            return {\r\n\t                items: items,\r\n\t                talents: supportedTalents,\r\n\t                compatibility: manifest.compatibility,\r\n\t                stats: manifest.stats\r\n\t            };\r\n\t        });\r\n\t    };\r\n\t    ItemsService.prototype._loadWeaponTalents = function () {\r\n\t        var _this = this;\r\n\t        var url = this._basePath + 'weapon-talents.json';\r\n\t        this._http.get(url)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .subscribe(function (talents) { return _this._weaponTalents.next(talents); }, function (error) { return console.log('Error loading', url, error); }, function () { return console.log('Finished loading', url); });\r\n\t    };\r\n\t    ItemsService.prototype._loadItems = function (types, collection, process) {\r\n\t        var _this = this;\r\n\t        if (process === void 0) { process = defaultDescriptorProcessor; }\r\n\t        var self = this;\r\n\t        _.forEach(types, function (itemType, key) {\r\n\t            console.log('ItemsService(', itemType, ')');\r\n\t            var subjectName = util_1.dashCaseToCamelCase(itemType);\r\n\t            var subject = self['_' + subjectName];\r\n\t            if (!subject)\r\n\t                return;\r\n\t            var url = self._basePath + itemType + '.json';\r\n\t            _this._http.get(url)\r\n\t                .map(function (res) { return process(itemType, res.json()); })\r\n\t                .subscribe(function (descriptor) {\r\n\t                subject.next(descriptor);\r\n\t                collection[subjectName] = descriptor;\r\n\t            }, function (error) { return console.log('Error loading', url, error); }, function () { return console.log('Finished loading', url); });\r\n\t        });\r\n\t    };\r\n\t    Object.defineProperty(ItemsService.prototype, \"scores\", {\r\n\t        get: function () {\r\n\t            return gear_model_1.GEAR_SCORES;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(ItemsService.prototype, \"rarities\", {\r\n\t        // @TODO : add GEAR_SET images\r\n\t        get: function () {\r\n\t            return [common_1.GearRarity.SUPERIOR, common_1.GearRarity.HIGH_END, common_1.GearRarity.GEAR_SET];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    /**\r\n\t     * Returns a descriptor for the choosen gear type\r\n\t     * @param itemType\r\n\t     * @returns {Observable<ItemDescriptor>}\r\n\t     */\r\n\t    ItemsService.prototype.getDescriptorFor = function (itemType) {\r\n\t        var obs = this['_' + util_1.dashCaseToCamelCase(itemType || '')];\r\n\t        if (obs) {\r\n\t            return utils_1.asObservable(obs, true);\r\n\t        }\r\n\t        return rxjs_1.Observable.create();\r\n\t    };\r\n\t    ItemsService.prototype._imageUrl = function (type, icon) {\r\n\t        return icon ? this._imagePath + type + '/' + icon : '';\r\n\t    };\r\n\t    ItemsService.prototype._gearImageResolve = function (descriptor, item) {\r\n\t        var icons = descriptor.icons[item.rarity];\r\n\t        var isGearSet = item.rarity === common_1.GearRarity.GEAR_SET;\r\n\t        var gearSetName = void 0;\r\n\t        if (isGearSet) {\r\n\t            // find item information to resolve gear name\r\n\t            var divisionItem = _.find(descriptor.items[common_1.GearRarity.GEAR_SET], { name: item.name });\r\n\t            gearSetName = divisionItem.belongsTo;\r\n\t        }\r\n\t        var icon = icons[gearSetName || item.score];\r\n\t        if (icon.hasOwnProperty(common_1.Gender.MALE)) {\r\n\t            icon = icon[common_1.Gender.MALE];\r\n\t        }\r\n\t        else if (icon.hasOwnProperty(common_1.Gender.FEMALE)) {\r\n\t            icon = icon[common_1.Gender.FEMALE];\r\n\t        }\r\n\t        var isObject = _.isObject(icon);\r\n\t        return {\r\n\t            primary: this._imageUrl(item.type, isObject ? icon.primary : icon),\r\n\t            secondary: gearSetName ?\r\n\t                this._imageUrl('sets', gearSetName + '.png')\r\n\t                : this._imageUrl(item.type, isObject ? icon.secondary : icon)\r\n\t        };\r\n\t    };\r\n\t    ItemsService.prototype._weaponImageResolve = function (descriptor, item) {\r\n\t        var info = _.find(descriptor.items[item.rarity], { name: item.name });\r\n\t        return {\r\n\t            primary: info ? this._imageUrl(item.type, info.icon) : '',\r\n\t            secondary: ''\r\n\t        };\r\n\t    };\r\n\t    /**\r\n\t     * Resolves the correct gear image\r\n\t     * @param item\r\n\t     * @returns {Observable<string>}\r\n\t     */\r\n\t    ItemsService.prototype.imageResolve = function (item) {\r\n\t        var _this = this;\r\n\t        return this.getDescriptorFor(item.type).map(function (descriptor) {\r\n\t            return isWeaponType(item.type)\r\n\t                ? _this._weaponImageResolve(descriptor, item)\r\n\t                : _this._gearImageResolve(descriptor, item);\r\n\t        });\r\n\t    };\r\n\t    ItemsService.prototype.talentImageResolve = function (id) {\r\n\t        return {\r\n\t            primary: this._imageUrl('talents', id + '.png'),\r\n\t            secondary: ''\r\n\t        };\r\n\t    };\r\n\t    ItemsService.prototype.translateToName = function (itemType) {\r\n\t        return WEAPON_TYPES_TO_LABEL[itemType];\r\n\t    };\r\n\t    Object.defineProperty(ItemsService.prototype, \"weaponTypeNames\", {\r\n\t        get: function () {\r\n\t            return WEAPON_TYPES_TO_LABEL;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    ItemsService.prototype.defaultWeaponBonusFor = function (weaponType) {\r\n\t        return {\r\n\t            value: 0,\r\n\t            affects: weaponType === common_1.ItemType.SMG\r\n\t                ? common_1.Affects.CRIT_HIT_CHANCE\r\n\t                : common_1.Affects.HEADSHOT_DAMAGE\r\n\t        };\r\n\t    };\r\n\t    ItemsService = __decorate([\r\n\t        core_1.Injectable(),\r\n\t        __param(1, core_1.Inject(core_1.forwardRef(function () { return attributes_service_1.AttributesService; }))), \r\n\t        __metadata('design:paramtypes', [http_1.Http, attributes_service_1.AttributesService])\r\n\t    ], ItemsService);\r\n\t    return ItemsService;\r\n\t}());\r\n\texports.ItemsService = ItemsService;\r\n\tfunction isWeaponType(itemType) {\r\n\t    return _.includes(common_1.WEAPON_TYPES, itemType);\r\n\t}\r\n\texports.isWeaponType = isWeaponType;\r\n\n\n/***/ },\n\n/***/ 229:\n/***/ function(module, exports) {\n\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\t\"use strict\";\r\n\tvar IdentityStrategy = (function () {\r\n\t    function IdentityStrategy() {\r\n\t        var _this = this;\r\n\t        var self = this;\r\n\t        window[this._callBackMethodName] = function (params) { return _this._authCallback(params); };\r\n\t    }\r\n\t    Object.defineProperty(IdentityStrategy.prototype, \"_callbackUrl\", {\r\n\t        get: function () {\r\n\t            var loc = window.location;\r\n\t            return loc.protocol + loc.host + '/#/authCallback/' + this.id;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(IdentityStrategy.prototype, \"_callBackMethodName\", {\r\n\t        get: function () {\r\n\t            return '_auth_' + this.id + '_callback_';\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    IdentityStrategy.prototype._completeLogin = function (params) {\r\n\t        var func = window.opener[this._callBackMethodName];\r\n\t        if (func)\r\n\t            func(params);\r\n\t        window.close();\r\n\t    };\r\n\t    Object.defineProperty(IdentityStrategy.prototype, \"_saveKey\", {\r\n\t        get: function () {\r\n\t            return '_auth_' + this.id;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    IdentityStrategy.prototype._info = function () {\r\n\t        var info = localStorage.getItem(this._saveKey);\r\n\t        return info ? JSON.parse(info) : {};\r\n\t    };\r\n\t    IdentityStrategy.prototype._save = function (info) {\r\n\t        localStorage.setItem(this._saveKey, JSON.stringify(info));\r\n\t    };\r\n\t    return IdentityStrategy;\r\n\t}());\r\n\texports.IdentityStrategy = IdentityStrategy;\r\n\tvar PSNIdentityStrategy = (function (_super) {\r\n\t    __extends(PSNIdentityStrategy, _super);\r\n\t    function PSNIdentityStrategy() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    return PSNIdentityStrategy;\r\n\t}(IdentityStrategy));\r\n\texports.PSNIdentityStrategy = PSNIdentityStrategy;\r\n\n\n/***/ },\n\n/***/ 516:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar index_1 = __webpack_require__(229);\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar http_1 = __webpack_require__(80);\r\n\tvar Subject_1 = __webpack_require__(17);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar auth_service_1 = __webpack_require__(116);\r\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\tvar SEN_BASE_URL = 'https://auth.api.sonyentertainmentnetwork.com';\r\n\tvar SERVICE_ENTITY = 'urn:service-entity:psn';\r\n\tvar STATE = '1156936032';\r\n\tvar REDIRECT_URL = 'com.scee.psxandroid.scecompcall://redirect';\r\n\tvar CLIENT_ID = 'b0d0d7ad-bb99-4ab1-b25e-afa0c76577b0';\r\n\t// PSN Scope, now edited with more scopes\r\n\tvar PSN_SCOPE = 'psn:sceapp,user:account.get,user:account.settings.' +\r\n\t    'privacy.get,user:account.settings.privacy.update,user:account.realName.get,' +\r\n\t    'user:account.realName.update,kamaji:get_account_hash';\r\n\tvar CLIENT_SECRET = 'Zo4y8eGIa3oazIEp';\r\n\t// I still don't know what \"duid\" stands for... if you do, create an issue about it please!\r\n\tvar DUID = '00000005006401283335353338373035333434333134313a' +\r\n\t    '433635303220202020202020202020202020202020';\r\n\tvar OAUTH_URL = 'https://auth.api.sonyentertainmentnetwork.com/2.0/oauth/token';\r\n\tvar PSNIdentityStrategyImpl = (function (_super) {\r\n\t    __extends(PSNIdentityStrategyImpl, _super);\r\n\t    function PSNIdentityStrategyImpl(_http) {\r\n\t        _super.call(this);\r\n\t        this._http = _http;\r\n\t        this._processedCallback = false;\r\n\t        this._pending = false;\r\n\t    }\r\n\t    PSNIdentityStrategyImpl.prototype.id = function () {\r\n\t        return auth_service_1.AuthType.PSN;\r\n\t    };\r\n\t    PSNIdentityStrategyImpl.prototype.config = function (config) {\r\n\t    };\r\n\t    PSNIdentityStrategyImpl.prototype.callback = function (params) {\r\n\t        var code = params.get('code');\r\n\t        var state = params.get('state');\r\n\t        var authCode = params.get('authCode');\r\n\t        this._completeLogin({\r\n\t            authCode: authCode,\r\n\t            code: code,\r\n\t            state: state\r\n\t        });\r\n\t    };\r\n\t    Object.defineProperty(PSNIdentityStrategyImpl.prototype, \"_accessToken\", {\r\n\t        get: function () {\r\n\t            return this._info().access_token;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    PSNIdentityStrategyImpl.prototype._authCallback = function (params) {\r\n\t        this._processedCallback = true;\r\n\t        this._resolveAuthToken(params);\r\n\t    };\r\n\t    PSNIdentityStrategyImpl.prototype._resolveAuthToken = function (oauth) {\r\n\t        var _this = this;\r\n\t        if (this._window && !this._window.closed) {\r\n\t            this._window.close();\r\n\t        }\r\n\t        var params = {\r\n\t            grant_type: 'authorization_code',\r\n\t            client_id: CLIENT_ID,\r\n\t            client_secret: CLIENT_SECRET,\r\n\t            code: oauth.authCode,\r\n\t            redirect_uri: REDIRECT_URL,\r\n\t            state: 'x',\r\n\t            scope: PSN_SCOPE,\r\n\t            duid: DUID\r\n\t        };\r\n\t        this._http\r\n\t            .post(OAUTH_URL, JSON.stringify(params))\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .subscribe(function (resp) {\r\n\t            resp.timestamp = (new Date()).getTime();\r\n\t            _this._processedCallback = false;\r\n\t            _this._pending = false;\r\n\t            _this._save(resp);\r\n\t        }, function (error) { return console.log(error); }, function () { return console.log('auth completed'); });\r\n\t    };\r\n\t    Object.defineProperty(PSNIdentityStrategyImpl.prototype, \"_url\", {\r\n\t        get: function () {\r\n\t            var url = SEN_BASE_URL;\r\n\t            url += '/2.0/oauth/authorize?response_type=code&service_entity=' + SERVICE_ENTITY;\r\n\t            url += '&returnAuthCode=true&state=' + STATE;\r\n\t            url += '&redirect_uri=' + REDIRECT_URL;\r\n\t            url += '&client_id=' + CLIENT_ID + '&scope=' + PSN_SCOPE;\r\n\t            return url;\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    PSNIdentityStrategyImpl.prototype.login = function () {\r\n\t        this._processedCallback = false;\r\n\t        this._pending = true;\r\n\t        this._pendingResults = new Subject_1.Subject();\r\n\t        var url = this._url;\r\n\t        console.log(url);\r\n\t        var win = window.open(url, 'PSNLogin', 'height=200,width=300');\r\n\t        /*win.addEventListener('beforeunload', (event) => {\r\n\t         if (!this._processedCallback && this._pending) {\r\n\t    \r\n\t    \r\n\t         alert('User exited from popup');\r\n\t         }\r\n\t         });*/\r\n\t        return utils_1.asObservable(this._pendingResults, true);\r\n\t    };\r\n\t    PSNIdentityStrategyImpl = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], PSNIdentityStrategyImpl);\r\n\t    return PSNIdentityStrategyImpl;\r\n\t}(index_1.PSNIdentityStrategy));\r\n\texports.PSNIdentityStrategyImpl = PSNIdentityStrategyImpl;\r\n\n\n/***/ },\n\n/***/ 517:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar index_1 = __webpack_require__(229);\r\n\tvar psn_strategy_1 = __webpack_require__(516);\r\n\tvar core_1 = __webpack_require__(2);\r\n\t/**\r\n\t * Created by Keyston on 5/17/2016.\r\n\t */\r\n\texports.LOGIN_STRATEGY_PROVIDERS = [\r\n\t    core_1.provide(index_1.PSNIdentityStrategy, { useClass: psn_strategy_1.PSNIdentityStrategyImpl })\r\n\t];\r\n\n\n/***/ },\n\n/***/ 151:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar attributes_service_1 = __webpack_require__(150);\r\n\tvar common_1 = __webpack_require__(24);\r\n\tvar modslots_model_1 = __webpack_require__(510);\r\n\tvar utils_1 = __webpack_require__(58);\r\n\tvar _ = __webpack_require__(31);\r\n\tvar item_service_1 = __webpack_require__(33);\r\n\tvar http_1 = __webpack_require__(80);\r\n\tvar Rx_1 = __webpack_require__(85);\r\n\t/**\r\n\t * Created by Keyston on 4/10/2016.\r\n\t */\r\n\tvar ModSlotAttributeSet = (function () {\r\n\t    function ModSlotAttributeSet() {\r\n\t    }\r\n\t    return ModSlotAttributeSet;\r\n\t}());\r\n\texports.ModSlotAttributeSet = ModSlotAttributeSet;\r\n\tvar ModSlotService = (function () {\r\n\t    function ModSlotService(_attributeService, _http) {\r\n\t        this._attributeService = _attributeService;\r\n\t        this._http = _http;\r\n\t        this._weaponModItems = new Rx_1.BehaviorSubject(void 0);\r\n\t        this._basePath = 'app/assets/json/';\r\n\t        this._loadWeaponMods();\r\n\t    }\r\n\t    ModSlotService.hasNative = function (gearType) {\r\n\t        switch (gearType) {\r\n\t            case common_1.ItemType.Mask:\r\n\t            case common_1.ItemType.BackPack:\r\n\t                return true;\r\n\t            default:\r\n\t                return false;\r\n\t        }\r\n\t    };\r\n\t    // TODO: allow to pass rarity and score to restrict more\r\n\t    ModSlotService.canHaveExtra = function (gearType) {\r\n\t        switch (gearType) {\r\n\t            case common_1.ItemType.Mask:\r\n\t            case common_1.ItemType.KneePads:\r\n\t            case common_1.ItemType.Holster:\r\n\t                return 2;\r\n\t            case common_1.ItemType.BodyArmor:\r\n\t                return 3;\r\n\t            default:\r\n\t                return 0;\r\n\t        }\r\n\t    };\r\n\t    ModSlotService.prototype._loadWeaponMods = function () {\r\n\t        var _this = this;\r\n\t        var url = this._basePath + 'weapon-mods.json';\r\n\t        this._http.get(url)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .subscribe(function (items) { return _this._weaponModItems.next(items); }, function (error) { return console.log('Error loading', url, error); }, function () { return console.log('Finished loading', url); });\r\n\t    };\r\n\t    ModSlotService.prototype.getTypes = function (itemType) {\r\n\t        return item_service_1.isWeaponType(itemType) ? modslots_model_1.WEAPON_MOD_SLOT_TYPES : modslots_model_1.GEAR_MOD_SLOT_TYPES;\r\n\t    };\r\n\t    ModSlotService.prototype.weaponModItemsFor = function (slotType) {\r\n\t        return utils_1.asObservable(this._weaponModItems, true).map(function (items) {\r\n\t            return items[slotType.identifier];\r\n\t        });\r\n\t    };\r\n\t    ModSlotService.prototype.getAttributeSetFor = function (slotType) {\r\n\t        return slotType.belongsToWeapon\r\n\t            ? this.getWeaponAttributeSetFor(slotType)\r\n\t            : this.getGearAttributeSetFor(slotType);\r\n\t    };\r\n\t    ModSlotService.prototype.getWeaponAttributeSetFor = function (slotType) {\r\n\t        return this._attributeService\r\n\t            .weaponAttributes.map(function (attrs) {\r\n\t            var found = _.filter(attrs, { slots: [slotType.identifier] });\r\n\t            return {\r\n\t                primary: found,\r\n\t                secondary: found\r\n\t            };\r\n\t        });\r\n\t    };\r\n\t    ModSlotService.prototype.getGearAttributeSetFor = function (slotType) {\r\n\t        return utils_1.asObservable(this._attributeService\r\n\t            .gearAttributes.map(function (attrs) {\r\n\t            var primary, secondary;\r\n\t            if (slotType.isPerformance) {\r\n\t                primary = secondary = _.filter(attrs, function (attr) { return attr.mod && attr.type === common_1.AttributeType.SKILL; });\r\n\t            }\r\n\t            else {\r\n\t                primary = [slotType\r\n\t                        .resolveMainAttribute(_.filter(attrs, { mod: true, type: common_1.AttributeType.MAIN }))\r\n\t                ];\r\n\t                secondary = _.filter(attrs, function (attr) { return attr.mod &&\r\n\t                    attr.type !== common_1.AttributeType.MAIN\r\n\t                    && attr.type !== common_1.AttributeType.SKILL; });\r\n\t            }\r\n\t            return {\r\n\t                primary: primary,\r\n\t                secondary: secondary\r\n\t            };\r\n\t        })).first(function (x, idx, _) { return !!x; });\r\n\t    };\r\n\t    ModSlotService.prototype.getTypesForWeapon = function (weaponFamily) {\r\n\t    };\r\n\t    ModSlotService.prototype.imageFor = function (modSlotType) {\r\n\t        return \"app/assets/images/inventory/mods/\" + modSlotType.identifier + \".png\";\r\n\t    };\r\n\t    ModSlotService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [attributes_service_1.AttributesService, http_1.Http])\r\n\t    ], ModSlotService);\r\n\t    return ModSlotService;\r\n\t}());\r\n\texports.ModSlotService = ModSlotService;\r\n\n\n/***/ },\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/*\r\n\t * Providers provided by Angular\r\n\t */\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(326);\r\n\tvar browser_1 = __webpack_require__(519);\r\n\tvar environment_1 = __webpack_require__(522);\r\n\tvar app_1 = __webpack_require__(514);\r\n\tvar auth_service_1 = __webpack_require__(116);\r\n\t/*\r\n\t * Platform and Environment\r\n\t * our providers/directives/pipes\r\n\t */\r\n\t/*\r\n\t * App Component\r\n\t * our top level component that holds all of our components\r\n\t */\r\n\t/*\r\n\t * Bootstrap our Angular app with a top level component `App` and inject\r\n\t * our Services and Providers into Angular's dependency injection\r\n\t */\r\n\tfunction main(initialHmrState) {\r\n\t    return platform_browser_dynamic_1.bootstrap(app_1.App, browser_1.PROVIDERS.concat(environment_1.ENV_PROVIDERS, browser_1.DIRECTIVES, browser_1.PIPES, app_1.APP_PROVIDERS, app_1.APP_DIRECTIVES, auth_service_1.AUTH_PROVIDERS))\r\n\t        .catch(function (err) { return console.error(err); });\r\n\t}\r\n\texports.main = main;\r\n\t/*\r\n\t * Vendors\r\n\t * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\r\n\t * You can also import them in vendors to ensure that they are bundled in one file\r\n\t * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\r\n\t */\r\n\t/*\r\n\t * Hot Module Reload\r\n\t * experimental version by @gdi2290\r\n\t */\r\n\tif (false) {\r\n\t    // activate hot module reload\r\n\t    var ngHmr = require('angular2-hmr');\r\n\t    ngHmr.hotModuleReplacement(main, module);\r\n\t}\r\n\telse {\r\n\t    // bootstrap when documetn is ready\r\n\t    document.addEventListener('DOMContentLoaded', function () { return main(); });\r\n\t}\r\n\n\n/***/ },\n\n/***/ 518:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t * These are globally available directives in any template\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\t// Angular 2 Router\r\n\t// Angular 2 Material 2\r\n\t// TODO(gdi2290): replace with @angular2-material/all\r\n\t//import {MATERIAL_DIRECTIVES} from './angular2-material2';\r\n\t// application_directives: directives that are global through out the application\r\n\texports.APPLICATION_DIRECTIVES = router_deprecated_1.ROUTER_DIRECTIVES.slice();\r\n\texports.DIRECTIVES = [\r\n\t    { provide: core_1.PLATFORM_DIRECTIVES, multi: true, useValue: exports.APPLICATION_DIRECTIVES }\r\n\t];\r\n\n\n/***/ },\n\n/***/ 519:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(518));\r\n\t__export(__webpack_require__(520));\r\n\t__export(__webpack_require__(521));\r\n\n\n/***/ },\n\n/***/ 520:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t * These are globally available pipes in any template\r\n\t */\r\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(2);\r\n\t// application_pipes: pipes that are global through out the application\r\n\texports.APPLICATION_PIPES = [];\r\n\texports.PIPES = [\r\n\t    { provide: core_1.PLATFORM_PIPES, multi: true, useValue: exports.APPLICATION_PIPES }\r\n\t];\r\n\n\n/***/ },\n\n/***/ 521:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t * These are globally available services in any component or any other service\r\n\t */\r\n\t\"use strict\";\r\n\tvar common_1 = __webpack_require__(35);\r\n\tvar http_1 = __webpack_require__(80);\r\n\tvar router_deprecated_1 = __webpack_require__(82);\r\n\t// Angular 2\r\n\t// Angular 2 Http\r\n\t// Angular 2 Router\r\n\t// Angular 2 Material\r\n\t// TODO(gdi2290): replace with @angular2-material/all\r\n\t//import {MATERIAL_PROVIDERS} from './angular2-material2';\r\n\t/*\r\n\t * Application Providers/Directives/Pipes\r\n\t * providers/directives/pipes that only live in our browser environment\r\n\t */\r\n\texports.APPLICATION_PROVIDERS = common_1.FORM_PROVIDERS.concat(http_1.HTTP_PROVIDERS, router_deprecated_1.ROUTER_PROVIDERS, [\r\n\t    { provide: common_1.LocationStrategy, useClass: common_1.HashLocationStrategy }\r\n\t]);\r\n\texports.PROVIDERS = exports.APPLICATION_PROVIDERS.slice();\r\n\n\n/***/ },\n\n/***/ 522:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t// Angular 2\r\n\tvar core_1 = __webpack_require__(2);\r\n\t// Environment Providers\r\n\tvar PROVIDERS = [];\r\n\tif (true) {\r\n\t    // Production\r\n\t    core_1.enableProdMode();\r\n\t    PROVIDERS = PROVIDERS.slice();\r\n\t}\r\n\telse {\r\n\t    // Development\r\n\t    PROVIDERS = PROVIDERS.slice();\r\n\t}\r\n\texports.ENV_PROVIDERS = PROVIDERS.slice();\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** main.b7b738f4e10f4fad7c80.bundle.js\n **/","module.exports = require('./lodash');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 31\n ** module chunks = 2\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.12.0';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)\n    ? exports\n    : undefined;\n\n  /** Detect free variable `module`. */\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType)\n    ? module\n    : undefined;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = (freeModule && freeModule.exports === freeExports)\n    ? freeExports\n    : undefined;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n  /** Detect free variable `window`. */\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal ||\n    ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||\n      freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    return !!array.length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.find` and `_.findKey`, without\n   * support for iteratee shorthands, which iterates over `collection` using\n   * `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @param {boolean} [retKey] Specify returning the key of the found element\n   *  instead of the element itself.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFind(collection, predicate, eachFunc, retKey) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = retKey ? key : value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to mock `Date#getTime` use in `_.now`.\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        clearTimeout = context.clearTimeout,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`,\n     * `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`, `isSafeInteger`,\n     * `isSet`, `isString`, `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`,\n     * `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`,\n     * `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`, `min`, `minBy`, `multiply`,\n     * `noConflict`, `noop`, `now`, `nth`, `pad`, `padEnd`, `padStart`, `parseInt`,\n     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toFinite`,\n     * `toInteger`, `toJSON`, `toLength`, `toLower`, `toNumber`, `toSafeInteger`,\n     * `toString`, `toUpper`, `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`,\n     * `uniqueId`, `upperCase`, `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n        cache = this.__data__ = new MapCache(cache.__data__);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined &&\n              !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return hasOwnProperty.call(object, key) ||\n        (typeof object == 'object' && key in object && getPrototype(object) === null);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var index = -1,\n          props = getAllKeysIn(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return 0;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = toInteger(precision);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and\n          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n          // not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n          stack.set(object, other);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = toPairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    function getSymbols(object) {\n      // Coerce `object` to an object to avoid non-object errors in V8.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n      return getOwnPropertySymbols(Object(object));\n    }\n\n    // Fallback for IE < 11.\n    if (!getOwnPropertySymbols) {\n      getSymbols = function() {\n        return [];\n      };\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value);\n    }\n\n    /**\n     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n     * iteratee shorthand.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenableIteratee(value) {\n      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other given\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([3, 2, 1], [4, 2]);\n     * // => [3, 1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n     * // => [3.1, 1.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3))\n        : -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n        : -1;\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      fromIndex = toInteger(fromIndex);\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [4, 2], [1, 2]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at `n` index of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pullAll(array, [2, 3]);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 5], 4);\n     * // => 0\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n     *\n     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([1, 1, 2, 2], 2);\n     * // => 2\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5], 4);\n     * // => 1\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2, 1], [4, 2], [1, 2]);\n     * // => [2, 1, 4]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1, 1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [4, 2]);\n     * // => [1, 4]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     *\n     * _(['a', 'b', 'c']).at(0, 2).value();\n     * // => ['a', 'c']\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    function find(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate, true);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function, it's\n     * invoked for and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n        ? iteratees[0]\n        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\n      return baseOrderBy(collection, iteratees, []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @type {Function}\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred function to be invoked.\n     */\n    var now = Date.now;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime = 0,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (!lastCallTime || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        clearTimeout(timerId);\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastCallTime = lastInvokeTime = 0;\n        lastArgs = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [transforms[_.identity]] The functions to transform.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? constant(false) : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     *\n     * _.at(['a', 'b', 'c'], 0, 2);\n     * // => ['a', 'c']\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. The iteratee is invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(baseToString(target), position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, 'onClick');\n     * jQuery(element).on('click', view.onClick);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at `n` index. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return rest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over(Math.max, Math.min);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(true));\n     * // => [true, true, true, true]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     *\n     * var path = ['a', 'b', 'c'],\n     *     newPath = _.toPath(path);\n     *\n     * console.log(newPath);\n     * // => ['a', 'b', 'c']\n     *\n     * console.log(path === newPath);\n     * // => false\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    });\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    });\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    });\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    });\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose Lodash on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where Lodash is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n  (freeWindow || freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 412\n ** module chunks = 2\n **/","/**\n * Created by xastey on 4/2/2016.\n */\n\nimport {Component, ViewEncapsulation, OnInit} from '@angular/core';\nimport {RouteConfig} from '@angular/router-deprecated';\nimport {Gear} from './components/item-overview/item-overview.component';\nimport {EditorService} from './services/editor-service';\nimport {AttributesService} from './services/attributes.service';\nimport {InventoryRootComponent} from './components/inventory/inventory.component';\nimport {DUMMY_GEAR} from './components/item-overview/gear.model';\nimport {BootstrapService} from './services/bootstrap.service';\nimport {\n  BuildStatsBannerComponent\n}\n  from './components/build-stats-banner/build-stats-banner.component';\nimport {AuthComponent} from './components/auth/auth.component';\nimport {InventoryService} from './services/inventory.service';\n\n\n@Component({\n  selector: 'my-division-build',\n\n  pipes: [],\n  styles: [require('./assets/styles/app.scss')],\n  directives: [BuildStatsBannerComponent, AuthComponent],\n  encapsulation: ViewEncapsulation.None,\n  template: require('./my-division-build-app.html'),\n\n  providers: []\n})\n\n@RouteConfig([\n\n  {path: '/...', name: 'InventoryRoot', component: InventoryRootComponent}\n\n])\nexport class App {\n\n\n  loaded: boolean = false;\n\n  constructor(private _bootstrapService: BootstrapService) {\n\n\n    _bootstrapService.boot().subscribe((service: InventoryService) => {\n      service.freeze();\n      this.loaded = true;\n    });\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/app.component.ts\n **/","module.exports = \"@font-face{font-family:'Borda';font-style:normal;font-weight:500;src:url(\\\"app/assets/fonts/borda-regular-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-regular-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-regular-webfont.svg#borda\\\") format(\\\"svg\\\")}@font-face{font-family:'Borda';font-style:normal;font-weight:600;src:url(\\\"app/assets/fonts/borda-demibold_0-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-demibold_0-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-demibold_0-webfont.svg#borda\\\") format(\\\"svg\\\")}@font-face{font-family:'Borda';font-style:normal;font-weight:700;src:url(\\\"app/assets/fonts/borda-bold-webfont.eot\\\");src:url(\\\"app/assets/fonts/borda-bold-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.woff2\\\") format(\\\"woff2\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.woff\\\") format(\\\"woff\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.ttf\\\") format(\\\"truetype\\\"),url(\\\"app/assets/fonts/borda-bold-webfont.svg#borda\\\") format(\\\"svg\\\")}*{box-sizing:border-box}.clearfix:after{visibility:hidden;display:block;font-size:0;content:\\\" \\\";clear:both;height:0}.clearfix{display:inline-block}* html .clearfix{height:1%}.clearfix{display:block}.hidden{display:none !important}body{margin:0}body:before{background-image:url(\\\"app/assets/images/background-processed.jpg\\\");background-repeat:no-repeat;background-size:cover;bottom:0;content:'';left:0;position:fixed;right:0;top:0;z-index:-1}.outer-wrapper{display:flex;flex-flow:row wrap;justify-content:space-around}.tooltip .item-wrapper{margin:0}.tooltip .rarity-indicator{display:none}.generator-wrapper{width:450px}.generator-wrapper select,.generator-wrapper input{display:block;width:100%}.generator-wrapper input{border-radius:2px;font-size:18px;padding:5px 10px}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/assets/styles/app.scss\n ** module id = 523\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/7/2016.\n */\n\n//https://blog.rsuter.com/angular-2-typescript-property-decorator-that-converts-input-values-to-the-correct-type/\n\n// tslint:disable-next-line\nexport var StringConverter = (value: any) => {\n  if (value === null || value === undefined || typeof value === 'string')\n    return value;\n\n  return value.toString();\n};\n// tslint:disable-next-line\nexport var BooleanConverter = (value: any) => {\n  if (value === null || value === undefined || typeof value === 'boolean')\n    return value;\n\n  return value.toString() === 'true';\n};\n// tslint:disable-next-line\nexport var NumberConverter = (value: any) => {\n  if (value === void 0 || value === undefined || typeof value === 'number')\n    return value;\n\n  return parseFloat(value.toString());\n};\nexport function InputConverter(converter?: (value: any) => any) {\n  return (target: Object, key: string) => {\n    if (converter === undefined) {\n      // (<any>Reflect).getMetadata('design:type', target, key);\n      let metadata = void 0;\n      if (metadata === undefined || metadata === void 0)\n        throw new Error('The reflection metadata could not be found.');\n\n      if (metadata.name === 'String') {\n        converter = StringConverter;\n      } else if (metadata.name === 'Boolean') {\n        converter = BooleanConverter;\n      } else if (metadata.name === 'Number') {\n        converter = NumberConverter;\n      } else {\n        throw new Error(`There is no converter for the given property type ${metadata.name}.`);\n      }\n    }\n\n    let definition = Object.getOwnPropertyDescriptor(target, key);\n    if (definition) {\n      Object.defineProperty(target, key, {\n        get: definition.get,\n        set: newValue => {\n          definition.set(converter(newValue));\n        },\n        enumerable: true,\n        configurable: true\n      });\n    } else {\n      Object.defineProperty(target, key, {\n        get: function () {\n          return this['__' + key];\n        },\n        set: function (newValue) {\n          this['__' + key] = converter(newValue);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  };\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/common/converters.ts\n **/","/**\n * Created by Keyston on 4/2/2016.\n */\n\nexport type Rarity = 'high-end' | 'superior' | 'specialized' | 'gear-set' ;\nexport type StatType = 'firearms' | 'stamaina' | 'electronics';\n\nexport type ItemType = 'body-armor' | 'mask' | 'knee-pads'\n  | 'back-pack' | 'gloves' | 'holster'\n  | 'pistol' | 'assault-rifle'| 'smg'|'shotgun'|'sniper'|'lmg';\nexport type AttributeInheritance = 'native' | 'extra'\n// tslint:disable-next-line\nexport const AttributeInheritance = {\n  NATIVE: 'native' as AttributeInheritance,\n  EXTRA: 'extra' as AttributeInheritance\n\n};\n\nexport interface Dictionary<T> {\n  [index: string]: T;\n}\n\n\nexport type WeaponSlot = 'primary' | 'secondary'| 'sidearm';\n// tslint:disable-next-line\nexport const WeaponSlot = {\n  Primary: 'primary' as WeaponSlot,\n  Secondary: 'secondary' as WeaponSlot,\n  Sidearm: 'sidearm' as WeaponSlot\n};\n\n\nexport type GenderType = 'male' | 'female';\n\nconst ATTRIBUTE_OFFENSIVE = 'offensive';\nconst ATTRIBUTE_DEFENSIVE = 'defensive';\nconst ATTRIBUTE_UTILITY = 'utility';\nconst MAJOR_ATTRIBUTE = 'major';\nconst MINOR_ATTRIBUTE = 'minor';\n\nexport type AttributeKind = 'offensive' | 'defensive' | 'utility'\n// tslint:disable-next-line\nexport const AttributeKind = {\n  OFFENSIVE: 'offensive' as AttributeKind,\n  DEFENSIVE: 'defensive' as AttributeKind,\n  UTILITY: 'utility' as AttributeKind\n};\nexport type AttributeType  = 'major' | 'minor' | 'main' | 'skill'\n// tslint:disable-next-line\nexport const AttributeType = {\n  MAJOR: 'major' as AttributeType,\n  MINOR: 'minor' as AttributeType,\n  MAIN: 'main' as AttributeType,\n  SKILL: 'skill' as AttributeType\n};\n\n// https://basarat.gitbooks.io/typescript/content/docs/enums.html\n// tslint:disable-next-line\nexport const ItemType = {\n  BodyArmor: 'body-armor' as ItemType,\n  Mask: 'mask' as ItemType,\n  KneePads: 'knee-pads' as ItemType,\n  BackPack: 'back-pack' as ItemType,\n  Gloves: 'gloves' as ItemType,\n  Holster: 'holster' as ItemType,\n  Pistol: 'pistol' as ItemType,\n  AR: 'assault-rifle' as ItemType,\n  SMG: 'smg' as ItemType,\n  LMG: 'lmg' as ItemType,\n  Shotgun: 'shotgun' as ItemType,\n  Sniper: 'sniper' as ItemType\n\n};\n\nexport const GEAR_TYPES = [ItemType.BodyArmor, ItemType.Mask,\n  ItemType.KneePads, ItemType.BackPack,\n  ItemType.Gloves, ItemType.Holster];\nexport const WEAPON_TYPES = [ItemType.Pistol, ItemType.AR, ItemType.SMG, ItemType.LMG,\n  ItemType.Shotgun, ItemType.Sniper];\n\n\n// tslint:disable-next-line\nexport class AttributeRange {\n  low: number;\n  high: number;\n\n}\n\n// tslint:disable-next-line\nexport const Gender = {\n  MALE: 'male' as GenderType,\n  FEMALE: 'female' as GenderType\n};\n// tslint:disable-next-line\nexport const GearRarity = {\n  HIGH_END: 'high-end' as Rarity,\n  SUPERIOR: 'superior' as Rarity,\n  SPECIALIZED: 'specialized' as Rarity,\n  GEAR_SET: 'gear-set' as Rarity\n};\n\n\nexport class GearSupport {\n  rarity: Rarity;\n  level: number;\n  range: AttributeRange;\n\n}\n\n\ninterface GearValues {\n  131?: number[];\n  147?: number[];\n  165?: number[];\n}\n\nexport interface DivisionAttribute {\n  id: number;\n  name: string;\n  type: AttributeType;\n  format?: ValueFormat;\n  affects: Affects[];\n}\nexport interface GearAttribute extends DivisionAttribute {\n\n  name: string;\n  type: AttributeType;\n  kind: AttributeKind;\n\n  native: boolean;\n  mod: boolean;\n  supports: ItemType[];\n  values: GearValues;\n\n\n}\n\nexport interface WeaponAttribute extends DivisionAttribute {\n  id: number;\n  name: string;\n  type: AttributeType;\n  slots: string[];\n}\nexport type ValueFormat = 'percent' | 'number' | 'weapon' |'none'\n// tslint:disable-next-line\nexport const ValueFormat = {\n  PERCENT: 'percent' as ValueFormat,\n  NUMBER: 'number' as ValueFormat,\n  WEAPON: 'weapon' as ValueFormat,\n  NONE: 'none' as ValueFormat\n};\n\n\nexport interface DivisionItem {\n  id: number;\n  name: string;\n  icon?: string;\n  belongsTo?: string;\n  // talents?: Talent[];\n}\n\n\nexport class GearStats {\n  firearms: number;\n  stamina: number;\n  electronics: number;\n}\n\n\nexport interface ItemTalent {\n  id: string;\n  template: string;\n  affects?: Affects[];\n}\n\nexport interface WeaponTalent extends ItemTalent {\n\n  supports: ItemType[];\n}\n\n\nexport type Affects = 'crit_hit_chance' | 'crit_hit_damage' | 'weapon_damage'\n  | 'assault_rifle_damage' | 'shotgun_damage' | 'lmg_damage'\n  |'pistol_damage'|'sniper_damage'|'armor'|'health'|'skill_power'\n  |'firearms'|'stamina'|'electronics' | 'accuracy' | 'hip_accuracy' | 'magazine_size'\n  |'headshot_damage' |'rpm' | 'reload';\n// tslint:disable-next-line\nexport const Affects = {\n  normalize: function (value: string) {\n    return (value.replace(/-/g, '_').toLowerCase()) as Affects;\n  },\n  CRIT_HIT_CHANCE: 'crit_hit_chance'  as Affects,\n  CRIT_HIT_DAMAGE: 'crit_hit_damage'  as Affects,\n  WEAPON_DAMAGE: 'weapon_damage'  as Affects,\n  ASSAULT_RIFLE_DAMAGE: 'assault_rifle_damage'  as Affects,\n  SHOTGUN_DAMAGE: 'shotgun_damage'  as Affects,\n  LMG_DAMAGE: 'lmg_damage'  as Affects,\n  PISTOL_DAMAGE: 'pistol_damage' as Affects,\n  SNIPER_DAMAGE: 'sniper_damage' as Affects,\n  ARMOR: 'armor' as Affects,\n  HEALTH: 'health' as Affects,\n  SKILL_POWER: 'skill_power'  as Affects,\n  FIREARMS: 'firearms' as Affects,\n  STAMINA: 'stamina' as Affects,\n  ELECTRONICS: 'electronics' as Affects,\n  ACCURACY: 'accuracy' as Affects,\n  HIP_ACCURACY: 'hip_accuracy' as Affects,\n  MAGAZINE_SIZE: 'magazine_size' as Affects,\n  HEADSHOT_DAMAGE: 'headshot_damage' as Affects,\n  RELOAD: 'reload' as Affects,\n  RPM: 'rpm' as Affects\n\n};\n\nexport interface AffectsResults {\n\n  affects: Affects;\n  value: number;\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/common/models/common.ts\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'prettynumber'})\nexport class PrettyNumberPipe implements PipeTransform {\n\n  transform(value: any, args: any[]): string {\n    return value.toLocaleString();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/common/pipes/prettynumber.ts\n **/","/**\n * Created by Keyston on 4/2/2016.\n */\n\nimport {isString, isBlank} from '@angular/core/src/facade/lang';\nimport {PipeTransform, Pipe} from '@angular/core';\nimport {\n  InvalidPipeArgumentException\n} from\n  '@angular/common/src/pipes/invalid_pipe_argument_exception';\n\n\n@Pipe({name: 'ucfirst'})\nexport class UcFirstPipe implements PipeTransform {\n  transform(value: string, args: any[] = []): string {\n    if (isBlank(value)) return value;\n    if (!isString(value)) {\n      throw new InvalidPipeArgumentException(UcFirstPipe, value);\n    }\n    function apply(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    if (args.length) {\n      return value.split(args[0]).map(apply).join(args[0]);\n    }\n    return apply(value);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/common/pipes/ucfirst_pipe.ts\n **/","/**\n * Created by Keyston on 4/4/2016.\n */\n\nimport * as _ from 'lodash';\nimport {Observable} from 'rxjs/Observable';\nimport {isArray} from '@angular/core/src/facade/lang';\n\n\nexport const noop = () => {\n};\n\n\nexport function without(collection, element): () => any {\n\n  if (!collection) return noop;\n  let index = collection.indexOf(element);\n  if (index === -1 && element.hasOwnProperty('id'))\n    index = collection.indexOf(_.find(collection, {id: element.id}));\n  if (index > -1) collection.splice(index, 1);\n\n  return function () {\n    collection.splice(index, 0, element);\n  };\n\n}\n\nexport function numberRange(low, high) {\n  let step = 1;\n  // check if a decimal is present\n  if (low.toString().indexOf('.') !== -1 || high.toString().indexOf('.') !== -1) {\n    step = .5;\n  }\n  let range = [];\n\n  for (let i = low; i <= high; i += step) {\n\n    range.push(i);\n\n  }\n  return range;\n}\n\n\nconst SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\nexport function camelCase(name) {\n  return name.replace(SPECIAL_CHARS_REGEXP, function (_, separator, letter, offset) {\n    return offset ? letter.toUpperCase() : letter;\n  });\n}\n\nexport function asObservable<T>(subject: Observable<T>, once: boolean = false): Observable<T> {\n  function wrap(obs) {\n    return new Observable<T>(fn => obs.subscribe(fn));\n  }\n\n  return once\n    ? wrap(subject.first((x: any, idx, _) => isArray(x) ? !!(<any[]>x).length : !!x))\n    : wrap(subject);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/common/utils.ts\n **/","/**\n * Created by Keyston on 4/7/2016.\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {Attribute} from './attributes.model';\n@Pipe({\n  name: 'attributeRestrict',\n  pure: false\n})\nexport class AttributeRestrictPipe implements PipeTransform {\n\n  transform(values: Attribute[], [selection]): any {\n    if (selection.length === 1) {\n      return values;\n    }\n    let ids = selection.map((attr: Attribute) => attr.id);\n    return values.filter((attr: Attribute) => ids.indexOf(attr.id) === -1)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/attributes/attribute-restrict.pipe.ts\n **/","module.exports = \"<div class=\\\"clearfix\\\">\\n  <div class=\\\"attribute-value-wrapper\\\" *ngIf=\\\"!freeFormDisplay\\\">\\n\\n    <label editor>+{{attribute.value|attribute:attributeFormat}}</label>\\n    <select [(ngModel)]=\\\"attribute.value\\\" (ngModelChange)=\\\"onAttributeChange()\\\" editor=\\\"true\\\"\\n    >\\n      <option *ngFor=\\\"let attr of attributeValues\\\" [value]=\\\"attr\\\">{{attr|attribute:attributeFormat}}</option>\\n    </select>\\n\\n  </div>\\n\\n  <div class=\\\"attribute-value-wrapper\\\" *ngIf=\\\"freeFormDisplay\\\">\\n    <auto-resize-input [length]=\\\"maxInputLength\\\" inputType=\\\"number\\\" [format]=\\\"attributeFormat\\\"\\n                       [(ngModel)]=\\\"attribute.value\\\"\\n                       (input)=\\\"onAttributeInputChanged($event)\\\"></auto-resize-input>\\n  </div>\\n  <div class=\\\"attribute-title-wrapper\\\">\\n    <label editor>{{attributeName}}</label>\\n    <div editor=\\\"true\\\">\\n      <select [(ngModel)]=\\\"attribute.id\\\" (ngModelChange)=\\\"onAttributeChange()\\\">\\n        <option *ngFor=\\\"let attr of attributes\\\" [value]=\\\"attr.id\\\">{{attr.name}}</option>\\n      </select>\\n      <button (click)=\\\"onRemoveAttribute()\\\" *ngIf=\\\"canAddOrRemove\\\">-</button>\\n      <button (click)=\\\"onAddAttribute()\\\" *ngIf=\\\"canAddOrRemove\\\">+</button>\\n    </div>\\n\\n  </div>\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/attributes/attribute.component.html\n ** module id = 540\n ** module chunks = 2\n **/","module.exports = \"select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}select,label{float:left;width:61%}label{word-wrap:break-word}button{color:#eb7c09;font-weight:bold;width:20px;height:20px;float:right;text-align:center;margin-right:5px}button:active,button:focus{border:1px #eb7c09;outline-color:#eb7c09}.attributes-wrapper:first-child{margin-top:0}.attributes-title-wrapper{font-weight:600;margin-top:10px}.attribute-value-wrapper{color:#eb7c09;float:left;font-weight:600;margin-right:10px}.attribute-value-wrapper label{width:auto !important}.attribute-value-wrapper select{color:#eb7c09;font-weight:600;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3);width:34px}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/attributes/attribute.component.scss\n ** module id = 524\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\nimport {Component, Input, OnInit, Output, EventEmitter, OnDestroy} from '@angular/core';\nimport {NgFor, NgSwitch, NgSwitchWhen, NgSwitchDefault} from '@angular/common';\nimport {Attribute} from './attributes.model';\nimport {AttributePipe} from './attribute.pipe';\nimport {AttributesService, AttributeObservable} from '../../services/attributes.service';\nimport {\n  ItemType, AttributeType, Rarity, ValueFormat, GearAttribute, DivisionAttribute\n}\n  from '../../common/models/common';\nimport {Subscription} from 'rxjs/Subscription';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\nimport {EditorDirective} from '../../directives/editor';\nimport {AttributeRestrictPipe} from './attribute-restrict.pipe';\nimport {isNumber, isFunction} from '@angular/core/src/facade/lang';\nimport {numberRange} from '../../common/utils';\nimport {isWeaponType} from '../../services/item.service';\nimport {BooleanConverter, InputConverter, NumberConverter} from '../../common/converters';\nimport * as _ from 'lodash/index';\n\n\nexport interface AttributeMeta {\n  level: number;\n  rarity: Rarity;\n  belongsTo: ItemType;\n  weaponFamily?: string;\n}\n\n\nexport interface AttributeEvent {\n  attribute: Attribute;\n  attributeType: AttributeType;\n}\n\ntype AttributesById = {[id: string]: DivisionAttribute}\n\n@Component({\n  selector: 'item-attribute',\n  pipes: [AttributePipe, AttributeRestrictPipe],\n  template: require('./attribute.component.html'),\n  styles: [require('./attribute.component.scss')],\n  directives: [NgFor, AutoResizeInputComponent, EditorDirective,\n    NgSwitch, NgSwitchWhen, NgSwitchDefault]\n})\n\nexport class AttributeComponent implements OnInit, OnDestroy {\n  @Input() attribute: Attribute;\n  @Input() metadata: AttributeMeta;\n  @Input() restrict: Attribute[] = [];\n\n  @Input('attribute-type') attributeType: AttributeType;\n\n  @Input('maxlength') maxlength: any;\n\n\n  _restrictAttributeId: number;\n\n  @Output() added = new EventEmitter<AttributeEvent>();\n  @Output() removed = new EventEmitter<AttributeEvent>();\n\n\n  attributeFormat: ValueFormat;\n  selectedAttribute: DivisionAttribute;\n  _attributes: DivisionAttribute[];\n  attributeName: string = '';\n\n\n  @Input('attributes-provider') attributesProvider: AttributeObservable;\n  private _attributesById: AttributesById = {};\n\n  private _subscription: Subscription;\n\n\n  constructor(private _attributesService: AttributesService) {\n\n\n  }\n\n  get maxInputLength() {\n\n    return (this.maxlength && isNumber(this.maxlength))\n      ? this.maxlength : (isFunction(this.maxlength)) ? this.maxlength() : 4;\n  }\n\n  ngOnInit(): any {\n\n\n    let meta = this.metadata;\n\n    let provider = this.attributesProvider\n      ? this.attributesProvider\n      : this._attributesService.getFor(meta.belongsTo, this.attributeType);\n    this._subscription = provider.subscribe(data => {\n      this._attributesById = {};\n      this._attributes = data;\n      this.attribute.id = undefined;\n      data.forEach((attr: DivisionAttribute) => this._attributesById[attr.id] = attr);\n      if (data.length) {\n\n        this.onAttributeChange();\n      }\n\n    });\n\n  }\n\n  get restrictAttributeId() {\n    return this._restrictAttributeId;\n  }\n\n  @Input('restrict-attribute')\n  @InputConverter(NumberConverter)\n  set restrictAttributeId(value) {\n\n    if (this._restrictAttributeId !== value) {\n      this.attribute.id = void 0;\n    }\n    this._restrictAttributeId = value;\n    let attrs = this.attributes;\n    if (!this.attribute.id && attrs.length) {\n      this._commitAttributeChange(attrs[0].id);\n    }\n  }\n\n  get attributes() {\n    let values = this._attributes ?\n      isNaN(this.restrictAttributeId) || !this.restrictAttributeId\n        ? this._attributes : _.filter(this._attributes, {id: this.restrictAttributeId})\n      : [];\n\n    // check to see if we are restricting the attribute selection\n    // if so then commit the change so that when not in edit mode the view\n    // updates correctly\n    if (values.length === 1) {\n\n      this._commitAttributeChange(values[0].id);\n    }\n    return values;\n  }\n\n  get canAddOrRemove() {\n    return !isWeaponType(this.metadata.belongsTo);\n  }\n\n  get attributeDef() {\n    if (!this.attribute.id) {\n      return void 0;\n    }\n    return this._attributesById[this.attribute.id];\n  }\n\n\n  get attributeValues() {\n    if (!this.attribute.id) {\n      return [];\n    }\n    // this.attributeDef.values[this.metadata.level];\n    let [low, high] = [1, 2];\n\n    return numberRange(low, high);\n\n  }\n\n\n  onAttributeChange() {\n    // ensure that we always select the first entry\n    // when there is only one entry left no matter if we\n    // switch from another attribute set\n    if (!this.attribute.id || this.attributes.length === 1) {\n      this.attribute.id = this.attributes[0].id;\n    }\n    this._commitAttributeChange(this.attribute.id);\n\n  }\n\n  _commitAttributeChange(id) {\n    this.attribute.id = id;\n    this.selectedAttribute = this._attributesById[id];\n\n    this.attributeName = this.selectedAttribute.name;\n\n    this.attributeFormat = this.selectedAttribute.format || ValueFormat.PERCENT;\n  }\n\n  onAddAttribute() {\n    this.added.emit({\n      attributeType: this.attributeType,\n      attribute: {\n        id: this.attribute.id,\n        value: this.attribute.value\n      }\n    });\n  }\n\n  onRemoveAttribute() {\n    this.removed.emit({\n      attribute: this.attribute,\n      attributeType: this.attributeType\n    });\n  }\n\n  get freeFormDisplay() {\n    // this.attributeDef ? !this.attributeDef.values : true;\n    return true;\n  }\n\n  onAttributeInputChanged(value) {\n    this.attribute.value = value;\n  }\n\n  ngOnDestroy(): any {\n    this._subscription.unsubscribe();\n  }\n\n  /*\n   get attributes() {\n   return this._attributesService.getDescriptorFor(this.belongsTo, this.attributeType)\n   }   */\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/attributes/attribute.component.ts\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {ValueFormat} from '../../common/models/common';\n\n\nconst WEAPON_THRESHOLD = 10000;\nconst WEAPON_BASE = 10;\n\n@Pipe({name: 'attribute'})\nexport class AttributePipe implements PipeTransform {\n\n  transform(value: number, format: ValueFormat = ValueFormat.NUMBER): string {\n\n    if (format === ValueFormat.NONE) return String(value).trim();\n    let tail = format === ValueFormat.PERCENT ? '%' : '';\n    if (!value || isNaN(value)) return '0' + tail;\n\n\n    if (format === ValueFormat.PERCENT) {\n      return value + '%';\n    }\n    if (format === ValueFormat.WEAPON) {\n      return value >= WEAPON_THRESHOLD ?\n      (WEAPON_BASE + ((value - WEAPON_THRESHOLD) * .001)).toFixed(1) + 'k' :\n        value.toLocaleString();\n    }\n    return value.toLocaleString();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/attributes/attribute.pipe.ts\n **/","module.exports = \":host{position:relative;display:block}.section-wrapper{min-height:71px}.button-bar{position:absolute;top:0;right:-85px}.button-bar button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:70px;color:#eb7c09}.attributes-wrapper:first-child{margin-top:0}.attributes-title-wrapper{font-weight:600;margin-top:10px}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/attributes/attributes.component.scss\n ** module id = 525\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\n\nimport {Component, Input, ElementRef} from '@angular/core';\nimport {Attributes} from './attributes.model';\nimport {AttributeComponent, AttributeMeta, AttributeEvent} from './attribute.component';\nimport {NgFor} from '@angular/common';\nimport {without} from '../../common/utils';\nimport {AttributeType} from '../../common/models/common';\nimport {EditorDirective} from '../../directives/editor';\nimport {InputConverter, BooleanConverter} from '../../common/converters';\n\n\n@Component({\n\n  selector: 'item-attributes',\n\n  templateUrl: 'app/components/attributes/attributes.component.html',\n\n  styles: [require('./attributes.component.scss')],\n  directives: [NgFor, AttributeComponent, EditorDirective]\n})\nexport class AttributesComponent {\n\n  @Input('data') attributes: Attributes;\n  @Input('gear-metadata') metadata: AttributeMeta;\n  @Input('can-add')\n  @InputConverter(BooleanConverter)\n  canAdd: boolean = true;\n\n  constructor(private _elementRef: ElementRef) {\n\n  }\n\n\n  get majorAttributes() {\n    return this.attributes ? this.attributes.major : [];\n  }\n\n  get minorAttributes() {\n    return this.attributes ? this.attributes.minor : [];\n\n  }\n\n  get skillAttributes() {\n    return this.attributes ? this.attributes.skill : [];\n  }\n\n\n  onRemoveAttribute(event: AttributeEvent) {\n\n    without(this.attributes[event.attributeType], event.attribute);\n    this._dispatchEvent('attributeRemoved', event);\n  }\n\n  onAddAttribute(event: AttributeEvent) {\n\n    this.attributes[event.attributeType]\n      .push(event.attribute);\n    this._dispatchEvent('attributeAdded', event);\n\n  }\n\n  onAddAttributeType(attributeType: AttributeType) {\n    this.attributes[attributeType].push({\n      value: 0\n    });\n  }\n\n  private _dispatchEvent(type: string, event: AttributeEvent) {\n    this._elementRef.nativeElement.dispatchEvent(new CustomEvent(type, {\n\n      detail: {\n        attribute: event.attribute,\n        attributeType: event.attributeType\n      }\n    }));\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/attributes/attributes.component.ts\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\n\nexport interface Attributes {\n  major?: Attribute[];\n  minor?: Attribute[];\n  skill?: Attribute[];\n}\n\n\nexport class Attribute {\n  id: number;\n  value: number;\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/attributes/attributes.model.ts\n **/","/**\n * Created by Keyston on 5/17/2016.\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {AuthService, AuthType} from '../../services/auth.service.ts';\nimport {RouteParams} from '@angular/router-deprecated';\n\n@Component({\n  selector: 'auth-callback',\n  template: require('./auth.component.html')\n})\nexport class AuthCallbackComponent implements OnInit {\n\n\n  constructor(private _loginService: AuthService, private _routeParams: RouteParams) {\n\n\n  }\n\n  ngOnInit(): any {\n    let loginStrategy = <AuthType>this._routeParams.get('strategy');\n    if (loginStrategy) {\n      let strategy = this._loginService.authFor(loginStrategy);\n      strategy.callback(this._routeParams);\n    }\n  }\n\n \n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/auth/auth-callback.component.ts\n **/","module.exports = \"<div id=\\\"login-container\\\">\\n  <button (click)=\\\"login('psn')\\\">PSN</button>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/auth/auth.component.html\n ** module id = 361\n ** module chunks = 2\n **/","import {AuthService, AuthType} from '../../services/auth.service';\nimport {Component, OnInit} from '@angular/core';\n/**\n * Created by Keyston on 5/17/2016.\n */\n\n@Component({\n  selector: 'auth',\n  template: require('./auth.component.html')\n})\nexport class AuthComponent {\n\n  constructor(private _loginService: AuthService) {\n\n  }\n\n  login(type: AuthType) {\n    let strategy = this._loginService.authFor(type);\n    strategy.login().subscribe(\n      res => console.log(res),\n      error => console.error(error),\n      () => console.log('Completed login')\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/auth/auth.component.ts\n **/","module.exports = \"input,.placeholder{color:#eb7c09;float:left;width:12px;font-weight:600;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3)}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button,.placeholder::-webkit-outer-spin-button,.placeholder::-webkit-inner-spin-button{margin:0}.hidden{display:none}label{margin-right:10px}.edit-mode input,.edit-mode div.placeholder,.edit-mode label{border-bottom:1px dotted #888 !important}input,div.placeholder{background:none;line-height:15px;border:0}input.inputted{color:#ff0000;border-bottom:0;background:transparent}div.placeholder{display:inline-block;visibility:collapse}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/auto-resize-input/auto-resize-input.component.scss\n ** module id = 526\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/6/2016.\n */\n\n// http://jsfiddle.net/ARTsinn/QJSfa/\nimport {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  OnInit,\n  Directive,\n  HostListener,\n  ElementRef,\n  ViewChild,\n  NgZone,\n  OnDestroy\n} from '@angular/core';\nimport {ControlValueAccessor, NgControl, FORM_DIRECTIVES} from '@angular/common';\nimport * as _ from 'lodash/index';\nimport {ValueFormat} from '../../common/models/common';\nimport {AttributePipe} from '../attributes/attribute.pipe';\nimport {EditorService} from '../../services/editor-service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {InputConverter, NumberConverter} from '../../common/converters';\n\n\n// http://jbavari.github.io/blog/2015/10/21/angular-2-and-ng-model/\n// https://github.com/driftyco/ionic/blob/2.0/ionic/components/searchbar/searchbar.ts\n@Directive({\n  selector: '.auto-resize-input'\n\n})\nexport class AutoResizeInput {\n\n\n  constructor(private _elementRef: ElementRef) {\n\n\n  }\n\n  get nativeElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * @private\n   * Don't send the input's input event\n   */\n  @HostListener('input', ['$event'])\n  @HostListener('change', ['$event'])\n  private stopInput(ev) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n\n}\n\n@Component({\n  selector: 'auto-resize-input',\n  template: `<div [ngClass]=\"{'edit-mode':allowEditing}\" class='clearfix'>\n        <label  [ngClass]='{hidden:editing}' (click)='onClicked()'>\n          {{prepend}}{{value|attribute:format}}\n        </label>\n        <input [ngClass]='{hidden:!editing}' autofocus [attr.type]='inputType'\n         min=\"0\" max=\"9999\"\n         [attr.step]=\"numberStep\" [attr.size]='length' [value]='value' \n         (input)='onInputChanged($event)'  (focus)='onInputFocused()' \n         class='auto-resize-input' (blur)='onInputBlurred()'/>\n    </div>\n     `,\n  pipes: [AttributePipe],\n  directives: [FORM_DIRECTIVES, AutoResizeInput],\n  styles: [require('./auto-resize-input.component.scss')]\n})\nexport class AutoResizeInputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n\n  @ViewChild(AutoResizeInput) autoResizeInput: AutoResizeInput;\n  @Input() ngModel: string;\n\n  @Input('resize-increment')\n  @InputConverter(NumberConverter) resizeIncrement: number = 10;\n  @Input() length: number = 4;\n  @Input() inputType: string = 'number';\n  @Input() format: ValueFormat;\n  @Input() prepend: string = '+';\n  value: string;\n\n  elementRef: ElementRef;\n  placeholderContentName: string;\n  editing: boolean = false;\n  @Output() input = new EventEmitter<string>();\n  ngZone: NgZone;\n  allowEditing: boolean;\n\n  private _editorSubscription: Subscription;\n\n  constructor(elementRef: ElementRef, ngControl: NgControl, ngZone: NgZone,\n              private _editorService: EditorService) {\n    ngControl.valueAccessor = this;\n    this.elementRef = elementRef;\n    this.ngZone = ngZone;\n    this._editorSubscription = this._editorService.subscribe((value) => this.allowEditing = value);\n\n  }\n\n  get numberStep() {\n    return this.format === ValueFormat.PERCENT ? '0.5' : '1';\n  }\n\n  ngOnInit(): any {\n\n    this.value = this.ngModel;\n    this.onChange(this.value);\n    let attributes = this.elementRef.nativeElement.attributes;\n    let nodeName = _.find(attributes, (attr: any) => attr.nodeName.indexOf('_nghost-') !== -1).nodeName;\n\n    this.placeholderContentName = nodeName.replace('_nghost-', '_ngcontent-');\n\n    // _nghost-juu-\n\n  }\n\n\n  ngOnDestroy(): any {\n    this._editorSubscription.unsubscribe();\n  }\n\n  /**\n   * @private\n   * Write a new value to the element.\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * @private\n   */\n  onChange = (_: any) => {\n  };\n\n  /**\n   * @private\n   */\n  onTouched = () => {\n  };\n\n  /**\n   * @private\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * @private\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n\n  onClicked() {\n\n    if (this._editorService.state) {\n\n\n      this.editing = true;\n\n      let inputElement = this.autoResizeInput.nativeElement;\n\n      let self = this;\n      this.ngZone.run(() => {\n        if (inputElement) {\n          inputElement.focus();\n          inputElement.select();\n        }\n        self.resize();\n\n      });\n    }\n\n  }\n\n  onInputChanged(event) {\n    let value = event.target.value;\n    if (this.length && value.length > this.length) {\n      value = value.substr(0, this.length);\n    }\n\n    // make sure its an number\n    if (this.inputType === 'number')\n      value = +value;\n    if (this.value !== value) {\n      this.value = value;\n      this.input.emit(this.value);\n      this.resize();\n\n    }\n\n\n  }\n\n  onInputFocused() {\n\n  }\n\n  onInputBlurred() {\n    this.resize();\n    this.editing = false;\n  }\n\n  onInputKeydown(event) {\n    if (event.target.value.length > this.length) {\n      event.target.value = event.target.value.substr(0, this.length);\n    }\n    // this.resize(this.resizeIncrement);\n  }\n\n  private getElementWidth(nativeElement: any): number {\n\n    return nativeElement.offsetWidth;\n  }\n\n  private setElementWidth(nativeElement: any, width: number) {\n    nativeElement.style.width = width + 15 + 'px';\n  }\n\n\n  private resize() {\n    /* pad = (this.value.length >= this.length) ? 0 : pad;\n\n     let div = document.createElement('div');\n     div.className = 'placeholder';\n     div.innerHTML = this.value;\n     div.setAttribute(this.placeholderContentName, '');\n     let parentNode = this.elementRef.nativeElement;\n     parentNode.appendChild(div);\n     */\n\n    // convert to string\n\n    let value = this.value + '';\n    this.setElementWidth(this.autoResizeInput.nativeElement,\n      ((value.length + 1) * this.resizeIncrement) + 2);\n    // parentNode.removeChild(div);\n\n  }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/auto-resize-input/auto-resize-input.component.ts\n **/","module.exports = \"<div id=\\\"build-stats-banner\\\" class=\\\"clearfix\\\">\\n\\n\\n  <div id=\\\"banner-columns\\\">\\n\\n    <div id=\\\"banner-name\\\">\\n      <label editor>{{inventory.name}}</label>\\n\\n\\n      <input editor=\\\"true\\\" type=\\\"text\\\" [(ngModel)]=\\\"inventory.name\\\"\\n             (ngModelChange)=\\\"onBuildNameChanged($event)\\\"/>\\n\\n    </div>\\n    <div class=\\\"column\\\">\\n      <label>Primary DPS</label>\\n      <span>{{dps|prettynumber}}</span>\\n\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n        Firearms <img src=\\\"app/assets/images/icon-stat-firearms.png\\\"/>{{firearms}}\\n      </div>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <label>Health</label>\\n\\n      <span>{{health|prettynumber}}</span>\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n        Stamina <img src=\\\"app/assets/images/icon-stat-stamina.png\\\"/>{{stamina}}\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"column\\\">\\n      <label>Skill Power</label>\\n\\n      <span>{{skillpower|prettynumber}}</span>\\n      <div class=\\\"bottom\\\">\\n        <hr>\\n\\n        Electronics <img src=\\\"app/assets/images/icon-stat-electronics.png\\\"/>{{electronics}}\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div id=\\\"inventory-actions\\\" *ngIf=\\\"ownsInventory\\\">\\n    <button (click)=\\\"save()\\\">SAVE</button>\\n    <button (click)=\\\"reset()\\\">NEW</button>\\n    <button (click)=\\\"onToggleEditor()\\\">{{currentEditorState}}</button>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/build-stats-banner/build-stats-banner.component.html\n ** module id = 541\n ** module chunks = 2\n **/","module.exports = \"#build-stats-banner{width:auto;margin-bottom:15px}#banner-columns{max-width:1080px;float:left}.column{color:#fff;background-color:rgba(60,61,55,0.4);width:344px;float:left;margin-right:16px;font-family:Borda, serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;text-shadow:0 0 2px rgba(0,0,0,0.3)}.column:last-child{margin-right:0px}.column label{text-align:center;display:block;width:100%}.column span{display:block;text-align:center;font-size:30px;font-weight:700}.column img{display:inline-block;width:25px;position:relative;bottom:-6px}.column .bottom{line-height:25px;text-align:center;width:80%;margin:0 auto;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d}.column .bottom hr{display:block;height:1px;border:0;border-top:1px solid rgba(83,74,75,0.4);margin:0 auto;padding:0;box-shadow:0px 1px 1px 0px rgba(0,0,0,0.3)}.column .bottom div{position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}#inventory-actions{margin-top:45px;float:left}#inventory-actions button{cursor:pointer;background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:100px;color:#fff}#banner-name{text-align:center;margin-bottom:10px}#banner-name input,#banner-name label{font-weight:600;background:none;border:0;color:white;font-family:Borda, serif;font-size:25px;letter-spacing:1.05px;line-height:15px;text-shadow:0 0 2px rgba(0,0,0,0.3);text-align:center}#banner-name label{padding:10px;display:block}#banner-name input{width:80%;border-bottom:1px dotted #888 !important}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/build-stats-banner/build-stats-banner.component.scss\n ** module id = 527\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 5/12/2016.\n */\nimport {Component, OnInit} from '@angular/core';\nimport {BuildStatsService, InventoryCalculator} from '../../services/build-stats.service';\nimport {InventoryService} from '../../services/inventory.service';\nimport {PrettyNumberPipe} from '../../common/pipes/prettynumber';\nimport {Weapon} from '../inventory/inventory.model';\nimport {EditorService} from '../../services/editor-service';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\nimport {EditorDirective} from '../../directives/editor';\n\n\n@Component({\n  selector: 'build-stats-banner',\n  template: require('./build-stats-banner.component.html'),\n  styles: [require('./build-stats-banner.component.scss')],\n  pipes: [PrettyNumberPipe],\n  directives: [AutoResizeInputComponent, EditorDirective]\n})\nexport class BuildStatsBannerComponent {\n\n  private _calc: InventoryCalculator;\n  private _selectedWeapon: Weapon;\n\n  constructor(private _editorService: EditorService,\n              private _buildStatsService: BuildStatsService,\n              private _inventoryService: InventoryService) {\n\n    this._inventoryService.weaponSelected\n      .subscribe(weapon => this._onWeaponSelected(weapon));\n  }\n\n\n  get dps() {\n    return this._selectedWeapon\n      ? this._calc.caculateDps(this._selectedWeapon)\n      : 0;\n  }\n\n  get firearms() {\n    return this._calc ? this._calc.firearms : 0;\n  }\n\n  get health() {\n    return this._calc ? this._calc.health : 0;\n  }\n\n  get stamina() {\n    return this._calc ? this._calc.stamina : 0;\n  }\n\n  get skillpower() {\n    return this._calc ? this._calc.skillpower : 0;\n  }\n\n  get electronics() {\n    return this._calc ? this._calc.electronics : 0;\n  }\n\n  _onWeaponSelected(weapon?: Weapon) {\n    this._calc = this._buildStatsService\n      .create(this._inventoryService.inventory);\n    this._selectedWeapon = weapon;\n\n  }\n\n  save() {\n    this._inventoryService.save();\n  }\n\n  reset() {\n    this._inventoryService.reset();\n  }\n\n  get ownsInventory() {\n    return this._inventoryService.owns();\n  }\n\n  get currentEditorState() {\n    return this._editorService.state ? 'Editor On' : 'Editor Off';\n  }\n\n  onBuildNameChanged(name) {\n    this.inventory.name = name;\n  }\n\n  onToggleEditor() {\n    this._editorService.toggle();\n  }\n\n  get inventory() {\n    return this._inventoryService.inventory;\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/build-stats-banner/build-stats-banner.component.ts\n **/","module.exports = \"<div class=\\\"inventory-item-image {{item.rarity}}\\\">\\n  <div class=\\\"image\\\" [ngStyle]=\\\"icon | async\\\"></div>\\n  <div class=\\\"set-image\\\" [ngStyle]=\\\"gearSetIcon | async\\\" *ngIf=\\\"belongsToSet\\\"></div>\\n  <!--<div class=\\\"slots\\\">\\n    <div *ngFor=\\\"let rarity of modSlotsRarities\\\" [ngClass]=\\\"rarity\\\"></div>\\n  </div> -->\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item-image/inventory-item-image.component.html\n ** module id = 542\n ** module chunks = 2\n **/","module.exports = \".inventory-item-image{width:164px;height:87px;display:block;float:left;position:relative;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d}.inventory-item-image.high-end{background-color:rgba(255,175,16,0.56)}.inventory-item-image.superior{background-color:rgba(175,66,150,0.56)}.inventory-item-image.specialized{background-color:rgba(80,128,255,0.56)}.inventory-item-image.gear-set{background-color:rgba(1,191,97,0.56)}.inventory-item-image .image{position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:152px;height:75px;display:block;background:white;mask-type:luminance;margin:0 auto;-webkit-mask-size:152px 75px}.inventory-item-image.gear-set .image{-webkit-mask-position-x:-38px}.inventory-item-image .set-image{position:absolute;mask-type:luminance;margin:0 auto;background:white;width:75px;height:75px;opacity:.3;top:7%;right:10px;-webkit-mask-size:75px 75px}.slots{position:absolute;bottom:0}.slots div{width:31px;height:6px;display:inline-block;margin-right:3px}.slots div.high-end{background-color:#ffaf10}.slots div.superior{background-color:#af4296}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item-image/inventory-item-image.component.scss\n ** module id = 528\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/26/2016.\n */\nimport {Component, Input} from '@angular/core';\nimport {Gear} from '../../item-overview/gear.model';\nimport {ModSlotService} from '../../../services/modslots.service';\nimport * as _ from 'lodash/index';\nimport {ItemsService} from '../../../services/item.service';\nimport {GearRarity} from '../../../common/models/common';\n\n@Component({\n  selector: 'inventory-item-image',\n  styles: [require('./inventory-item-image.component.scss')],\n  template: require('./inventory-item-image.component.html')\n\n})\nexport class InventoryItemImageComponent {\n  @Input() item: Gear;\n\n  constructor(private _modSlotService: ModSlotService, private _itemService: ItemsService) {\n  }\n\n  get icon() {\n\n\n    let style = {};\n    return !this.item ? style :\n      this._itemService\n        .imageResolve(this.item).map(icon => {\n        style['-webkit-mask-image'] = `url('${icon.primary}')`;\n        return style;\n      });\n\n\n  }\n\n  get belongsToSet() {\n    return this.item && this.item.rarity === GearRarity.GEAR_SET;\n  }\n\n  get gearSetIcon() {\n\n\n    let style = {};\n    return !this.item ? style :\n      this._itemService\n        .imageResolve(this.item).map(icon => {\n        style['-webkit-mask-image'] = `url('${icon.secondary}')`;\n        return style;\n      });\n\n\n  }\n\n  get modSlotsRarities() {\n    let slotTypes = this._modSlotService.getTypes(this.item.type);\n    return (!this.item || !this.item.mods)\n      ? [] :\n      this.item.mods.map(m => _.find(slotTypes, {id: m.id}).rarity);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory-item-image/inventory-item-image.component.ts\n **/","module.exports = \"<div class=\\\"inventory-item-row clearfix\\\">\\n  <div class=\\\"left\\\">\\n    <div class=\\\"item-image\\\">\\n      <inventory-item-image [item]=\\\"item\\\"></inventory-item-image>\\n    </div>\\n    <div class=\\\"item-meta\\\" [ngSwitch]=\\\"isWeapon\\\">\\n      <div class=\\\"title\\\">{{item.name}}</div>\\n      <div class=\\\"dps\\\" *ngSwitchWhen=\\\"true\\\">\\n        <span>{{weaponDps|prettynumber}}</span>\\n        <label>DPS</label>\\n      </div>\\n      <div class=\\\"armor\\\" *ngSwitchDefault=\\\"\\\">\\n        <span>{{item.armor|prettynumber}}</span>\\n        <label>ARM</label>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n  <div class=\\\"score\\\">\\n    <label>SCORE</label>\\n    <span>{{item.score}}</span>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item-row/inventory-item-row.component.html\n ** module id = 543\n ** module chunks = 2\n **/","module.exports = \".inventory-item-row .left{width:425px;margin-right:5px}.inventory-item-row .left,.inventory-item-row .score{float:left;height:73px;background-color:rgba(110,118,120,0.3)}.inventory-item-row .score{width:68px;text-align:center;font-family:'Borda', serif;color:white;padding-top:5px}.inventory-item-row .score label{font-size:18px;font-weight:600}.inventory-item-row .score span{font-weight:700;font-size:35px;line-height:32px}.item-image{height:73px;float:left;transform-origin:top left;transform:scale(.83908)}.item-meta{float:left;color:white;padding-top:5px;font-family:'Borda', serif;margin-left:-20px;text-shadow:1px 1px 2px rgba(0,0,0,0.6)}.item-meta .title{font-size:20px;line-height:20px}.item-meta .armor label{font-size:20px;font-weight:700}.item-meta .armor span{font-size:32px;font-weight:700}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item-row/inventory-item-row.component.scss\n ** module id = 529\n ** module chunks = 2\n **/","import {Component, Input, OnInit} from '@angular/core';\nimport {Gear} from '../../item-overview/gear.model';\nimport {PrettyNumberPipe} from '../../../common/pipes/prettynumber';\nimport {InventoryItemImageComponent} from '../inventory-item-image/inventory-item-image.component';\n\nimport {isWeaponType} from '../../../services/item.service';\nimport {InventoryItem, Weapon} from '../inventory.model';\nimport {InventoryService} from '../../../services/inventory.service';\nimport {BuildStatsService, WeaponStatsCalculator} from '../../../services/build-stats.service';\n\n@Component({\n  selector: 'inventory-item-row',\n  styles: [require('./inventory-item-row.component.scss')],\n  template: require('./inventory-item-row.component.html'),\n  pipes: [PrettyNumberPipe],\n  directives: [InventoryItemImageComponent]\n\n})\nexport class InventoryItemRowComponent implements OnInit {\n\n  @Input() item: InventoryItem;\n  _calc: WeaponStatsCalculator;\n\n  constructor(private _buildStatsService: BuildStatsService,\n              private _inventoryService: InventoryService) {\n\n  }\n\n\n  ngOnInit(): any {\n    this._calc = this._buildStatsService\n      .createForWeapon(<Weapon>this.item);\n  }\n\n  get weaponDps() {\n    return this._calc.dps;\n  }\n\n  get isGear() {\n    return !this.isWeapon;\n  }\n\n  get isWeapon() {\n    return isWeaponType(this.item.type);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory-item-row/inventory-item-row.component.ts\n **/","module.exports = \"<div class=\\\"inventory-item clearfix\\\" *ngIf=\\\"!!item\\\">\\n  <inventory-item-image [item]=\\\"item\\\"></inventory-item-image>\\n\\n  <div class=\\\"inventory-item-info\\\" *ngIf=\\\"isWeapon\\\">\\n    <ul class=\\\"inventory-item-talents\\\">\\n\\n      <li *ngFor=\\\"let talent of item.talents\\\" [ngClass]=\\\"{active:talent.unlocked}\\\"\\n          [ngStyle]=\\\"talentIconStyle(talent)\\\"\\n      ></li>\\n\\n\\n    </ul>\\n  </div>\\n  <div class=\\\"inventory-item-info\\\" *ngIf=\\\"isGear\\\">\\n    <ul class=\\\"inventory-item-stats\\\">\\n\\n      <li *ngFor=\\\"let stat of statNames\\\"\\n          class=\\\"{{stat}}\\\"\\n          [ngClass]=\\\"{active:hasStat(stat)}\\\"></li>\\n\\n\\n    </ul>\\n    <div class=\\\"inventory-item-armor\\\">\\n      <label>ARMOR</label>\\n      <span>{{item.armor}}</span>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item/inventory-item.component.html\n ** module id = 544\n ** module chunks = 2\n **/","module.exports = \".inventory-item{width:344px;background-color:rgba(0,0,0,0.3);height:87px}.inventory-item-info{width:180px;float:left}.inventory-item-talents{list-style:none;width:180px;display:inline-block;float:left;padding:0;margin:0}.inventory-item-talents li{width:90px;height:90px;opacity:0.2;background:#fff;mask-type:luminance;float:left;-webkit-mask-size:90px 90px}.inventory-item-talents li.active{opacity:0.7}.inventory-item-stats{list-style:none;width:45px;display:inline-block;float:left;padding:0;margin:0}.inventory-item-stats li{height:28px;opacity:0.2}.inventory-item-stats li.active{background-color:rgba(82,83,75,0.25);opacity:1}.inventory-item-stats .firearms{background:url(\\\"app/assets/images/icon-stat-firearms.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-stats .stamina{background:url(\\\"app/assets/images/icon-stat-stamina.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-stats .electronics{background:url(\\\"app/assets/images/icon-stat-electronics.png\\\") center center no-repeat;background-size:21px 21px}.inventory-item-armor{color:#cccdc8;text-align:center;font-family:\\\"Borda\\\";font-weight:700;padding-top:5px;text-shadow:0px -1px 1px rgba(150,150,150,0.25)}.inventory-item-armor label{font-size:18px;display:block}.inventory-item-armor span{font-size:42px;line-height:25px}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-item/inventory-item.component.scss\n ** module id = 530\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/26/2016.\n */\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Gear} from '../../item-overview/gear.model';\nimport {InventoryItemImageComponent} from '../inventory-item-image/inventory-item-image.component';\nimport {ItemsService, isWeaponType} from '../../../services/item.service';\nimport {ItemType, GearRarity, DivisionItem, WeaponSlot, ItemTalent} from '../../../common/models/common';\nimport {InventoryService} from '../../../services/inventory.service';\nimport {InventoryItem, InventoryItemType, Weapon} from '../inventory.model';\nimport {Talent} from '../../talents/talent.model';\nimport * as _ from 'lodash/index';\n\n\n@Component({\n  selector: 'inventory-item',\n  styles: [require('./inventory-item.component.scss')],\n  template: require('./inventory-item.component.html'),\n  directives: [InventoryItemImageComponent]\n\n})\nexport class InventoryItemComponent implements OnInit {\n\n\n  @Input() item: InventoryItem;\n\n  @Input('item-type') itemType: ItemType;\n  @Input('inventory-item-type') inventoryItemType: InventoryItemType;\n  @Input('weapon-slot') weaponSlot: WeaponSlot;\n\n\n  constructor(private _itemsService: ItemsService, private _inventoryService: InventoryService) {\n  }\n\n\n  get isWeapon() {\n    return isWeaponType(this.itemType);\n  }\n\n  get isGear() {\n    return !isWeaponType(this.itemType);\n  }\n\n  ngOnInit(): any {\n    /*\n     if (!this.item)this._itemsService\n     .getDescriptorFor(this.itemType)\n     .subscribe(descriptor => {\n\n     let first = <DivisionItem>descriptor.items[GearRarity.SUPERIOR][0];\n     let isWeapon = isWeaponType(this.itemType);\n     let empty = isWeapon\n     ? this._weaponDefaultState(descriptor.talents, first.name)\n     : this._gearDefaultState(first.name);\n\n\n     if (isWeapon) {\n     this._inventoryService.updateWeapon(this.weaponSlot, <Weapon>empty);\n     } else {\n     this._inventoryService.update(this.itemType, empty);\n     }\n     }\n     );*/\n  }\n\n\n  talentIconStyle(talent: Talent) {\n\n\n    let style = {};\n    let icon = this._itemsService\n      .talentImageResolve(talent.id);\n    style['-webkit-mask-image'] = `url('${icon.primary}')`;\n    return style;\n\n  }\n\n  hasStat(name) {\n    return !this.item ? false : (<Gear>this.item).stats[name] > 0;\n  }\n\n  get statNames() {\n    return ['firearms', 'stamina', 'electronics'];\n  }\n\n  private _weaponDefaultState(talents: ItemTalent[], name: string): Weapon {\n    let _talents = _.chain(talents).take(2).map(talent => {\n      return {id: talent.id};\n    }).value();\n    return {\n      rarity: GearRarity.SUPERIOR,\n      type: this.itemType,\n      name: name,\n      score: 131,\n\n      stats: {\n        damage: 8900\n\n      },\n      mods: [],\n      talents: _talents\n    };\n  }\n\n  private _gearDefaultState(name: string): Gear {\n    let gear = {\n      rarity: GearRarity.SUPERIOR,\n      type: this.itemType,\n      name: name,\n      score: 131,\n      stats: {\n        firearms: 0,\n        stamina: 0,\n        electronics: 0\n\n      },\n      armor: 100,\n      attributes: {\n        major: [],\n        minor: [],\n        skill: []\n\n      },\n      mods: [],\n      talents: []\n    };\n    let keys = ['firearms', 'stamina', 'electronics'];\n    let key = keys[_.random(0, keys.length - 1)];\n    gear.stats[key] = _.random(450, 650);\n\n    return gear;\n  }\n}\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory-item/inventory-item.component.ts\n **/","module.exports = \"<div id=\\\"inventory-gear-items\\\" class=\\\"clearfix\\\">\\n  <div id=\\\"items-list\\\">\\n    <inventory-item-row [item]=\\\"item\\\" *ngFor=\\\"let item of items\\\"></inventory-item-row>\\n  </div>\\n\\n  <div id=\\\"item-overview\\\" *ngIf=\\\"activeItem\\\">\\n    <item-overview [item]=\\\"activeItem\\\"></item-overview>\\n  </div>\\n\\n  <button id=\\\"back-button\\\" (click)=\\\"back()\\\">&#8678; GO BACK</button>\\n\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-items/inventory-items.component.html\n ** module id = 545\n ** module chunks = 2\n **/","module.exports = \"#items-list,#item-overview{float:left}#back-button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:150px;color:#fff;display:inline-block;padding:10px 5px;cursor:pointer}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory-items/inventory-items.component.scss\n ** module id = 531\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/26/2016.\n */\n\n\nimport {Component} from '@angular/core';\nimport {InventoryItemRowComponent} from '../inventory-item-row/inventory-item-row.component';\nimport {ItemOverviewComponent} from '../../item-overview/item-overview.component.ts';\nimport {RouteParams, Router} from '@angular/router-deprecated';\nimport {InventoryService} from '../../../services/inventory.service';\nimport {ItemType} from '../../../common/models/common';\n\n@Component({\n  selector: 'inventory-items',\n  styles: [require('./inventory-items.component.scss')],\n  template: require('./inventory-items.component.html'),\n  directives: [InventoryItemRowComponent, ItemOverviewComponent]\n\n})\nexport class InventoryItemsComponent {\n\n\n  _itemType: ItemType;\n\n\n  constructor(private _routeParams: RouteParams,\n              private _inventoryService: InventoryService,\n              private _router: Router) {\n\n    this._itemType = <ItemType>_routeParams.get('itemType');\n\n  }\n\n\n  back() {\n    this._router.navigate(['Inventory']);\n  }\n\n  get items() {\n\n    let item = this._inventoryService.retrieve(this._itemType);\n\n\n    return item ? [item] : [];\n  }\n\n  get activeItem() {\n\n    let items = this.items;\n\n    return items.length ? items[0] : void 0;\n  }\n\n  onModSlotChanged() {\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory-items/inventory-items.component.ts\n **/","module.exports = \"<div id=\\\"inventory \\\" class=\\\"clearfix\\\">\\n\\n  <div id=\\\"inventory-weapons\\\" class=\\\"inventory-section\\\">\\n\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item (click)=\\\"navigate('primary')\\\" [item]=\\\"inventory.weapons.primary\\\"\\n                      inventory-item-type=\\\"weapon\\\"\\n                      item-type=\\\"assault-rifle\\\"\\n                      weapon-slot=\\\"primary\\\"\\n      ></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('secondary')\\\" [item]=\\\"inventory.weapons.secondary\\\"\\n                      inventory-item-type=\\\"weapon\\\"\\n                      item-type=\\\"sniper\\\"\\n                      weapon-slot=\\\"secondary\\\"\\n      ></inventory-item>\\n    </div>\\n  </div>\\n  <div id=\\\"inventory-gear\\\" class=\\\"inventory-section\\\">\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item (click)=\\\"navigate('body-armor')\\\" [item]=\\\"inventory.gear.bodyArmor\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      item-type=\\\"body-armor\\\"></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('mask')\\\" [item]=\\\"inventory.gear.mask\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      item-type=\\\"mask\\\"></inventory-item>\\n\\n      <inventory-item (click)=\\\"navigate('knee-pads')\\\" item-type=\\\"knee-pads\\\"\\n                      inventory-item-type=\\\"gear\\\"\\n                      [item]=\\\"inventory.gear.kneePads\\\"></inventory-item>\\n    </div>\\n\\n    <div class=\\\"column clearfix\\\">\\n      <inventory-item\\n        (click)=\\\"navigate('back-pack')\\\" item-type=\\\"back-pack\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.backPack\\\"></inventory-item>\\n\\n      <inventory-item\\n        (click)=\\\"navigate('gloves')\\\" item-type=\\\"gloves\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.gloves\\\"></inventory-item>\\n\\n      <inventory-item\\n        (click)=\\\"navigate('holster')\\\" item-type=\\\"holster\\\"\\n        inventory-item-type=\\\"gear\\\"\\n        [item]=\\\"inventory.gear.holster\\\"></inventory-item>\\n    </div>\\n\\n\\n  </div>\\n\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory.component.html\n ** module id = 546\n ** module chunks = 2\n **/","module.exports = \".inventory-section .column{float:left;margin-right:16px}.inventory-section inventory-item{display:block;cursor:pointer;margin-bottom:15px}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/inventory/inventory.component.scss\n ** module id = 532\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/22/2016.\n */\nimport {Component} from '@angular/core';\nimport {Inventory} from './inventory.model';\nimport {InventoryItemComponent} from './inventory-item/inventory-item.component';\nimport {Router, RouteConfig, RouterOutlet, RouteParams} from '@angular/router-deprecated';\nimport {InventoryItemsComponent} from './inventory-items/inventory-items.component';\nimport {InventoryService} from '../../services/inventory.service';\nimport {AuthCallbackComponent} from '../auth/auth-callback.component';\n\n\n@Component({\n\n  selector: 'inventory',\n  styles: [require('./inventory.component.scss')],\n  template: require('./inventory.component.html'),\n  directives: [InventoryItemComponent]\n})\nexport class InventoryComponent {\n\n\n  inventory: Inventory;\n\n\n  constructor(private _router: Router,\n              private _inventoryService: InventoryService,\n              private _routeParams: RouteParams) {\n    this.inventory = this._inventoryService.inventory;\n\n    let id = _routeParams.get('id');\n    if (id) _inventoryService.load(id);\n\n  }\n\n  navigate(type) {\n    this._router.navigate(['InventoryList', {itemType: type}]);\n  }\n}\n\n\n@Component({\n  template: '<router-outlet></router-outlet>',\n  directives: [RouterOutlet]\n})\n@RouteConfig([\n  {path: '/inventory', name: 'Inventory', component: InventoryComponent, useAsDefault: true},\n  {path: '/inventory/:itemType', name: 'InventoryList', component: InventoryItemsComponent},\n  {path: '/authCallback/:strategy', name: 'AuthCallback', component: AuthCallbackComponent}\n\n\n])\nexport class InventoryRootComponent {\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory.component.ts\n **/","/**\n * Created by Keyston on 4/22/2016.\n */\n\nimport {Gear} from '../item-overview/gear.model';\nimport {GenderType, Rarity, ItemType, Affects} from '../../common/models/common';\nimport {Attributes, Attribute} from '../attributes/attributes.model';\nimport {Talent} from '../talents/talent.model';\n\n\nexport type InventoryItemType = 'weapon' | 'gear';\n// tslint:disable-next-line\nexport const InventoryItemType = {\n  Weapon: 'weapon' as InventoryItemType,\n  Gear: 'gear' as InventoryItemType\n};\n\nexport class InventoryWeapons {\n  primary: Weapon;\n  secondary: Weapon;\n  sidearm: Weapon;\n}\n\nexport class InventoryGear {\n  bodyArmor: Gear;\n  mask: Gear;\n  kneePads: Gear;\n  backPack: Gear;\n  gloves: Gear;\n  holster: Gear;\n}\n\nexport class Inventory {\n\n  id: string;\n  name: string;\n\n  gender: GenderType;\n\n  weapons: InventoryWeapons = new InventoryWeapons();\n  gear: InventoryGear = new InventoryGear();\n\n\n}\n\n\nexport interface ItemModSlot {\n  id: number;\n  itemId?: number;\n  primary?: Attribute;\n  secondary?: Attribute;\n}\n\nexport interface WeaponBonusStat {\n  value: number;\n  affects: Affects;\n}\nexport interface WeaponStats {\n  damage: number;  \n  bonus?: WeaponBonusStat;\n}\n\n\nexport interface InventoryItem {\n  rarity: Rarity;\n  type: ItemType;\n  name: string;\n  score: number;\n  attributes?: Attributes;\n  mods: ItemModSlot[];\n  talents: Talent[];\n\n\n}\n\nexport interface Weapon extends InventoryItem {\n  stats: WeaponStats;\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/inventory/inventory.model.ts\n **/","/**\n * Created by Keyston on 4/3/2016.\n */\n\nimport {Rarity, ItemType, GearStats, GearRarity} from '../../common/models/common';\nimport {Attributes, Attribute} from '../attributes/attributes.model';\nimport {Talent} from '../talents/talent.model';\nimport {InventoryItem} from '../inventory/inventory.model';\n\n\nexport interface Gear extends InventoryItem {\n\n  stats: GearStats;\n  armor: number;\n\n}\n\n\nexport const DUMMY_GEAR: Gear = {\n  rarity: GearRarity.GEAR_SET,\n  type: ItemType.BodyArmor,\n  name: \"Sentry's Call harness\",\n  armor: 1049,\n  score: 214,\n  stats: {\n    firearms: 0,\n    stamina: 422,\n    electronics: 0\n  },\n  attributes: {\n    major: [{\n\n      id: 13,\n      value: 8\n\n    }],\n    minor: [],\n    skill: []\n\n  },\n  mods: [],\n  talents: []\n};\n\n\nexport const GEAR_SCORES = (function () {\n  let scores = {};\n  scores[GearRarity.SUPERIOR] = [131, 147, 165];\n  scores[GearRarity.HIGH_END] = [163, 182, 204];\n  scores[GearRarity.GEAR_SET] = [191, 214, 240];\n  return scores;\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/item-overview/gear.model.ts\n **/","module.exports = \"<div class=\\\"item-wrapper {{item.rarity}}\\\">\\n\\n  <div class=\\\"section-wrapper title-section\\\">\\n    <div class=\\\"rarity-indicator\\\"></div>\\n    <div class=\\\"title-wrapper\\\">\\n      <label editor=\\\"false\\\">{{item.name}}</label>\\n      <select [(ngModel)]=\\\"item.name\\\" editor=\\\"true\\\">\\n        <option *ngFor=\\\"let item of items\\\" [value]=\\\"item.name\\\">{{item.name}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"rarity-wrapper\\\">\\n      <label editor=\\\"false\\\">{{item.rarity|ucfirst}}</label>\\n      <select [(ngModel)]=\\\"item.rarity\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onRarityChanged($event)\\\">\\n        <option class=\\\"option-{{rarity}}\\\" *ngFor=\\\"let rarity of rarities\\\" [value]=\\\"rarity\\\">{{rarity|ucfirst}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"score-wrapper\\\">\\n      score\\n      <div class=\\\"number-wrapper score-number-wrapper\\\">\\n\\n        <label editor=\\\"false\\\">{{item.score}}</label>\\n        <select [(ngModel)]=\\\"item.score\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onGearScoreChanged($event)\\\">\\n          <option *ngFor=\\\"let score of scores\\\" [value]=\\\"score\\\">{{score}}</option>\\n        </select>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"section-wrapper clearfix\\\" *ngIf=\\\"isWeapon\\\">\\n    <div class=\\\"type-icon-wrapper {{item.type}}\\\"></div>\\n    <div class=\\\"type-name-wrapper\\\">\\n      <label editor=\\\"false\\\">{{weaponTypeName}}</label>\\n\\n      <select [(ngModel)]=\\\"selectedItemType\\\" editor=\\\"true\\\" (ngModelChange)=\\\"onWeaponTypeChanged($event)\\\">\\n        <option *ngFor=\\\"let name of weaponTypeNames\\\" [value]=\\\"name.value\\\">{{name.label}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"type-extra-stat-wrapper\\\" *ngIf=\\\"weaponHasBonus\\\">\\n      <div class=\\\"type-extra-stat-number-wrapper\\\">\\n        <auto-resize-input\\n          resize-increment=\\\"20\\\"\\n          prepend=\\\"+\\\"\\n          [(ngModel)]=\\\"item.stats.bonus.value\\\"\\n          (input)=\\\"onWeaponBonusChanged($event)\\\"></auto-resize-input>\\n      </div>\\n      <div class=\\\"type-extra-stat-text-wrapper\\\">\\n        {{weaponBonusText}}\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"section-wrapper \\\" *ngIf=\\\"isWeapon\\\">\\n\\n    <weapon-stats [weapon]=\\\"item\\\"></weapon-stats>\\n\\n\\n  </div>\\n\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n\\n    <div class=\\\"stat-wrapper\\\">\\n      ARMOR\\n      <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n        <auto-resize-input\\n          resize-increment=\\\"20\\\"\\n          prepend=\\\"\\\"\\n          [(ngModel)]=\\\"item.armor\\\"\\n          (input)=\\\"onArmorValueChanged($event)\\\"></auto-resize-input>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"section-wrapper \\\" *ngIf=\\\"isHighEnd || isWeapon\\\">\\n\\n    <talents [choices]=\\\"talentChoices\\\" [talents]=\\\"talents\\\" [has-image]=\\\"talentsHaveImage\\\"></talents>\\n\\n\\n  </div>\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n    <stats-display [stats]=\\\"item.stats\\\"></stats-display>\\n  </div>\\n  <div class=\\\"section-wrapper\\\" *ngIf=\\\"isGear\\\">\\n    <item-attributes [data]=\\\"item.attributes\\\" [gear-metadata]=\\\"metadata\\\"></item-attributes>\\n  </div>\\n\\n\\n  <div class=\\\"section-wrapper\\\">\\n    <modslots [gear-metadata]=\\\"metadata\\\" [slots]=\\\"item.mods\\\"></modslots>\\n  </div>\\n\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/item-overview/item-overview.component.html\n ** module id = 547\n ** module chunks = 2\n **/","module.exports = \":host .item-wrapper{color:#fff;font-family:'Borda', serif;font-size:20px;letter-spacing:1.05px;line-height:1.4;margin:0 0 80px 16px;position:relative;text-shadow:0px 0px 2px rgba(0,0,0,0.3);width:400px}:host .item-wrapper.high-end .rarity-indicator{background-color:#ffaf10}:host .item-wrapper.high-end .rarity-wrapper select,:host .item-wrapper.high-end .rarity-wrapper label,:host .item-wrapper.high-end .talent-title-wrapper{color:#f8db97}:host .item-wrapper.superior .rarity-indicator{background-color:#af4296}:host .item-wrapper.superior .rarity-wrapper select,:host .item-wrapper.superior .rarity-wrapper label,:host .item-wrapper.superior .talent-title-wrapper{color:#d688c2}:host .item-wrapper.specialized .rarity-indicator{background-color:#5080ff}:host .item-wrapper.specialized .rarity-wrapper select,:host .item-wrapper.specialized .rarity-wrapper label,:host .item-wrapper.specialized .talent-title-wrapper{color:#97aceb}:host .item-wrapper.gear-set .rarity-indicator{background-color:#01BF61}:host .item-wrapper.gear-set .rarity-wrapper select,:host .item-wrapper.gear-set .rarity-wrapper label,:host .item-wrapper.gear-set .talent-title-wrapper{color:#01ff90}:host .item-wrapper .section-wrapper{background-color:rgba(0,0,0,0.2);margin-bottom:1px;padding:10px 15px;position:relative}:host .item-wrapper .title-section{overflow:visible}:host .item-wrapper .rarity-indicator{height:100%;left:-10px;position:absolute;top:0;width:7px}:host .item-wrapper .rarity-wrapper{font-weight:600}:host .item-wrapper .number-wrapper,:host .item-wrapper .number-wrapper select{font-size:2.9em;font-weight:600;line-height:0.9;position:relative;top:-0.15em}:host .item-wrapper .number-wrapper select{font-size:1.0em;top:0}:host .item-wrapper .number-wrapper select option{font-size:.5em}:host .item-wrapper .title-wrapper{font-weight:600}:host .item-wrapper .title-wrapper a{color:inherit;text-decoration:none}:host .item-wrapper .title-wrapper a:hover{text-decoration:underline}:host .item-wrapper .score-wrapper{position:absolute;right:10px;text-align:center;text-transform:uppercase;top:0}:host .item-wrapper .type-icon-wrapper{float:left;height:50px;margin-right:15px;width:50px}:host .item-wrapper .type-icon-wrapper.assault-rifle{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/assault-rifle/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.lmg{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/lmg/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.smg{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/smg/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.sniper{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/sniper/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-icon-wrapper.shotgun{background:rgba(125,125,125,0.3) url(\\\"app/assets/images/inventory/shotgun/icon.png\\\") no-repeat center center;background-size:40px 40px}:host .item-wrapper .type-name-wrapper{font-weight:600;line-height:1.25}:host .item-wrapper .type-extra-stat-wrapper{line-height:1.25}:host .item-wrapper .type-extra-stat-number-wrapper{color:#eb7c09;float:left;font-weight:700;margin-right:10px}:host .item-wrapper .requirements-wrapper{float:right;width:50%}:host .item-wrapper .requirements-title-wrapper{color:#eb7c09;font-weight:700}:host .item-wrapper .requirement-stat-wrapper{overflow:auto}:host .item-wrapper .requirement-stat-wrapper .icon{position:relative;top:3px}:host .item-wrapper .stat-requirement-number-wrapper{float:left;font-size:1.2em;font-weight:600;margin-left:10px}select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important;font-weight:600}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}:host .number-wrapper input,:host .number-wrapper div.placeholder{font-size:1em !important;color:#fff !important;width:20px;height:73px;margin-top:-9px}.item-wrapper.high-end .rarity-indicator{background-color:#ffaf10}.item-wrapper.high-end .rarity-wrapper select,.item-wrapper.high-end .rarity-wrapper label,.item-wrapper.high-end .talent-title-wrapper{color:#f8db97}.item-wrapper.superior .rarity-indicator{background-color:#af4296}.item-wrapper.superior .rarity-wrapper select,.item-wrapper.superior .rarity-wrapper label,.item-wrapper.superior .talent-title-wrapper{color:#d688c2}.item-wrapper.specialized .rarity-indicator{background-color:#5080ff}.item-wrapper.specialized .rarity-wrapper select,.item-wrapper.specialized .rarity-wrapper label,.item-wrapper.specialized .talent-title-wrapper{color:#97aceb}.item-wrapper.gear-set .rarity-indicator{background-color:#01BF61}.item-wrapper.gear-set .rarity-wrapper select,.item-wrapper.gear-set .rarity-wrapper label,.item-wrapper.gear-set .talent-title-wrapper{color:#01ff90}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/item-overview/item-overview.component.scss\n ** module id = 533\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/2/2016.\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\nimport {UcFirstPipe} from '../../common/pipes/ucfirst_pipe';\nimport {StatsDisplay} from '../stats-display/stats-display';\nimport {Gear} from './gear.model';\nimport {AttributesComponent} from '../attributes/attributes.component';\nimport {PrettyNumberPipe} from '../../common/pipes/prettynumber';\nimport {Rarity, GearRarity, DivisionItem, ItemType} from '../../common/models/common';\nimport {AttributeMeta} from '../attributes/attribute.component';\nimport {ItemsService, ItemDescriptor, isWeaponType} from '../../services/item.service';\nimport {NgFor} from '@angular/common';\nimport {EditorDirective} from '../../directives/editor';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\nimport {ModSlotsComponent} from '../modslots/modslots.component';\nimport {TalentsComponent} from '../talents/talents.component';\nimport {InventoryItem, Weapon} from '../inventory/inventory.model';\nimport {WeaponStatsComponent} from '../weapon-stats/weapon-stats.component';\nimport * as _ from 'lodash/index';\nexport {Gear} from './gear.model';\n\n\n@Component({\n  selector: 'item-overview',\n  pipes: [UcFirstPipe, PrettyNumberPipe],\n  // Set moduleId to current module so that all loading is done\n  // relative\n\n  styles: [require('./item-overview.component.scss')],\n\n  template: require('./item-overview.component.html'),\n  directives: [StatsDisplay, AttributesComponent, NgFor,\n    EditorDirective, AutoResizeInputComponent, ModSlotsComponent,\n    TalentsComponent, WeaponStatsComponent]\n})\nexport class ItemOverviewComponent implements OnInit {\n  @Input() item: InventoryItem;\n\n  descriptor: ItemDescriptor;\n\n  weaponTypeNames: any;\n\n  weaponTypeName: string;\n  selectedItemType: ItemType;\n\n\n  constructor(private _itemService: ItemsService) {\n\n  }\n\n  get rarities(): Rarity[] {\n    return this._itemService.rarities;\n  }\n\n  ngOnInit() {\n\n    this.selectedItemType = this.item.type;\n    this._updateDescriptor();\n\n    this._ensureWeaponBonus();\n    this.weaponTypeNames = [];\n    return _.forEach(this._itemService.weaponTypeNames, (v, k) =>\n      this.weaponTypeNames.push({\n        value: k,\n        label: v\n      }));\n  }\n\n  /**\n   * Update the {@link ItemDescriptor} for a giving {@link ItemType}\n   * @param itemType\n   * @private\n   */\n  _updateDescriptor(itemType?: ItemType) {\n    itemType = itemType || this.selectedItemType;\n    this._itemService\n      .getDescriptorFor(itemType)\n\n      .subscribe(descriptor => this._commitChanges(descriptor, itemType));\n\n  }\n\n  /**\n   * Finalize model changes, this is done so that we apply\n   * the itemType change at its last possible state so that\n   * all other values that are neede (name,rarity) have been\n   * set correctly for other method usage\n   * @param descriptor\n   * @param itemType\n   * @private\n   */\n  _commitChanges(descriptor: ItemDescriptor, itemType: ItemType) {\n\n\n    this.descriptor = descriptor;\n    if (this.item.type !== itemType) {\n      let item = descriptor.items[this.item.rarity][0];\n      if (!item) {\n        this.item.rarity = GearRarity.SUPERIOR;\n        item = descriptor.items[this.item.rarity][0];\n      }\n      this.item.name = item.name;\n    }\n    this.selectedItemType = this.item.type = itemType;\n    this.weaponTypeName = this._itemService.translateToName(itemType);\n    this._ensureWeaponBonus();\n  }\n\n  /**\n   * Checks or adds weapon bonus data\n   * @private\n   */\n  _ensureWeaponBonus() {\n    if (this.isWeapon) {\n      let weapon = <Weapon>this.item;\n      if (this.weaponHasBonus) {\n        if (!weapon.stats.bonus) {\n          weapon.stats.bonus = this._itemService\n            .defaultWeaponBonusFor(weapon.type);\n        }\n      } else {\n        weapon.stats.bonus = void 0;\n      }\n\n    }\n  }\n\n  get items(): DivisionItem[] {\n\n    return this.descriptor ? this.descriptor.items[this.item.rarity] : [];\n\n  }\n\n  get talentChoices() {\n    return this.descriptor ? this.descriptor.talents : [];\n  }\n\n  get talents() {\n    return this.item.talents;\n\n  }\n\n  get isHighEnd() {\n    return this.item.rarity === GearRarity.HIGH_END;\n  }\n\n  get isGear() {\n    return this.item && !this.isWeapon;\n  }\n\n  get isWeapon() {\n    return isWeaponType(this.item.type);\n  }\n\n  get talentsHaveImage() {\n    return this.isWeapon;\n  }\n\n  onRarityChanged(rarity) {\n    // reset gear info when rarity changes\n    this.item.name = this.items[0].name;\n    this.item.score = this._itemService.scores[rarity][0];\n    if (this.isGear) {\n\n      if (this.isHighEnd) {\n        this.item.talents = [{id: this.talentChoices[0].id}];\n      } else {\n        this.item.talents = [];\n      }\n    }\n\n  }\n\n\n  onWeaponStatsChanged(statName, value) {\n    (<Weapon>this.item).stats[statName] = value;\n  }\n\n  onWeaponBonusChanged(value) {\n    (<Weapon>this.item).stats.bonus.value = value;\n  }\n\n  onWeaponTypeChanged(itemType: ItemType) {\n\n    this._updateDescriptor(itemType);\n  }\n\n\n  get weaponHasBonus() {\n    let type = this.item.type;\n    return type === ItemType.SMG || type === ItemType.Sniper;\n  }\n\n  get weaponBonusText() {\n    return this.item.type === ItemType.SMG\n      ? 'Critical Hit Chance'\n      : 'Headshot Damage';\n  }\n\n  get scores() {\n    return this._itemService.scores[this.item.rarity];\n  }\n\n  onArmorValueChanged(value) {\n    (<Gear>this.item).armor = value;\n  }\n\n  onGearScoreChanged(score) {\n\n  }\n\n  get metadata(): AttributeMeta {\n    // weaponFamily: _.find(this.items, {name: this.item.name}).family\n    return {\n      level: this.item.score,\n      rarity: this.item.rarity,\n      belongsTo: this.item.type\n    };\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/item-overview/item-overview.component.ts\n **/","module.exports = \".mod-slot-wrapper{margin-bottom:5px}.mod-slot-wrapper.high-end .rarity-indicator{background-color:#ffaf10}.mod-slot-wrapper.high-end .rarity-wrapper select,.mod-slot-wrapper.high-end .rarity-wrapper label,.mod-slot-wrapper.high-end .talent-title-wrapper{color:#f8db97}.mod-slot-wrapper.superior .rarity-indicator{background-color:#af4296}.mod-slot-wrapper.superior .rarity-wrapper select,.mod-slot-wrapper.superior .rarity-wrapper label,.mod-slot-wrapper.superior .talent-title-wrapper{color:#d688c2}.mod-slot-wrapper.specialized .rarity-indicator{background-color:#5080ff}.mod-slot-wrapper.specialized .rarity-wrapper select,.mod-slot-wrapper.specialized .rarity-wrapper label,.mod-slot-wrapper.specialized .talent-title-wrapper{color:#97aceb}.mod-slot-wrapper.gear-set .rarity-indicator{background-color:#01BF61}.mod-slot-wrapper.gear-set .rarity-wrapper select,.mod-slot-wrapper.gear-set .rarity-wrapper label,.mod-slot-wrapper.gear-set .talent-title-wrapper{color:#01ff90}select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);font-weight:600;border-bottom:1px dotted #888 !important;display:block}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}select,label,.mod-slot-attributes-wrapper{margin-left:25px}.rarity-indicator{position:relative;height:12px;margin-top:2px;width:35px;display:inline-block;left:0px;-webkit-box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45);-moz-box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45);box-shadow:1px 1px 2px 0px rgba(0,0,0,0.45)}.mod-slot-type-title-wrapper,.mod-slot-item-title-wrapper{display:inline-block}.mod-slot-item-title-wrapper label{display:block}.weapon .rarity-indicator{display:none}.mod-slot-wrapper.high-end .mod-slot-item-image{background-color:rgba(255,175,16,0.2)}.mod-slot-wrapper.high-end .mod-slot-item-name label:nth-child(1){font-weight:600}.mod-slot-wrapper.high-end .mod-slot-item-name label:nth-child(2),.mod-slot-wrapper.high-end .mod-slot-item-name select{color:#f8db97}.mod-slot-wrapper.superior .mod-slot-item-image{background-color:rgba(175,66,150,0.2)}.mod-slot-wrapper.superior .mod-slot-item-name label:nth-child(1){font-weight:600}.mod-slot-wrapper.superior .mod-slot-item-name label:nth-child(2),.mod-slot-wrapper.superior .mod-slot-item-name select{color:#d688c2 !important}.mod-slot-item-image{float:left;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;width:64px;height:64px}.mod-slot-item-image img{width:32px;margin:0 auto;display:block;position:relative;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.mod-slot-item-name{float:left}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/modslots/modslot.component.scss\n ** module id = 534\n ** module chunks = 2\n **/","import {ModSlotType} from './modslots.model';\nimport {Input, Component, OnInit, ElementRef} from '@angular/core';\n\nimport {ModSlotService, ModSlotAttributeSet, WeaponModItem} from '../../services/modslots.service';\nimport {EditorDirective} from '../../directives/editor';\nimport {AttributeObservable} from '../../services/attributes.service';\nimport {BehaviorSubject} from 'rxjs/Rx';\nimport {GearAttribute, DivisionAttribute} from '../../common/models/common';\nimport {asObservable} from '../../common/utils';\nimport {AttributeComponent, AttributeMeta} from '../attributes/attribute.component';\nimport {ItemModSlot} from '../inventory/inventory.model';\nimport {isWeaponType} from '../../services/item.service';\nimport * as _ from 'lodash/index';\n/**\n * Created by Keyston on 4/10/2016.\n */\n\n\ntype SlotTypesById = {[id: string]: ModSlotType}\n@Component({\n  selector: 'modslot',\n  templateUrl: 'app/components/modslots/modslot.component.html',\n  styles: [require('./modslot.component.scss')],\n  directives: [EditorDirective, AttributeComponent]\n\n})\nexport class ModSlotComponent implements OnInit {\n\n  @Input() slot: ItemModSlot;\n\n  @Input('gear-metadata') metadata: AttributeMeta;\n  slotTypes: ModSlotType[];\n\n\n  weaponModItems: WeaponModItem[] = [];\n  weaponModItemName: string;\n  inheritPrimaryAttributeId: number = 0;\n  private slotName: string;\n  private _slotTypesById: SlotTypesById = {};\n  private slotRarity: string;\n  private _primaryAttributes = new BehaviorSubject<DivisionAttribute[]>([]);\n\n\n  private _secondaryAttributes = new BehaviorSubject<DivisionAttribute[]>([]);\n  private _selectedSlotType: ModSlotType;\n\n\n  private _primaryObservable = asObservable(this._primaryAttributes);\n  private _secondaryObservable = asObservable(this._secondaryAttributes);\n\n  constructor(private _modSlotService: ModSlotService, private _el: ElementRef) {\n\n\n  }\n\n\n  get isWeapon() {\n    return isWeaponType(this.metadata.belongsTo);\n  }\n\n  get isGear() {\n    return !this.isWeapon;\n  }\n\n\n  onSlotTypeChanged() {\n\n    // Cast selected id to a number due to bug with angular2 and select\n    // http://stackoverflow.com/questions/35491608/how-to-get-number-in-ngmodel-in-angular-2\n    this.slot.id = +this.slot.id;\n\n    this._selectedSlotType = this._slotTypesById[this.slot.id];\n    this.slotName = this._selectedSlotType.name;\n    this.slotRarity = this._selectedSlotType.rarity;\n\n\n    if (this.isWeapon)\n      this._modSlotService\n        .weaponModItemsFor(this._selectedSlotType).subscribe(weaponModItems => {\n        this.weaponModItems = weaponModItems;\n        if (!this.slot.itemId) this.slot.itemId = this.weaponModItems[0].id;\n        this.onWeaponSlotItemChanged(this.slot.itemId);\n\n\n      });\n\n    this.refreshAttributeProviders();\n\n\n  }\n\n\n  get weaponSlotImage() {\n    return this._selectedSlotType\n      ? this._modSlotService.imageFor(this._selectedSlotType)\n      : '';\n  }\n\n  onWeaponSlotItemChanged(itemId) {\n    let weaponModItem = _.find(this.weaponModItems, {id: +itemId});\n    this.weaponModItemName = weaponModItem.name;\n    this.inheritPrimaryAttributeId = weaponModItem.inheritAttribute || 0;\n  }\n\n\n  /**\n   *  Function that returns an Observable that allows the @link AttributeComponent to\n   *  fetch the correct set of attributes to display for both primary and secondary\n   * @param primary\n   * @returns {Observable<GearAttribute[]>|Observable<R>}\n   */\n  getAttributesProvider(primary: boolean): AttributeObservable {\n\n\n    return primary ? this._primaryObservable : this._secondaryObservable;\n  }\n\n  ngOnInit(): any {\n\n\n    this.slotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\n\n    this.slotTypes.forEach(type => this._slotTypesById[type.id] = type);\n\n\n    this.onSlotTypeChanged();\n    // allow selecting of weapon mod rarity\n    if (this.isWeapon) {\n      let slotTypeId = this.slot.id;\n      this.slotTypes = _.filter(this.slotTypes, {kind: this._selectedSlotType.kind});\n    }\n  }\n\n  private refreshAttributeProviders() {\n\n    this._modSlotService\n      .getAttributeSetFor(this._selectedSlotType)\n      .subscribe((attributeSet: ModSlotAttributeSet) => {\n\n        this._primaryAttributes.next(attributeSet.primary);\n        this._secondaryAttributes.next(attributeSet.secondary);\n      });\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/modslots/modslot.component.ts\n **/","module.exports = \"<div class=\\\"mod-slots-wrapper section-wrapper \\\">\\n\\n  <modslot [slot]=\\\"slot\\\" *ngFor=\\\"let slot of slots\\\" [gear-metadata]=\\\"metadata\\\"></modslot>\\n\\n\\n  <div *ngIf=\\\"canDisplayControls\\\" class=\\\"button-bar\\\" editor=\\\"true\\\">\\n    <button (click)=\\\"onAddSlot()\\\" *ngIf=\\\"canAddSlot\\\">+ slot</button>\\n    <button (click)=\\\"onRemoveSlot()\\\" *ngIf=\\\"canRemoveSlot\\\">- slot</button>\\n  </div>\\n\\n\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/modslots/modslots.component.html\n ** module id = 548\n ** module chunks = 2\n **/","module.exports = \".button-bar button{background-color:rgba(0,0,0,0.2);font-family:Borda, serif;font-size:15px;letter-spacing:1.05px;line-height:1;text-shadow:0 0 2px rgba(0,0,0,0.3);border:none;display:block;margin-bottom:10px;width:75px;color:#eb7c09;display:inline-block}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/modslots/modslots.component.scss\n ** module id = 535\n ** module chunks = 2\n **/","import {Input, OnInit, Component, NgZone} from '@angular/core';\nimport {GEAR_MOD_SLOT_TYPES, ModSlotType} from './modslots.model';\nimport {ModSlotService, ModSlotAttributeSet} from '../../services/modslots.service';\nimport {AttributeMeta} from '../attributes/attribute.component';\nimport {ModSlotComponent} from './modslot.component';\nimport {ItemModSlot} from '../inventory/inventory.model';\nimport {EditorDirective} from '../../directives/editor';\nimport {isWeaponType} from '../../services/item.service';\nimport {GearRarity} from '../../common/models/common';\nimport * as _ from 'lodash/index';\n\n/**\n * Created by Keyston on 4/10/2016.\n */\n\n\ntype ModAttributeSetByType = {[id: number]: ModSlotAttributeSet}\n@Component({\n  selector: 'modslots',\n  template: require('./modslots.component.html'),\n  styles: [require('./modslots.component.scss')],\n  directives: [ModSlotComponent, EditorDirective]\n\n})\nexport class ModSlotsComponent implements OnInit {\n\n  @Input() slots: ItemModSlot[];\n\n  @Input('gear-metadata') metadata: AttributeMeta;\n\n  private _hasNative: boolean;\n  private _canHaveExtra: number;\n\n  private _defaultModSlotAttributeSet: ModSlotAttributeSet;\n\n  constructor(private _modSlotService: ModSlotService, private _ngZone: NgZone) {\n  }\n\n  ngOnInit(): any {\n    let itemType = this.metadata.belongsTo;\n\n    this._hasNative = ModSlotService.hasNative(itemType);\n\n    let canAddSlots = (this._hasNative || isWeaponType(itemType)) && this.slots.length < 1;\n    if (canAddSlots) {\n      this.onAddSlot();\n    }\n    this._canHaveExtra = ModSlotService.canHaveExtra(itemType);\n  }\n\n\n  get canAddSlot() {\n    return this.slots.length < this._canHaveExtra + (this._hasNative ? 1 : 0 );\n  }\n\n  get canRemoveSlot() {\n    return !!this.slots.length;\n  }\n\n  get canDisplayControls() {\n    return this._hasNative || this._canHaveExtra > 0;\n  }\n\n  onAddSlot() {\n\n    isWeaponType(this.metadata.belongsTo) ? this.onAddWeaponModSlot() : this.onAddGearModSlot();\n\n  }\n\n  onAddWeaponModSlot() {\n    // check to see which ModSlotType's are acceptable for this weapon\n\n\n    let modSlotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\n    // filter to avoid duplicates\n    modSlotTypes = _.filter(modSlotTypes, {rarity: GearRarity.SUPERIOR});\n    let tree = [];\n    let self = this;\n    _.forEach(modSlotTypes, (modSlotType: ModSlotType, id) => {\n      this._modSlotService.getAttributeSetFor(modSlotType)\n        .subscribe(attributeSet => {\n\n          tree.push([modSlotType, attributeSet]);\n\n          if (tree.length === modSlotTypes.length) {\n            _.forEach(tree, (branch: any[]) => {\n              modSlotType = branch[0];\n              attributeSet = branch[1];\n              self._addSlot(modSlotType, attributeSet);\n\n            });\n          }\n        });\n    });\n\n  }\n\n  weaponModItemChoices() {\n    if (!isWeaponType(this.metadata.belongsTo)) return void 0;\n    let choices = {};\n\n    let modSlotTypes = this._modSlotService.getTypes(this.metadata.belongsTo);\n    _.forEach(this.slots, (slot: ItemModSlot, _) => {\n      let modSlotType = _.find(modSlotTypes, {id: slot.id});\n      choices[slot.id] = this._modSlotService.weaponModItemsFor(modSlotType);\n    });\n    return choices;\n  }\n\n  onAddGearModSlot() {\n    let defaultModSlotType = this._modSlotService.getTypes(this.metadata.belongsTo)[0];\n    if (this.canAddSlot)\n\n\n      if (this._defaultModSlotAttributeSet) {\n        this._addSlot(defaultModSlotType, this._defaultModSlotAttributeSet);\n      } else {\n\n\n        this._modSlotService.getAttributeSetFor(defaultModSlotType)\n          .subscribe(attributeSet => {\n            this._defaultModSlotAttributeSet = attributeSet;\n            this._addSlot(defaultModSlotType, attributeSet);\n          });\n      }\n  }\n\n  onRemoveSlot() {\n    this.slots.pop();\n  }\n\n  private _addSlot(modSlotType: ModSlotType, attributeSet: ModSlotAttributeSet) {\n    let primary = attributeSet.primary[0];\n    let secondary = attributeSet.secondary[0];\n    if (secondary.id === primary.id) {\n      secondary = attributeSet.secondary[1];\n    }\n    let slot = {\n      id: modSlotType.id,\n\n      primary: {\n        id: primary.id,\n        value: 0\n      },\n      secondary: {\n        id: secondary.id,\n        value: 0\n      }\n    }\n    this.slots.push(slot);\n    return slot;\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/modslots/modslots.component.ts\n **/","import {GearStats, Rarity, GearRarity, GearAttribute} from '../../common/models/common';\nimport {Attribute} from '../attributes/attributes.model';\nimport * as _ from 'lodash/index';\n/**\n * Created by Keyston on 4/10/2016.\n */\nexport interface ModSlot {\n\n  rarity: Rarity;\n  stats?: GearStats;\n  attribute: Attribute;\n  attribute2?: Attribute;\n\n}\n\n\nexport class ModSlotType {\n\n  static toString(slotKind: ModSlotKind) {\n    switch (slotKind) {\n      case ModSlotKind.PERFORMANCE:\n        return 'Performance';\n\n      case ModSlotKind.FIREARMS:\n        return 'Firearms';\n\n      case ModSlotKind.STAMINA:\n        return 'Stamina';\n\n      case ModSlotKind.ELECTRONICS:\n        return 'Electronics';\n      case ModSlotKind.MUZZLE:\n        return 'Muzzle';\n      case ModSlotKind.UNDERBARREL:\n        return 'Underbarrel';\n      case ModSlotKind.OPTICS:\n        return 'Optics';\n      case ModSlotKind.MAGAZINE:\n        return 'Magazine';\n      default:\n        throw new Error('Invalid ModSlotKind');\n    }\n  }\n\n  constructor(private _id: number, private _rarity: Rarity, private _slotKind: ModSlotKind) {\n  }\n\n\n  get kind() {\n    return this._slotKind;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get rarity() {\n    return this._rarity;\n  }\n\n  get identifier() {\n    return ModSlotType.toString(this._slotKind).toLowerCase();\n  }\n\n  get belongsToWeapon() {\n    return this._slotKind >= ModSlotKind.MUZZLE;\n  }\n\n\n  get name() {\n    return this._slotKind < ModSlotKind.MUZZLE ? [\n      this._rarity === GearRarity.SUPERIOR\n        ? 'Advanced ' : 'Prototype ',\n      ModSlotType.toString(this._slotKind),\n      ' Mod'].join('') : ModSlotType.toString(this._slotKind);\n\n  }\n\n\n  resolveMainAttribute(attributes: GearAttribute[]) {\n    return _.find(attributes, {name: ModSlotType.toString(this._slotKind)});\n  }\n\n  get isPerformance() {\n    return this._slotKind === ModSlotKind.PERFORMANCE;\n  }\n\n\n}\n\nexport enum ModSlotKind {\n  PERFORMANCE,\n  FIREARMS,\n  STAMINA,\n  ELECTRONICS,\n  MUZZLE,\n  UNDERBARREL,\n  OPTICS,\n  MAGAZINE\n}\n\n\nexport const GEAR_MOD_SLOT_TYPES = [\n\n  new ModSlotType(1, GearRarity.SUPERIOR, ModSlotKind.FIREARMS),\n  new ModSlotType(2, GearRarity.SUPERIOR, ModSlotKind.STAMINA),\n  new ModSlotType(3, GearRarity.SUPERIOR, ModSlotKind.ELECTRONICS),\n  new ModSlotType(4, GearRarity.SUPERIOR, ModSlotKind.PERFORMANCE),\n\n  new ModSlotType(5, GearRarity.HIGH_END, ModSlotKind.FIREARMS),\n  new ModSlotType(6, GearRarity.HIGH_END, ModSlotKind.STAMINA),\n  new ModSlotType(7, GearRarity.HIGH_END, ModSlotKind.ELECTRONICS),\n  new ModSlotType(8, GearRarity.HIGH_END, ModSlotKind.PERFORMANCE)\n\n];\n\nexport const WEAPON_MOD_SLOT_TYPES = [\n\n  new ModSlotType(1, GearRarity.SUPERIOR, ModSlotKind.MUZZLE),\n  new ModSlotType(2, GearRarity.SUPERIOR, ModSlotKind.UNDERBARREL),\n  new ModSlotType(3, GearRarity.SUPERIOR, ModSlotKind.OPTICS),\n  new ModSlotType(4, GearRarity.SUPERIOR, ModSlotKind.MAGAZINE),\n\n  new ModSlotType(5, GearRarity.HIGH_END, ModSlotKind.MUZZLE),\n  new ModSlotType(6, GearRarity.HIGH_END, ModSlotKind.UNDERBARREL),\n  new ModSlotType(7, GearRarity.HIGH_END, ModSlotKind.OPTICS),\n  new ModSlotType(8, GearRarity.HIGH_END, ModSlotKind.MAGAZINE)\n\n];\n\n\nexport type WeaponModType =\n  'recoil' | 'suppressor_small'  | 'suppressor_large' |'suppressor_small'|\n    'iron_sights' | 'rds_small' | 'rds_large'|\n    'grip_small' | 'grip_large' | 'laser'\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/modslots/modslots.model.ts\n **/","module.exports = \":host input{font-size:1.2em !important;color:#fff !important;float:none}.icon{background-size:contain;float:left;height:64px;width:64px}.icon.firearms{background-image:url(\\\"app/assets/images/icon-stat-firearms.png\\\")}.icon.stamina{background-image:url(\\\"app/assets/images/icon-stat-stamina.png\\\")}.icon.electronics{background-image:url(\\\"app/assets/images/icon-stat-electronics.png\\\")}.single-stat-block{background-color:rgba(255,255,255,0.1);box-shadow:1px 1px 4px 0 rgba(50,50,50,0.75);font-weight:700;text-align:center}.single-stat-block.inactive{background-color:rgba(0,0,0,0.2);opacity:0.1}.single-stat-block .icon{float:none;height:48px;margin:0 auto;width:48px}.single-stat-value-wrapper{font-size:1.2em}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/stats-display/single-stat-display.scss\n ** module id = 536\n ** module chunks = 2\n **/","module.exports = \".stats-wrapper{display:flex;justify-content:space-between;overflow:visible;padding:1px}single-stat-display{width:calc(33.33333% - 3px)}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/stats-display/stats-display.component.scss\n ** module id = 537\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/2/2016.\n */\n\nimport {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {StatType, GearStats} from '../../common/models/common';\nimport {NgClass} from '@angular/common';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\n\n\ninterface StateValueChangeEvent {\n  type: StatType;\n  value: number;\n}\n\n@Component({\n  selector: 'single-stat-display',\n  templateUrl: 'app/components/stats-display/single-stat-display.html',\n  directives: [NgClass, AutoResizeInputComponent],\n  styles: [require('./single-stat-display.scss')]\n\n})\nexport class SingleStatDisplay {\n\n  @Input() type: StatType;\n  @Input() value: number;\n\n  @Output() change = new EventEmitter<StateValueChangeEvent>();\n\n  onStatValueChanged(value) {\n    this.value = value;\n    this.change.emit({\n      type: this.type,\n      value: this.value\n    });\n  }\n}\n\n@Component({\n  selector: 'stats-display',\n  templateUrl: 'app/components/stats-display/stats-display.html',\n  directives: [SingleStatDisplay],\n  styles: [require('./stats-display.component.scss')]\n\n})\nexport class StatsDisplay {\n\n  @Input() stats: GearStats;\n\n\n  stat(name) {\n    return !this.stats ? 0 : this.stats[name];\n  }\n\n  onStateValueChanged(event: StateValueChangeEvent) {\n    this.stats[event.type] = event.value;\n  }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/stats-display/stats-display.ts\n **/","module.exports = \"<div class=\\\"talent-wrapper\\\" [ngClass]=\\\"{unlocked:talent.unlocked}\\\">\\n\\n  <div class=\\\"talent-title-wrapper\\\">\\n    Talent\\n  </div>\\n  <div class=\\\"talent-title-separator\\\">|</div>\\n  <div class=\\\"talent-title-name\\\">\\n    <label editor>{{talent.id|ucfirst}}</label>\\n    <div editor=\\\"true\\\">\\n      <select [(ngModel)]=\\\"talent.id\\\" (ngModelChange)=\\\"onTalentChanged($event)\\\">\\n        <option *ngFor=\\\"let choice of choices\\\" [value]=\\\"choice.id\\\">{{choice.id|ucfirst}}</option>\\n      </select>\\n    </div>\\n    <div editor=\\\"true\\\" class=\\\"talent-unlocked\\\">\\n      <input type=\\\"checkbox\\\" [(ngModel)]=\\\"talent.unlocked\\\" (ngModelChange)=\\\"onTalentUnlockedChanged($event)\\\"/>\\n      Unlocked\\n    </div>\\n  </div>\\n  <div class=\\\"talent-description-text\\\">\\n    <div #description></div>\\n\\n  </div>\\n  <div class=\\\"talent-image\\\" *ngIf=\\\"hasImage\\\">\\n    <img [src]=\\\"talentImage\\\"/>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/talents/talent.component.html\n ** module id = 549\n ** module chunks = 2\n **/","module.exports = \"select{background:none;-webkit-appearance:none;-moz-appearance:none;border:0 !important;font-family:'Borda', serif;font-size:20px;color:#fff;letter-spacing:1.05px;line-height:1.4;text-shadow:0px 0px 2px rgba(0,0,0,0.3);border-bottom:1px dotted #888 !important}select option{background:#4f4f46;color:#fff}select .option-high-end{color:#f8db97}select .option-specialized{color:#97aceb}select .option-superior{color:#d688c2}select .option-gear-set{color:#01ff90}.talent-wrapper{background-color:rgba(255,255,255,0.1);margin-bottom:10px;overflow:auto;padding:10px 15px}.talent-wrapper .talent-image,.talent-wrapper .talent-description-text,.talent-wrapper select{opacity:0.5}.talent-wrapper.unlocked .talent-image,.talent-wrapper.unlocked .talent-description-text,.talent-wrapper.unlocked select{opacity:1}.talent-unlocked{font-size:12px;position:absolute;right:19px}.talent-unlocked input{float:left;display:inline-block}.talent-title-wrapper{float:left;font-weight:600}.talent-title-separator{color:#8e8e8e;float:left;padding:0 8px}.talent-title-name-wrapper{float:left}.talent-title-name div,.talent-title-name label{display:inline-block;width:75px}.talent-description-text{padding-bottom:10px}.talent-description-text div{display:inline-block}.talent-image img{width:64px;margin:0 auto;display:block}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/talents/talent.component.scss\n ** module id = 538\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"talents-wrapper\\\">\\n  <talent *ngFor=\\\"let talent of talents\\\" [choices]=\\\"choices\\\" [talent]=\\\"talent\\\" [has-image]=\\\"hasImage\\\"></talent>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/talents/talents.component.html\n ** module id = 550\n ** module chunks = 2\n **/","/**\n * Created by Keyston on 4/26/2016.\n */\nimport {\n  Component,\n  Input,\n  DynamicComponentLoader,\n  ElementRef,\n  OnInit,\n  ComponentRef,\n  ViewChild,\n  ViewContainerRef,\n  AfterViewInit\n} from '@angular/core';\nimport {UcFirstPipe} from '../../common/pipes/ucfirst_pipe';\nimport {Talent} from './talent.model';\nimport * as _ from 'lodash/index';\nimport {EditorDirective} from '../../directives/editor';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\nimport {ValueFormat, ItemTalent} from '../../common/models/common';\nimport {BooleanConverter, InputConverter} from '../../common/converters';\nimport {ItemsService} from '../../services/item.service';\n\n\nconst TEMPLATE_INPUT_PERCENT_MARKER = 'x%';\nconst TEMPLATE_INPUT_NUMBER_MARKER = '#';\nconst TEMPLATE_INPUT_MARKER_REXP =\n  new RegExp(`(${TEMPLATE_INPUT_PERCENT_MARKER}|${TEMPLATE_INPUT_NUMBER_MARKER})`);\n\nconst INPUT_FORMAT_MARKER = '%format%';\n\nconst TALENT_INPUT_FORMAT = (function () {\n\n  let o = {};\n  o[TEMPLATE_INPUT_PERCENT_MARKER] = ValueFormat.PERCENT;\n  o[TEMPLATE_INPUT_NUMBER_MARKER] = ValueFormat.NUMBER;\n  return o;\n})();\n\n\nconst TALENT_INPUT_TEMPLATE = ` <auto-resize-input [length]='2' \n                            inputType='number' [format]='%format%'\n                            (input)=\"onTalentValueChanged($event)\"\n                           [(ngModel)]='talent.value'\n        ></auto-resize-input>`;\n@Component({\n  selector: 'talent',\n  styles: [require('./talent.component.scss')],\n  template: require('./talent.component.html'),\n  pipes: [UcFirstPipe],\n  directives: [EditorDirective, AutoResizeInputComponent]\n})\n\nexport class TalentComponent implements OnInit, AfterViewInit {\n\n  @Input() talent: Talent;\n  @Input() choices: ItemTalent[];\n  @Input('has-image')\n  @InputConverter(BooleanConverter)\n  hasImage: boolean;\n\n  _previousTalentId: string;\n  _componentRef: ComponentRef<any>;\n\n  @ViewChild('description', {read: ViewContainerRef}) _descriptionContainerRef: ViewContainerRef;\n\n\n  static toComponent(template, talent) {\n    let directives = [AutoResizeInputComponent];\n    @Component({\n      selector: 'talent-template',\n      template: template,\n      styles: [\n        `:host auto-resize-input{\n        display:inline-block;\n        }\n        :host label{\n          margin-right:0px;\n        }\n        :host input{\n        color:#fff;\n        font-weight: normal;\n        }`\n      ],\n      directives: directives\n    })\n    class TalentTemplateComponent {\n      talent;\n\n      constructor() {\n        this.talent = talent;\n      }\n\n      onTalentValueChanged(value) {\n        this.talent.value = value;\n      }\n    }\n    return TalentTemplateComponent;\n  }\n\n  constructor(private _loader: DynamicComponentLoader,\n              private _elementRef: ElementRef,\n              private _itemsService: ItemsService) {\n  }\n\n\n  ngOnInit(): any {\n    // ensure that there is a value for the talent even if its 0\n    if (!this.talent.value) this.talent.value = 0;\n    if (!this.talent.id) {\n      this.talent.id = this.choices[0].id;\n    }\n\n  }\n\n  ngAfterViewInit() {\n    this.renderDescription(this.talent.id);\n  }\n\n  /**\n   * This method was created to add the ability of dynamicallyy generating the correct\n   * template for the talent description. Angular2 doesn't allow passing a function to say\n   *  Component.template so the use of  DynamicComponentLoader is needed.\n   *  Also using a ngFor with children set to display based off an ngIf statement will cause\n   *  elements to not float correct due to angular having to wrap each directive in a shadow\n   *  div/template. Using DynamicComponentLoader allows us to inline our input component\n   *  right with text and display it as if it was one string of text\n   *\n   *  for 2.0.0-beta.16+ refer to this commit :\n   *  https://github.com/angular/angular/commit/efbd446d18e6e0380beafcad6e94a7751d788623\n   * @param id\n   */\n  renderDescription(id: string) {\n\n\n    if (this._previousTalentId === id) return;\n    this._previousTalentId = id;\n    if (this._componentRef) this._componentRef.destroy();\n\n    let text = _.find(this.choices, {id: id}).template;\n    let template = text.split(TEMPLATE_INPUT_MARKER_REXP)\n      .map((part: string) => {\n        if (!part) return '';\n        let matches = part.match(TEMPLATE_INPUT_MARKER_REXP);\n        let format = matches ? TALENT_INPUT_FORMAT[matches.pop()] : false;\n        return format ? TALENT_INPUT_TEMPLATE.replace(INPUT_FORMAT_MARKER, format) : part;\n      }).join('');\n\n    this._loader.loadNextToLocation(\n      TalentComponent.toComponent(template, this.talent),\n      this._descriptionContainerRef\n    ).then(ref => this._componentRef = ref);\n  }\n\n\n  onTalentChanged(id) {\n    this.renderDescription(id);\n  }\n\n  onTalentUnlockedChanged(unlocked) {\n    this.talent.unlocked = unlocked;\n  }\n\n  get talentImage() {\n    return this._itemsService\n      .talentImageResolve(this.talent.id).primary;\n  }\n\n\n}\n\n@Component({\n  selector: 'talents',\n  styles: [` \n  .talents-wrapper {\n    padding: 1px;\n  }\n`],\n  template: require('./talents.component.html'),\n  directives: [TalentComponent]\n})\nexport class TalentsComponent {\n\n  @Input() talents: Talent[];\n  @Input() choices: ItemTalent[];\n\n  @Input('has-image')\n  @InputConverter(BooleanConverter) hasImage: boolean;\n}\n\n\n\n\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/talents/talents.component.ts\n **/","module.exports = \"<div class=\\\"weapon-stats-wrapper\\\">\\n  <div class=\\\"stats-wrapper\\\">\\n    DMG\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      <auto-resize-input\\n        resize-increment=\\\"20\\\"\\n        prepend=\\\"\\\"\\n        format=\\\"weapon\\\"\\n        [(ngModel)]=\\\"damage\\\"\\n        (input)=\\\"onWeaponStatsChanged('damage',$event)\\\"></auto-resize-input>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"stats-wrapper\\\">\\n    RPM\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      {{rpm}}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"stats-wrapper\\\">\\n    MAG\\n    <div class=\\\"number-wrapper stat-number-wrapper\\\">\\n      {{magazine}}\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/weapon-stats/weapon-stats.component.html\n ** module id = 551\n ** module chunks = 2\n **/","module.exports = \".weapon-stats-wrapper{display:flex;justify-content:space-between}.stat-wrapper{font-weight:600}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/weapon-stats/weapon-stats.component.scss\n ** module id = 539\n ** module chunks = 2\n **/","import {Component, Input, OnInit} from '@angular/core';\nimport {Weapon} from '../inventory/inventory.model';\nimport {AutoResizeInputComponent} from '../auto-resize-input/auto-resize-input.component';\nimport {EditorService} from '../../services/editor-service';\nimport {BuildStatsService, WeaponStatsCalculator} from '../../services/build-stats.service';\n\n\n@Component({\n  selector: 'weapon-stats',\n  styles: [require('./weapon-stats.component.scss')],\n  template: require('./weapon-stats.component.html'),\n  directives: [AutoResizeInputComponent]\n\n})\nexport class WeaponStatsComponent implements OnInit {\n\n  @Input() weapon: Weapon;\n  _calc: WeaponStatsCalculator;\n\n\n  constructor(private _editorService: EditorService,\n              private _buildStatsService: BuildStatsService) {\n\n\n  }\n\n\n  ngOnInit(): any {\n    this._calc = this._buildStatsService\n      .createForWeapon(this.weapon);\n  }\n\n  get _editing() {\n    return this._editorService.state;\n  }\n\n  get damage() {\n    return this._editing ? this.weapon.stats.damage\n      : this._calc.damage;\n  }\n\n  get rpm() {\n    return this._calc.rpm;\n\n  }\n\n  get magazine() {\n    return this._calc.magazineSize;\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/weapon-stats/weapon-stats.component.ts\n **/","/**\n * Created by Keyston on 4/7/2016.\n */\n\n\nimport {Directive, ElementRef, Renderer, OnInit, OnDestroy, Input} from '@angular/core';\nimport {EditorService} from '../services/editor-service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {InputConverter, BooleanConverter} from '../common/converters';\n\n@Directive({\n  selector: '[editor]'\n})\nexport class EditorDirective implements OnInit, OnDestroy {\n\n\n  @Input('editor')\n  @InputConverter(BooleanConverter)\n  isEditorComponent: boolean = false;\n\n\n  private _subscription: Subscription;\n\n  constructor(private _elementRef: ElementRef, private _editorService: EditorService,\n              private _renderer: Renderer) {\n\n  }\n\n\n  ngOnInit(): any {\n    this._subscription = this._editorService\n      .subscribe((value) => this._onEditorStateChanged(value));\n  }\n\n  ngOnDestroy(): any {\n    this._subscription.unsubscribe();\n  }\n\n  private _onEditorStateChanged(inEditMode) {\n\n\n    let showElement = ((inEditMode && this.isEditorComponent)\n    || (!inEditMode && !this.isEditorComponent)  );\n\n\n    this._renderer.setElementClass(this._elementRef.nativeElement, 'hidden', !showElement);\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/directives/editor.ts\n **/","import {DIVISION_PROVIDERS} from './services/core';\nimport {InventoryComponent} from './components/inventory/inventory.component';\nimport {ItemOverviewComponent} from './components/item-overview/item-overview.component.ts';\nexport * from './app.component';\n\n\nexport const APP_DIRECTIVES = [\n  InventoryComponent, ItemOverviewComponent\n];\nexport const APP_PROVIDERS = [\n  ...DIVISION_PROVIDERS\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/index.ts\n **/","module.exports = \"<base href=\\\"/\\\">\\n<main *ngIf=\\\"loaded\\\">\\n  <build-stats-banner></build-stats-banner>\\n  <router-outlet></router-outlet>\\n</main>\\n\\n\\n\\n\\n<footer>\\n  © 2016\\n  <div>Font made from <a href=\\\"http://www.onlinewebfonts.com\\\">www.onlinewebfonts.com</a> is licensed by CC BY 3.0</div>\\n</footer>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/my-division-build-app.html\n ** module id = 552\n ** module chunks = 2\n **/","import {Injectable} from '@angular/core';\nimport {\n  ItemType, AttributeType, GearAttribute, WeaponAttribute, DivisionAttribute\n}\n  from '../common/models/common';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/startWith';\nimport {BehaviorSubject} from 'rxjs/Rx';\nimport {asObservable} from '../common/utils';\nimport * as _ from 'lodash/index';\nimport {isWeaponType} from './item.service';\n/**\n * Created by Keyston on 4/3/2016.\n */\nexport type AttributeObservable = Observable<DivisionAttribute[]>\n\n@Injectable()\nexport class AttributesService {\n\n\n  private _gearAttributes = new BehaviorSubject<GearAttribute[]>([]);\n\n  private _weaponAttributes = new BehaviorSubject<WeaponAttribute[]>([]);\n\n  private static defaultFilterProvider(gearType: ItemType, attributeType: AttributeType) {\n    return {type: attributeType, supports: [gearType]};\n  }\n\n  private static skillFilterProvider(gearType: ItemType) {\n    return {type: AttributeType.SKILL, skill: true, supports: [gearType]};\n  }\n\n  constructor(private _http: Http) {\n\n\n\n\n    // this._bodyArmor = new AttributeStore(ItemType.BodyArmor, this._http);\n\n\n  }\n\n  init() {\n    this._loadGearAttributes();\n    this._loadWeaponAttributes();\n  }\n\n\n  _loadWeaponAttributes() {\n    let basePath = 'app/assets/json/weapon-attributes.json';\n    this._http.get(basePath)\n      .map(res => <WeaponAttribute[]>res.json())\n      .subscribe(\n        attributes => this._weaponAttributes.next(attributes),\n        err => console.error(err),\n        () => console.log('Finished loading attributes')\n      );\n  }\n\n  _loadGearAttributes() {\n    let basePath = 'app/assets/json/gear-attributes.json';\n    this._http.get(basePath)\n      .map(res => <GearAttribute[]>res.json())\n      .subscribe(\n        attributes => this._gearAttributes.next(attributes),\n        err => console.error(err),\n        () => console.log('Finished loading attributes')\n      );\n  }\n\n\n  get weaponAttributes(): Observable<WeaponAttribute[]> {\n    return asObservable(this._weaponAttributes, true);\n  }\n\n  get gearAttributes(): Observable<GearAttribute[]> {\n    return asObservable(this._gearAttributes.first((attrs, idx, obs) => !!attrs.length));\n  }\n\n\n  getFor(itemType: ItemType, attributeType: AttributeType): AttributeObservable {\n    return isWeaponType(itemType)\n      ? this._weaponAttributesFor(itemType, attributeType)\n      : this._gearAttributesFor(itemType, attributeType);\n\n  }\n\n  _weaponAttributesFor(itemType: ItemType, attributeType: AttributeType): AttributeObservable {\n    return this.weaponAttributes;\n  }\n\n  _gearAttributesFor(itemType: ItemType, attributeType: AttributeType): AttributeObservable {\n    let providerName = attributeType + 'FilterProvider';\n    let filterProvider = AttributesService[providerName]\n      ? AttributesService[providerName] : AttributesService.defaultFilterProvider;\n    return asObservable(this._gearAttributes.map(attrs => {\n      return _.filter(attrs, filterProvider(itemType, attributeType));\n    }));\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/attributes.service.ts\n **/","/**\n * Created by Keyston on 5/17/2016.\n */\nimport {Injectable, provide} from '@angular/core';\n\nimport {\n  PSNIdentityStrategy, IdentityStrategy\n}\n  from './login-strategies/index';\nimport {LOGIN_STRATEGY_PROVIDERS} from './login-strategies/strategy';\nimport {Dictionary} from '../common/models/common';\n\n\nclass AuthStrategies {\n  [index: string]: IdentityStrategy;\n\n}\n\n\nexport type AuthType = 'psn' | 'xbox' | 'steam' | 'uplay';\n// tslint:disable-next-line\nexport const AuthType = {\n  PSN: 'psn' as AuthType\n};\n@Injectable()\nexport class AuthService {\n\n  constructor(private _strategies: AuthStrategies) {\n\n  }\n\n\n  authFor(authType: AuthType): IdentityStrategy {\n    return <IdentityStrategy>this._strategies[authType];\n  }\n}\n\n\nexport const AUTH_PROVIDERS: any[] = [\n  ...LOGIN_STRATEGY_PROVIDERS,\n  provide(AuthStrategies, {\n    useFactory: (psn: PSNIdentityStrategy) => {\n      let strategies = new AuthStrategies();\n      strategies[AuthType.PSN] = psn;\n      return strategies;\n    },\n    deps: [PSNIdentityStrategy]\n  }),\n  AuthService\n\n];\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/auth.service.ts\n **/","import {Injectable} from '@angular/core';\nimport {ItemsService, isWeaponType} from './item.service';\nimport {ItemType, DivisionItem, GearRarity, ItemTalent} from '../common/models/common';\nimport {InventoryService} from './inventory.service';\nimport {Weapon} from '../components/inventory/inventory.model';\nimport {Gear} from '../components/item-overview/gear.model';\nimport * as _ from 'lodash/index';\nimport {Subject} from 'rxjs/Subject';\nimport {asObservable} from '../common/utils';\n/**\n * Created by Keyston on 5/7/2016.\n */\n\n\n@Injectable()\nexport class BootstrapService {\n\n  constructor(private _itemsService: ItemsService,\n              private _inventoryService: InventoryService) {\n\n\n  }\n\n  boot() {\n\n    this._itemsService.init();\n    let subject = new Subject<InventoryService>();\n    let toLoad = 0;\n    _.forEach(ItemType, (itemType: ItemType, key: string) => {\n\n      let isWeapon = isWeaponType(itemType);\n      if (isWeapon && itemType !== ItemType.AR) return;\n      toLoad++;\n      this._itemsService\n        .getDescriptorFor(itemType)\n        .subscribe(descriptor => {\n\n            let first = <DivisionItem>descriptor.items[GearRarity.SUPERIOR][0];\n\n\n            let empty = isWeapon\n              ? this._weaponDefaultState(descriptor.talents, itemType, first.name)\n              : this._gearDefaultState(itemType, first.name);\n\n\n            if (isWeapon) {\n              this._inventoryService.updateWeapon('primary', <Weapon>empty);\n              this._inventoryService.updateWeapon('secondary', _.cloneDeep(<Weapon>empty));\n            } else {\n              this._inventoryService.update(itemType, empty);\n            }\n            toLoad--;\n            if (!toLoad) {\n              subject.next(this._inventoryService);\n            }\n          }\n        );\n\n    });\n    return asObservable(subject);\n  }\n\n  \n\n  private _weaponDefaultState(talents: ItemTalent[], itemType, name: string): Weapon {\n\n    let _talents = _.chain(talents).take(2).map(talent => {\n      return {id: talent.id};\n    }).value();\n    return {\n      rarity: GearRarity.SUPERIOR,\n      type: itemType,\n      name: name,\n      score: 131,\n\n      stats: {\n        damage: 13500\n\n      },\n      mods: [],\n      talents: _talents\n    };\n  }\n\n  private _gearDefaultState(itemType: ItemType, name: string): Gear {\n    let gear = {\n      rarity: GearRarity.SUPERIOR,\n      type: itemType,\n      name: name,\n      score: 131,\n      stats: {\n        firearms: 0,\n        stamina: 0,\n        electronics: 0\n\n      },\n      armor: 100,\n      attributes: {\n        major: [],\n        minor: [],\n        skill: []\n\n      },\n      mods: [],\n      talents: []\n    };\n    let keys = ['firearms', 'stamina', 'electronics'];\n    let key = keys[_.random(0, keys.length - 1)];\n    gear.stats[key] = _.random(450, 650);\n\n    return gear;\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/bootstrap.service.ts\n **/","/**\n * Created by Keyston on 5/7/2016.\n */\n\n\nimport {Injectable, Inject, forwardRef} from '@angular/core';\nimport {Inventory, Weapon, InventoryGear} from '../components/inventory/inventory.model';\nimport {ItemType, Affects} from '../common/models/common';\nimport {\n  WeaponDescriptor,\n  WeaponInfo,\n  WeaponDescriptorCollection,\n  ItemsService,\n  GearDescriptorCollection,\n  WeaponBaseStats\n} from './item.service';\nimport {Gear} from '../components/item-overview/gear.model';\nimport * as _ from 'lodash/index';\nimport {InventoryService} from './inventory.service';\nimport {Attribute} from '../components/attributes/attributes.model';\n@Injectable()\nexport class BuildStatsService {\n\n  constructor(private _itemsService: ItemsService,\n              @Inject(forwardRef(() => InventoryService))\n              private _inventoryService: InventoryService) {\n\n  }\n\n\n  create(inventory?: Inventory, primary?: Weapon, secondary?: Weapon) {\n\n    let gearDescriptors = this._itemsService._gearDescriptors;\n    let weaponDescriptors = this._itemsService._weaponDescriptors;\n    inventory = inventory ? inventory : this._inventoryService.inventory;\n    primary = primary || inventory.weapons.primary;\n    secondary = secondary || inventory.weapons.secondary;\n    return new InventoryCalculator(\n      inventory, weaponDescriptors,\n      gearDescriptors, primary, secondary);\n  }\n\n  createForWeapon(weapon: Weapon, inventory?: Inventory) {\n    return this.create(inventory, weapon).primary;\n  }\n\n}\n\nexport class InventoryCalculator {\n\n\n  private _primary: WeaponStatsCalculator;\n  private _secondary: WeaponStatsCalculator;\n\n  constructor(private _inventory: Inventory,\n              weaponDescriptors: WeaponDescriptorCollection,\n              private _gearDescriptors: GearDescriptorCollection,\n              private _primaryWeapon: Weapon, private _secondaryWeapon: Weapon) {\n\n\n    this._primary = new WeaponStatsCalculator(_primaryWeapon, weaponDescriptors, this);\n    this._secondary = new WeaponStatsCalculator(_secondaryWeapon, weaponDescriptors, this);\n  }\n\n  get primary() {\n    return this._primary;\n  }\n\n  get secondary() {\n    return this._secondary;\n  }\n\n  get skillpower() {\n\n    let fromElectronics = (this.electronics * 10);\n    let fromMods = this.calculateAffectsValueFromMods(Affects.SKILL_POWER);\n    let fromAttributes = this.calculateAffectsValueFromAttributes(Affects.SKILL_POWER);\n    return fromElectronics + fromMods + fromAttributes;\n  }\n\n  get firearms() {\n    let base = this._reduce((sum, gear) => sum + gear.stats.firearms);\n    let fireArmsFromMods = this.calculateAffectsValueFromMods(Affects.FIREARMS);\n    return base + fireArmsFromMods;\n  }\n\n  get stamina() {\n    let base = this._reduce((sum, gear) => sum + gear.stats.stamina);\n    let fromMods = this.calculateAffectsValueFromMods(Affects.STAMINA);\n    return base + fromMods;\n  }\n\n  staminaFor(gear: Gear) {\n    let base = gear.stats.stamina;\n    let fromMods = this.calculateAffectsValueFromMods(Affects.STAMINA, gear);\n    return base + fromMods;\n\n  }\n\n  get electronics() {\n    let base = 535; // base at lvl 30\n    let fromGear = this._reduce((sum, gear) => sum + gear.stats.electronics);\n    let fromMods = this.calculateAffectsValueFromMods(Affects.ELECTRONICS);\n    return base + fromGear + fromMods;\n  }\n\n  get health() {\n    // http://divisionfieldguide.com/post/2016/03/which-is-better-armor-versus-health/\n    let base = this.stamina * 30;\n    let fromMods = this.calculateAffectsValueFromMods(Affects.HEALTH);\n    let fromAttributes = this.calculateAffectsValueFromAttributes(Affects.HEALTH);\n    return base + fromMods + fromAttributes;\n  }\n\n  weaponDamage(itemType: ItemType) {\n    let affects = Affects.normalize(itemType + '_damage');\n    return this.calculateAffectsValueFromAttributes(affects);\n  }\n\n\n  calculateTotalAffectsValue(affects: Affects) {\n    let talentAffects = this.calculateAffectsValueFromTalents(affects);\n    let modsAffects = this.calculateAffectsValueFromMods(affects);\n    let attributesAffects = this.calculateAffectsValueFromAttributes(affects);\n    return talentAffects + modsAffects + attributesAffects;\n  }\n\n\n  descriptorForType(itemType: ItemType) {\n    return this._gearDescriptors.forType(itemType);\n  }\n\n  calculateAffectsValueFromTalents(affects: Affects) {\n    return this._reduce((sum, gear) => {\n\n      if (!gear.talents.length) return sum;\n      // resolve descriptor to get correct talents\n      let descriptor = this.descriptorForType(gear.type);\n      // filter out only the talents that can affect this value\n      // and return only the ids for quick checking\n      let talentsThatAffects = _.filter(\n        descriptor.talents,\n        {affects: [affects]}\n      ).map(talent => talent.id);\n\n      // no talents found that can affect this so return zero\n      if (!talentsThatAffects.length) return sum;\n\n      // gear only has one talent\n      let talent = gear.talents[0];\n      return sum + ( _.includes(talentsThatAffects, talent.id) ? talent.value : 0);\n\n    });\n  }\n\n\n  _attributesThatAffects(affects: Affects): number[] {\n    return _.filter(\n      this._gearDescriptors.attributes,\n      {affects: [affects]}\n    ).map(attr => attr.id);\n  }\n\n  calculateAffectsValueFromMods(affects: Affects, limitToGear?: Gear) {\n    let attributesThatAffects = this._attributesThatAffects(affects);\n    if (!attributesThatAffects.length) return 0;\n    return this._reduce((sum, gear) => {\n\n      let mods = gear.mods;\n\n\n      return sum + _.reduce(mods, (total, mod) => {\n\n          let primary = mod.primary && _.includes(attributesThatAffects, mod.primary.id)\n            ? mod.primary.value\n            : 0;\n\n          let secondary = mod.secondary && _.includes(attributesThatAffects, mod.secondary.id)\n            ? mod.secondary.value\n            : 0;\n\n          return total + primary + secondary;\n\n        }, 0);\n\n    }, limitToGear);\n  }\n\n  calculateAffectsValueFromAttributes(affects: Affects) {\n    let attributesThatAffects = this._attributesThatAffects(affects);\n    if (!attributesThatAffects.length) return 0;\n\n\n    return this._reduce((sum, gear) => {\n      let attributes = <Attribute[]>_.flatten(_.values(gear.attributes));\n      return sum + _.reduce(attributes, (total, attr) => {\n          return total + (_.includes(attributesThatAffects, attr.id) ? +attr.value : 0);\n        }, 0);\n    });\n  }\n\n\n  _reduce(fn: (sum: number, gear: Gear) => number, limitToGear?: Gear) {\n\n    let all = limitToGear ? [limitToGear] : <Gear[]>_.values(this._inventory.gear);\n    return _.reduce(all, (sum, gear) => {\n      return gear ? fn(sum, gear) : sum;\n    }, 0);\n  }\n\n\n  caculateDps(weapon: Weapon) {\n    let calc = weapon === this._secondaryWeapon\n      ? this._secondary : this._primary;\n\n    return calc.dps;\n  }\n}\n\n\nexport class WeaponStatsCalculator {\n\n\n  constructor(private _weapon: Weapon,\n              private _weaponDescriptors: WeaponDescriptorCollection,\n              private _inventoryCalc: InventoryCalculator) {\n\n\n  }\n\n\n  get dps() {\n\n    // https://docs.google.com/spreadsheets/d/1lOh5fD3l1xhh1NE8HG0iQfY-d2Q_3-Yi9euvx_MH4Lg/edit#gid=522138074\n    let rpm = this.rpm;\n\n    let reloadSpeed = this.reloadSpeed; // C18\n\n    let magazineSize = this.magazineSize; // C19\n\n\n    let damagePerBullet = this.damage;  // C12\n    let accuracy = this.accuracy / 100;   // C13\n    let critChanceFromGear = this._inventoryCalc\n      .calculateTotalAffectsValue(Affects.CRIT_HIT_CHANCE);\n    let critChanceFromWeaponMods = this\n      .calculateAffectsValueFromMods(Affects.CRIT_HIT_CHANCE);\n\n    let critChanceFromWeaponTalents = this\n      .calculateAffectsFromWeaponTalents(Affects.CRIT_HIT_CHANCE);\n    let inheritedWeaponCritChance = this.calculateAffectsFromWeaponBonus(Affects.CRIT_HIT_CHANCE);\n    let critChance = (inheritedWeaponCritChance + critChanceFromGear\n      + critChanceFromWeaponTalents + critChanceFromWeaponMods)\n      / 100; // C15\n    critChance = 0.235;\n\n    let critDamageFromGear = this._inventoryCalc\n      .calculateTotalAffectsValue(Affects.CRIT_HIT_DAMAGE);\n    let critDamageFromWeaponMods = this.calculateAffectsValueFromMods(Affects.CRIT_HIT_DAMAGE);\n    let critDamageFromWeaponTalents = this\n      .calculateAffectsFromWeaponTalents(Affects.CRIT_HIT_DAMAGE);\n    let critDamage = (critDamageFromGear + critDamageFromWeaponMods\n      + critDamageFromWeaponTalents) / 100; // C16\n\n\n    let headShotBonus = this\n        .calculateAffectsValueFromMods(Affects.ASSAULT_RIFLE_DAMAGE) / 100; // C14\n    let damagePerHeadShot = damagePerBullet * headShotBonus; // F15\n\n    let nonHeadShotBullets = magazineSize * (1 - accuracy);  // F20\n    let headShotBullets = magazineSize * accuracy; // F21\n\n    let oneIsNoneExtraBullets = 0; // F22\n\n    let adjustedMagSize = magazineSize + oneIsNoneExtraBullets;  // F23\n    let adjustedNonHeadShotBullets = nonHeadShotBullets + (oneIsNoneExtraBullets * (1 - accuracy)); // F24\n    let adjustedHeadShotBullets = headShotBullets + (oneIsNoneExtraBullets * accuracy); // F25\n\n    // Crit\n    // let critNonHeadShotDamage = damagePerBullet * (1 + critDamage); // F29\n    // let critHeadShotDamage = damagePerHeadShot + (1 + critDamage); // F30\n    // let nonHeadShotCritChance = adjustedNonHeadShotBullets * critChance; // F31\n    // let headShotCritChance = adjustedHeadShotBullets * critChance; // F32\n\n    // DPS Breakdown\n    let totalDamage = (adjustedMagSize * (1 - critChance) * (1 - accuracy)) * damagePerBullet;\n    let totalHeadShotDamage = (adjustedMagSize * accuracy\n      - (adjustedMagSize * critChance * accuracy))\n      * (damagePerBullet * headShotBonus);\n    let totalCritDamage = (adjustedMagSize * (critChance * (1 - accuracy)))\n      * (damagePerBullet * (1 + critDamage));\n    let critHeadShotDamage = (adjustedMagSize * accuracy * critChance)\n      * (damagePerBullet * headShotBonus * (1 + critDamage));\n\n    let cycleTime = adjustedMagSize / (rpm / 60) + reloadSpeed;\n\n    let finalDPS = (totalDamage + totalHeadShotDamage + totalCritDamage + critHeadShotDamage)\n      / cycleTime;\n\n\n    return Math.floor(finalDPS);\n\n\n  }\n\n\n  get reloadSpeed() {\n    let stats = this._weaponBaseStats;\n    let base = stats.reloadEmpty / 1000;\n    return (base * (this.calculateAffectsValueFromMods(Affects.RELOAD) / 100)) + base;\n  }\n\n  get rpm() {\n    let stats = this._weaponBaseStats;\n    let rpm = (stats.rpm * (this.calculateAffectsValueFromMods(Affects.RPM) / 100)) + stats.rpm;\n    return Math.floor(rpm);\n  }\n\n  get magazineSize() {\n    let stats = this._weaponBaseStats;\n    let magazineSize = (stats.magazine\n      * (this.calculateAffectsValueFromMods(Affects.MAGAZINE_SIZE) / 100)) + stats.magazine;\n\n    return Math.floor(magazineSize);\n  }\n\n  get weaponDescriptor() {\n\n    return this._weaponDescriptors.forType(this._weapon.type);\n\n  }\n\n  weaponInfo(descriptor?: WeaponDescriptor) {\n\n\n    let items = <WeaponInfo[]>_.merge([], ..._.values(descriptor\n      ? descriptor.items : this.weaponDescriptor.items));\n    return _.find(items, {name: this._weapon.name});\n  }\n\n  get damage() {\n\n    // https://www.reddit.com/r/thedivision/comments/4cfhr6/more_information_on_weapon_damage_math/\n    // https://www.reddit.com/r/thedivision/comments/4auh6v/actual_formula_for_weapon_damage/\n    let base = (\n    this._weapon.stats.damage\n    + this._flatDamageBonus + this._scalingFactor\n    * this._inventoryCalc.firearms);\n\n    let damagePercentage = 1 + this._weaponDamagePercent();\n    return base * damagePercentage * this._otherWeaponDamageMultipliers();\n  }\n\n\n  get accuracy() {\n\n\n    return this._weapon.type !== ItemType.Sniper\n      ? this._accuracy() : this._sniperAccuracy();\n\n\n  }\n\n  _accuracy() {\n    // ui_dictionary.mdict   WeaponAccuracyCompareUI\n    let stats = this._weaponBaseStats;\n    // (1/(1+Weapon.AimSpreadMin))*100 + (1/(1+Weapon.AimSpreadMax))*10\n    // + (1/(1+Weapon.SpreadMax))*20 + WeaponSpreadSizeModBonus*40\n    // + WeaponSpreadMaxModBonus*20 -40\n    let base = (1 / (1 + stats.aimSpreadMin)) * 100\n      + (1 / (1 + stats.aimSpreadMax)) * 10\n      + (1 / (1 + stats.spreadMax));\n    let spreadSizeModBonus = this.calculateAffectsValueFromMods(Affects.ACCURACY) * 40;\n    let spreadMaxModBonus = this.calculateAffectsValueFromMods(Affects.HIP_ACCURACY) * 20;\n\n    return base + spreadSizeModBonus + spreadMaxModBonus - 40;\n  }\n\n  _sniperAccuracy() {\n    let stats = this._weaponBaseStats;\n    // ((1/(1+(TimeToMinAccuracyMSFinal + TimeToMaxAccuracyMSFinal))) *200 + 0.6)\n    // * 60 + WeaponSpreadSizeModBonus*40 +20\n    let base = ((1 / (1 + (stats.timeToMinAccuracy + stats.timeToMaxAccuracy))) * 200 + 0.6) * 60;\n    let spreadSizeModBonus = this.calculateAffectsValueFromMods(Affects.ACCURACY) * 40;\n    return base + spreadSizeModBonus + 20;\n  }\n\n  get _weaponBaseStats(): WeaponBaseStats {\n    let descriptor = this.weaponDescriptor;\n    let family = this.weaponInfo(descriptor).family;\n    return this._weaponDescriptors.weaponStatsFor(descriptor, family);\n\n  }\n\n  get _scalingFactor() {\n\n    // https://www.reddit.com/r/thedivision/comments/4e0c7k/all_weapons_dmg_scaling_values/\n    return this._weaponBaseStats.scaling;\n\n  }\n\n  get _flatDamageBonus() {\n    return this._inventoryCalc.weaponDamage(this._weapon.type);\n  }\n\n  _weaponDamagePercent() {\n    return this\n        .calculateAffectsValueFromMods(Affects.WEAPON_DAMAGE)\n      + this._inventoryCalc\n        .calculateTotalAffectsValue(Affects.WEAPON_DAMAGE);\n  }\n\n  _otherWeaponDamageMultipliers() {\n    // https://www.reddit.com/r/thedivision/comments/4gica6/all_your_multipliers_are_belong_to_us/\n    return 1;\n  }\n\n  calculateAffectsFromWeaponBonus(affects: Affects) {\n    let bonus = this._weapon.stats.bonus;\n    return bonus && bonus.affects === affects ? bonus.value : 0;\n  }\n\n  calculateAffectsFromWeaponTalents(affects: Affects) {\n    let talentsThatAffects = this._attributesThatAffects(affects);\n    if (!talentsThatAffects.length) return 0;\n    let talents = _.filter(this._weapon.talents, {unlocked: true});\n    return _.reduce(talents,\n      (sum, talent) => sum + (_.includes(talentsThatAffects, talent.id)\n        ? talent.value : 0), 0);\n  }\n\n  _attributesThatAffects(affects: Affects): string[] {\n    return _.filter(\n      this.weaponDescriptor.talents,\n      {affects: [affects]}\n    ).map(attr => attr.id);\n  }\n\n\n  calculateAffectsValueFromMods(affects: Affects) {\n    let mods = this._weapon.mods;\n    let attributes = _.filter(\n      this._weaponDescriptors.attributes,\n      {affects: [affects]}\n    ).map(attr => attr.id);\n    if (!attributes.length) return 0;\n    return _.reduce(mods, (sum, mod) => {\n\n      let primary = _.includes(attributes, mod.primary.id) ? mod.primary.value : 0;\n      let secondary = _.includes(attributes, mod.secondary.id) ? mod.secondary.value : 0;\n      return sum + primary + secondary;\n    }, 0);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/build-stats.service.ts\n **/","import {AttributesService} from './attributes.service';\nimport {ItemsService} from './item.service';\nimport {EditorService} from './editor-service';\nimport {ModSlotService} from './modslots.service';\nimport {InventoryService} from './inventory.service';\n\nimport {BootstrapService} from './bootstrap.service';\nimport {BuildStatsService} from './build-stats.service';\nimport {AuthService} from './auth.service.ts';\n\n/**\n * Created by Keyston on 4/3/2016.\n */\n\n\nexport const DIVISION_PROVIDERS: any[] = [AttributesService, ItemsService,\n  EditorService, ModSlotService, InventoryService, BuildStatsService,\n  BootstrapService, AuthService];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/core.ts\n **/","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/Rx';\n/**\n * Created by Keyston on 4/7/2016.\n */\n\n@Injectable()\nexport class EditorService {\n\n  private _current: boolean = true;\n  private event = new BehaviorSubject<boolean>(this._current);\n\n\n  toggle() {\n    this.event.next(this._current = !this._current);\n  }\n\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    return this.event.subscribe(generatorOrNext, error, complete);\n  }\n\n  get state() {\n    return this._current;\n  }\n\n  on() {\n    this.event.next(this._current = true);\n  }\n\n  off() {\n    this.event.next(this._current = false);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/editor-service.ts\n **/","import {\n  Inventory, InventoryItem, Weapon\n}\n  from '../components/inventory/inventory.model';\nimport {Injectable, Inject, forwardRef} from '@angular/core';\nimport {DUMMY_GEAR, Gear} from '../components/item-overview/gear.model';\nimport {Gender, ItemType, WeaponSlot} from '../common/models/common';\nimport {dashCaseToCamelCase} from '@angular/compiler/src/util';\n\nimport {Http, Response, Headers, RequestOptions} from '@angular/http';\nimport {isWeaponType, ItemsService} from './item.service';\nimport * as _ from 'lodash/index';\n\nimport {BehaviorSubject} from 'rxjs';\nimport {asObservable} from '../common/utils';\nimport {Observable} from 'rxjs/Observable';\nimport {BuildStatsService} from './build-stats.service';\n\n\n/**\n * Created by Keyston on 4/27/2016.\n */\n\ntype Inventories = {[id: string]: InventoryInfo}\n\ninterface BuildMeta {\n  firearms: number;\n  stamina: number;\n  electronics: number;\n  dps: number;\n  health: number;\n  skillpower: number;\n}\n\n\ninterface InventoryInfo {\n  name: string;\n  id: string;\n  url: string;\n  meta?: BuildMeta;\n}\nconst STORAGE_KEY = 'inventories';\n@Injectable()\nexport class InventoryService {\n\n  _weaponSelected = new BehaviorSubject<Weapon>(void 0);\n  private _inventory: Inventory;\n\n  private _api: string = 'https://api.myjson.com/bins';\n\n\n  private _inventories: Inventories;\n\n  private _stats: BuildStatsService;\n  private _defaultInventoryState: Inventory;\n\n\n  get weaponSelected(): Observable<Weapon> {\n    return asObservable(this._weaponSelected.filter((x, _) => !!x));\n  }\n\n  _isWeaponSlot(value: string) {\n    return !!_.includes(_.values(WeaponSlot), value);\n  }\n\n  _inventoryItemSlot(value: string) {\n    return this._isWeaponSlot(value) ? 'weapons' : 'gear';\n  }\n\n  constructor(private _http: Http,\n              @Inject(forwardRef(() => ItemsService))\n                itemsService: ItemsService) {\n\n\n    let storage = localStorage.getItem(STORAGE_KEY);\n    if (storage) this._inventories = <Inventories>JSON.parse(storage);\n    this._stats = new BuildStatsService(itemsService, this)\n    this.reset();\n\n\n  }\n\n  retrieveWeapon(slot: ItemType): Weapon {\n    return this._inventory.weapons[slot];\n  }\n\n  retrieve(itemType: ItemType): Gear {\n\n\n    return this._inventory[this._inventoryItemSlot(itemType)]\n      [dashCaseToCamelCase(itemType)];\n  }\n\n  updateWeapon(slot: string, value: Weapon) {\n    this._inventory.weapons[slot] = value;\n    if (slot === 'primary' && !this._weaponSelected.getValue()) {\n      this._weaponSelected.next(value);\n    }\n  }\n\n  update(itemType: ItemType, value: InventoryItem) {\n\n    this._inventory.gear\n      [dashCaseToCamelCase(itemType)] = value;\n\n\n  }\n\n\n  remove(id) {\n\n    delete this._inventories[id];\n  }\n\n  save() {\n    let id = this._inventory.id || '';\n\n    let json = JSON.stringify(this._inventory);\n\n\n    let url = this._api + (id ? `/${id}` : '');\n\n    let headers = new Headers({'Content-Type': 'application/json; charset=UTF-8'});\n    let options = new RequestOptions({headers: headers});\n\n    let request = id ? this._http.put(url, json, options).map(_ => {\n      return {\n        id: id,\n        url: url\n      };\n    })\n      : this._http.post(url, json, options).map((resp: Response) => {\n      let uri = resp.json().uri;\n      return {\n        url: uri,\n        id: uri.split('/').pop()\n      };\n    });\n\n    request.subscribe((data: InventoryInfo) => {\n\n      data.name = this._inventory.name;\n\n\n      let calc = this._stats.create();\n      data.meta = {\n        firearms: calc.firearms,\n        stamina: calc.stamina,\n        electronics: calc.electronics,\n        dps: calc.caculateDps(this._inventory.weapons.primary),\n        health: calc.health,\n        skillpower: calc.skillpower\n      };\n\n\n      this._inventories[data.id] = data;\n\n      this._inventory.id = data.id;\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this._inventories));\n\n    });\n\n\n  }\n\n  get inventory() {\n    return this._inventory;\n  }\n\n  load(id?: string) {\n\n    if (id) {\n      let url = this._api + '/' + id;\n      this._http.get(url)\n        .map((resp) => <Inventory>resp.json())\n        .subscribe(\n          inventory => {\n            this._inventory = inventory;\n\n          },\n          error => console.log('Not Found')\n        );\n    } else {\n      this.reset();\n    }\n\n  }\n\n  reset() {\n    this._inventory = new Inventory();\n    // TODO: Add selector for choosing gender\n    this._inventory.name = 'New Build';\n    this._inventory.gender = Gender.FEMALE;\n  };\n\n  owns() {\n    if (!this._inventory) return false;\n    let id = this._inventory.id;\n    return !id || !!this._inventories[id];\n  }\n\n  freeze() {\n    this._defaultInventoryState = _.cloneDeep(this._inventory);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/inventory.service.ts\n **/","/**\n * Created by Keyston on 4/4/2016.\n */\n\n\nimport {Injectable, Inject, forwardRef} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {BehaviorSubject, Subject, Observable} from 'rxjs';\nimport {\n  DivisionItem,\n  ItemType,\n  GearRarity,\n  Rarity,\n  Gender,\n  WEAPON_TYPES,\n  GEAR_TYPES,\n  ItemTalent,\n  WeaponTalent,\n  GearAttribute,\n  WeaponAttribute, Affects\n} from '../common/models/common';\nimport * as _ from 'lodash/index';\nimport {dashCaseToCamelCase} from '@angular/compiler/src/util';\nimport {asObservable} from '../common/utils';\nimport {GEAR_SCORES} from '../components/item-overview/gear.model';\nimport {InventoryItem, WeaponBonusStat} from '../components/inventory/inventory.model';\nimport {WeaponModType} from '../components/modslots/modslots.model';\nimport {AttributesService} from './attributes.service';\n\n\nclass ItemStore {\n  private _items: BehaviorSubject<DivisionItem[]> = new BehaviorSubject<DivisionItem[]>([]);\n}\n\nconst WEAPON_TYPES_TO_LABEL = (function () {\n\n  let values = {};\n  values[ItemType.AR] = 'Assault Rifle';\n  values[ItemType.LMG] = 'Light Machine gun';\n  values[ItemType.SMG] = 'Submachine Gun';\n  values[ItemType.Sniper] = 'Marksman Rifle';\n  values[ItemType.Shotgun] = 'Shotgun';\n  return values;\n})();\n\nlet defaultDescriptorProcessor = (type: ItemType, json: any) => <ItemDescriptor>json;\ninterface GearIconSet {\n  // superior lvl30\n  131?: string;\n  // superior lvl31\n  147?: string;\n  // high-end lvl 30\n  163?: string;\n  // high-end lvl 31\n  182?: string;\n\n}\n\ninterface GearSetIconSet {\n  striker: string;\n  juggernaut: string;\n  sentry: string;\n  nomad: string;\n  tactician: string;\n}\ninterface GearIcons {\n  superior: GearIconSet;\n  'high-end': GearIconSet;\n  'gear-set': GearSetIconSet;\n}\n\ninterface ResolvedImage {\n  primary: string;\n  secondary: string;\n}\n\ninterface DivisionCategories<T, G> {\n  superior: T;\n  'high-end': T;\n  'gear-set': G;\n}\n\nexport type DivisionItems = DivisionCategories<DivisionItem[], DivisionItem[]>\nexport interface ItemDescriptor {\n\n  items: DivisionItems;\n\n  talents: ItemTalent[];\n}\n\ninterface WeaponModCompatibility {\n  magazine: boolean;\n  muzzle: WeaponModType[];\n  optics: WeaponModType[];\n  underbarrel: WeaponModType[];\n}\n\ntype WeaponModCompatibilityByType = {[id: string]: WeaponModCompatibility}\n\ninterface WeaponFamilyStats {\n  parent?: string;\n  values: WeaponBaseStats;\n}\ntype  WeaponBaseStatsByFamily = {[id: string]: WeaponFamilyStats}\n\ninterface WeaponManifest {\n  weapons: WeaponInfo[];\n  compatibility: WeaponModCompatibilityByType;\n  stats: WeaponBaseStatsByFamily;\n}\nexport interface WeaponInfo extends DivisionItem {\n  named: boolean;\n  talents: WeaponTalent[];\n  family: string;\n}\nexport interface GearDescriptor extends ItemDescriptor {\n  icons: DivisionCategories<GearIconSet, GearIconSet>;\n}\n\n\nexport interface WeaponBaseStats {\n  rpm: number;\n  magazine: number;\n  reloadEmpty: number;\n  reload: number;\n  aimSpreadMin: number;\n  aimSpreadMax: number;\n  spreadMax: number;\n  scaling: number;\n  timeToMinAccuracy?: number;\n  timeToMaxAccuracy?: number;\n}\n\n\nexport interface WeaponDescriptor extends ItemDescriptor {\n  compatibility: WeaponModCompatibilityByType;\n  stats: WeaponBaseStatsByFamily;\n}\n\nabstract class DescriptorCollection<T> {\n\n  forType(itemType: ItemType): T {\n    let name = dashCaseToCamelCase(itemType);\n    return this.hasOwnProperty(name) ? this[name] : void 0;\n  }\n}\nexport class GearDescriptorCollection extends DescriptorCollection<GearDescriptor> {\n  bodyArmor: GearDescriptor;\n  mask: GearDescriptor;\n  backPack: GearDescriptor;\n  gloves: GearDescriptor;\n  kneePads: GearDescriptor;\n  holster: GearDescriptor;\n  attributes: GearAttribute[];\n\n\n}\n\nexport class WeaponDescriptorCollection extends DescriptorCollection<WeaponDescriptor> {\n  assaultRifle: WeaponDescriptor;\n  smg: WeaponDescriptor;\n  lmg: WeaponDescriptor;\n  shotgun: WeaponDescriptor;\n  sniper: WeaponDescriptor;\n\n  attributes: WeaponAttribute[];\n\n  weaponStatsFor(descriptor: WeaponDescriptor, family: string): WeaponBaseStats {\n\n\n    let customizer = (objValue, srcValue, key, object, source) => {\n      return _.isUndefined(objValue) ? srcValue : objValue;\n    };\n\n    let stats = descriptor.stats;\n\n    let weaponStats: WeaponBaseStats = <WeaponBaseStats>{};\n    let familyStats;\n    while (family) {\n      familyStats = stats[family];\n      family = familyStats ? familyStats.parent : void 0;\n\n      weaponStats = <WeaponBaseStats>_.assignWith(weaponStats, familyStats.values, customizer);\n    }\n\n    return weaponStats;\n\n  }\n\n}\n\n\n@Injectable()\nexport class ItemsService {\n\n  // gear\n  private _bodyArmor: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n  private _mask: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n  private _backPack: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n  private _gloves: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n  private _kneePads: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n  private _holster: BehaviorSubject<GearDescriptor> = new BehaviorSubject<GearDescriptor>(void 0);\n\n  // weapons\n\n  private _weaponDescriptorCollection: WeaponDescriptorCollection\n    = new WeaponDescriptorCollection();\n  private _gearDescriptorCollection: GearDescriptorCollection\n    = new GearDescriptorCollection();\n\n  private _assaultRifle: BehaviorSubject<WeaponDescriptor> =\n    new BehaviorSubject<WeaponDescriptor>(void 0);\n  private _smg: BehaviorSubject<WeaponDescriptor> =\n    new BehaviorSubject<WeaponDescriptor>(void 0);\n  private _lmg: BehaviorSubject<WeaponDescriptor> =\n    new BehaviorSubject<WeaponDescriptor>(void 0);\n  private _shotgun: BehaviorSubject<WeaponDescriptor> =\n    new BehaviorSubject<WeaponDescriptor>(void 0);\n  private _sniper: BehaviorSubject<WeaponDescriptor> =\n    new BehaviorSubject<WeaponDescriptor>(void 0);\n\n\n  private _weaponTalents: BehaviorSubject<WeaponTalent[]> =\n    new BehaviorSubject<WeaponTalent[]>(void 0);\n\n  private _basePath = 'app/assets/json/';\n  private _imagePath = 'app/assets/images/inventory/';\n\n  // for some reason without using @Inject(forwardRef(() => AttributesService))\n  // AttributesService will resolve to undefined and throw an error\n\n  constructor(private _http: Http,\n              @Inject(forwardRef(() => AttributesService))\n              private _attributesService: AttributesService) {\n\n\n  }\n\n  init() {\n    this._attributesService.init();\n    this._loadItems(GEAR_TYPES, this._gearDescriptorCollection);\n    this._loadWeaponTalents();\n\n    asObservable(this._weaponTalents, true)\n      .subscribe(talents => this._loadWeapons(talents));\n\n    this._attributesService.weaponAttributes\n      .subscribe(attributes => this._weaponDescriptorCollection.attributes = attributes);\n\n    this._attributesService.gearAttributes\n      .subscribe(attributes => this._gearDescriptorCollection.attributes = attributes);\n  }\n\n\n  _collectDescriptors<T>(metadata: T, types: ItemType[]) {\n    types = types.slice(0);\n\n    let obs = types.map(type => this['_' + dashCaseToCamelCase(type)]);\n    let all = new Subject<T>();\n    Observable.merge(...obs).take(obs.length).subscribe(\n      descriptor => {\n        let itemType = types.shift();\n        let name = dashCaseToCamelCase(itemType);\n        metadata[name] = descriptor;\n      },\n      error => console.log(error),\n      () => all.next(metadata)\n    );\n\n    return all;\n  }\n\n  get _gearDescriptors(): GearDescriptorCollection {\n    return this._gearDescriptorCollection;\n\n  }\n\n  get _weaponDescriptors(): WeaponDescriptorCollection {\n    return this._weaponDescriptorCollection;\n  }\n\n  _loadWeapons(talents: WeaponTalent[]) {\n    this._loadItems(WEAPON_TYPES, this._weaponDescriptorCollection,\n      (weaponType: ItemType, manifest: WeaponManifest) => {\n        let weapons = manifest.weapons;\n        let superior = _.filter(weapons, weapon => !weapon.named);\n\n        let items = {};\n        items[GearRarity.SUPERIOR] = superior;\n        items[GearRarity.HIGH_END] = weapons;\n        items[GearRarity.GEAR_SET] = [];\n\n\n        let supportedTalents: WeaponTalent[] = _.filter(talents, {supports: [weaponType]});\n\n        return <WeaponDescriptor>{\n          items: <DivisionItems>items,\n          talents: supportedTalents,\n          compatibility: manifest.compatibility,\n          stats: manifest.stats\n        };\n      });\n  }\n\n  _loadWeaponTalents() {\n    let url = this._basePath + 'weapon-talents.json';\n    this._http.get(url)\n      .map(res => <WeaponTalent[]>res.json())\n      .subscribe(\n        talents => this._weaponTalents.next(talents),\n        error => console.log('Error loading', url, error),\n        () => console.log('Finished loading', url)\n      );\n  }\n\n  _loadItems(types: ItemType[], collection: DescriptorCollection<ItemDescriptor>,\n             process: (type: ItemType, json: any) => ItemDescriptor\n               = defaultDescriptorProcessor) {\n\n    let self = this;\n    _.forEach(types, (itemType: ItemType, key: string) => {\n\n      console.log('ItemsService(', itemType, ')');\n      let subjectName = dashCaseToCamelCase(itemType);\n\n      let subject = self['_' + subjectName] as BehaviorSubject<any>;\n      if (!subject) return;\n      let url = self._basePath + itemType + '.json';\n      this._http.get(url)\n        .map(res => process(itemType, res.json()))\n        .subscribe(\n          descriptor => {\n            subject.next(descriptor);\n            collection[subjectName] = descriptor;\n          },\n          error => console.log('Error loading', url, error),\n          () => console.log('Finished loading', url)\n        );\n    });\n  }\n\n  get scores() {\n    return GEAR_SCORES;\n  }\n\n  // @TODO : add GEAR_SET images\n  get rarities(): Rarity[] {\n    return [GearRarity.SUPERIOR, GearRarity.HIGH_END, GearRarity.GEAR_SET];\n  }\n\n\n  /**\n   * Returns a descriptor for the choosen gear type\n   * @param itemType\n   * @returns {Observable<ItemDescriptor>}\n   */\n  getDescriptorFor(itemType: ItemType): Observable<ItemDescriptor> {\n    let obs: Observable<ItemDescriptor> = <Observable<ItemDescriptor>>this['_' + dashCaseToCamelCase(itemType || '')];\n    if (obs) {\n\n      return asObservable(obs, true);\n    }\n    return Observable.create();\n  }\n\n\n  _imageUrl(type: string, icon: string): string {\n    return icon ? this._imagePath + type + '/' + icon : '';\n  }\n\n  _gearImageResolve(descriptor: GearDescriptor, item: InventoryItem): ResolvedImage {\n\n    let icons = descriptor.icons[item.rarity];\n\n\n    let isGearSet = item.rarity === GearRarity.GEAR_SET;\n    let gearSetName = void 0;\n    if (isGearSet) {\n      // find item information to resolve gear name\n      let divisionItem = <DivisionItem>_.find(\n        descriptor.items[GearRarity.GEAR_SET],\n        {name: item.name}\n      );\n      gearSetName = divisionItem.belongsTo;\n\n    }\n\n\n    let icon = icons[gearSetName || item.score];\n\n    if (icon.hasOwnProperty(Gender.MALE)) {\n\n      icon = icon[Gender.MALE];\n    } else if (icon.hasOwnProperty(Gender.FEMALE)) {\n      icon = icon[Gender.FEMALE];\n    }\n\n    let isObject = _.isObject(icon);\n\n    return {\n      primary: this._imageUrl(item.type, isObject ? icon.primary : icon),\n      secondary: gearSetName ?\n        this._imageUrl('sets', gearSetName + '.png')\n        : this._imageUrl(item.type, isObject ? icon.secondary : icon)\n    };\n\n  }\n\n  _weaponImageResolve(descriptor: WeaponDescriptor, item: InventoryItem): ResolvedImage {\n    let info = <DivisionItem>_.find(descriptor.items[item.rarity], {name: item.name});\n    return {\n      primary: info ? this._imageUrl(item.type, info.icon) : '',\n      secondary: ''\n    };\n  }\n\n  /**\n   * Resolves the correct gear image\n   * @param item\n   * @returns {Observable<string>}\n   */\n  imageResolve(item: InventoryItem): Observable<ResolvedImage> {\n\n    return this.getDescriptorFor(item.type).map(descriptor => {\n      return isWeaponType(item.type)\n        ? this._weaponImageResolve(<WeaponDescriptor>descriptor, item)\n        : this._gearImageResolve(<GearDescriptor>descriptor, item);\n    });\n  }\n\n  talentImageResolve(id): ResolvedImage {\n    return {\n      primary: this._imageUrl('talents', id + '.png'),\n      secondary: ''\n    };\n  }\n\n  translateToName(itemType: ItemType) {\n    return WEAPON_TYPES_TO_LABEL[itemType];\n  }\n\n  get weaponTypeNames() {\n    return WEAPON_TYPES_TO_LABEL;\n  }\n\n  defaultWeaponBonusFor(weaponType: ItemType): WeaponBonusStat {\n    return {\n      value: 0,\n      affects: weaponType === ItemType.SMG\n        ? Affects.CRIT_HIT_CHANCE\n        : Affects.HEADSHOT_DAMAGE\n    };\n  }\n}\nexport function isWeaponType(itemType: ItemType): boolean {\n\n\n  return _.includes(WEAPON_TYPES, itemType);\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/item.service.ts\n **/","/**\n * Created by Keyston on 5/17/2016.\n */\n\nimport {provide} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {PSNIdentityStrategyImpl} from './psn-strategy';\nimport {RouteParams} from '@angular/router-deprecated';\nimport {AuthType} from '../auth.service';\nexport interface LoginResult {\n}\n\n\nexport interface IdentityStrategyConf {\n  lang?: string;\n  region?: string;\n}\nexport abstract class IdentityStrategy {\n\n\n  constructor() {\n    let self = this;\n    window[this._callBackMethodName] = (params) => this._authCallback(params);\n  }\n\n  abstract  id(): AuthType;\n\n  abstract login(): Observable<LoginResult>;\n\n  abstract config(config: IdentityStrategyConf);\n\n  abstract callback(params: RouteParams);\n\n  get _callbackUrl() {\n    let loc = window.location;\n    return loc.protocol + loc.host + '/#/authCallback/' + this.id;\n\n  }\n\n  abstract _authCallback(params);\n\n  get _callBackMethodName() {\n    return '_auth_' + this.id + '_callback_';\n  }\n\n  _completeLogin(params) {\n    let func = window.opener[this._callBackMethodName];\n    if (func) func(params);\n    window.close();\n  }\n\n  get _saveKey() {\n    return '_auth_' + this.id;\n  }\n\n  _info(): any {\n    let info = localStorage.getItem(this._saveKey);\n    return info ? JSON.parse(info) : {};\n\n  }\n\n  _save(info) {\n    localStorage.setItem(this._saveKey, JSON.stringify(info));\n  }\n\n\n}\n\nexport abstract class PSNIdentityStrategy extends IdentityStrategy {\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/login-strategies/index.ts\n **/","import {PSNIdentityStrategy, LoginResult, IdentityStrategyConf} from './index';\nimport {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {asObservable} from '../../common/utils';\nimport {RouteParams} from '@angular/router-deprecated';\nimport {AuthType} from '../auth.service';\n/**\n * Created by Keyston on 5/17/2016.\n */\n\n\nconst SEN_BASE_URL = 'https://auth.api.sonyentertainmentnetwork.com';\nconst SERVICE_ENTITY = 'urn:service-entity:psn';\nconst STATE = '1156936032';\nconst REDIRECT_URL = 'com.scee.psxandroid.scecompcall://redirect';\nconst CLIENT_ID = 'b0d0d7ad-bb99-4ab1-b25e-afa0c76577b0';\n// PSN Scope, now edited with more scopes\nconst PSN_SCOPE = 'psn:sceapp,user:account.get,user:account.settings.' +\n  'privacy.get,user:account.settings.privacy.update,user:account.realName.get,' +\n  'user:account.realName.update,kamaji:get_account_hash';\nconst CLIENT_SECRET = 'Zo4y8eGIa3oazIEp';\n\n// I still don't know what \"duid\" stands for... if you do, create an issue about it please!\nconst DUID = '00000005006401283335353338373035333434333134313a' +\n  '433635303220202020202020202020202020202020';\nconst OAUTH_URL = 'https://auth.api.sonyentertainmentnetwork.com/2.0/oauth/token';\n\ninterface OauthCallbackParams {\n  state: string;\n  code: string;\n  authCode: string;\n\n}\ninterface OauthResponse {\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n  timestamp: number;\n}\n@Injectable()\nexport class PSNIdentityStrategyImpl extends PSNIdentityStrategy {\n\n\n  private _window: Window;\n  private _processedCallback: boolean = false;\n  private _pendingResults: Subject<LoginResult>;\n  private _pending: boolean = false;\n\n  constructor(private _http: Http) {\n    super();\n\n  }\n\n  id() {\n    return AuthType.PSN;\n  }\n\n  config(config: IdentityStrategyConf) {\n  }\n\n  callback(params: RouteParams) {\n    let code = params.get('code');\n    let state = params.get('state');\n    let authCode = params.get('authCode');\n    this._completeLogin({\n      authCode: authCode,\n      code: code,\n      state: state\n    });\n\n  }\n\n\n  get _accessToken(): string {\n    return (<OauthResponse>this._info()).access_token;\n  }\n\n  _authCallback(params: OauthCallbackParams) {\n    this._processedCallback = true;\n    this._resolveAuthToken(params);\n  }\n\n  _resolveAuthToken(oauth: OauthCallbackParams) {\n\n    if (this._window && !this._window.closed) {\n      this._window.close();\n\n    }\n    let params = {\n      grant_type: 'authorization_code',\n      client_id: CLIENT_ID,\n      client_secret: CLIENT_SECRET,\n      code: oauth.authCode,\n      redirect_uri: REDIRECT_URL,\n      state: 'x',\n      scope: PSN_SCOPE,\n      duid: DUID\n    };\n\n    this._http\n      .post(OAUTH_URL, JSON.stringify(params))\n      .map(res => <OauthResponse>res.json())\n      .subscribe(\n        (resp: OauthResponse) => {\n          resp.timestamp = (new Date()).getTime();\n          this._processedCallback = false;\n          this._pending = false;\n          this._save(resp);\n        },\n        error => console.log(error),\n        () => console.log('auth completed')\n      );\n\n  }\n\n\n  get _url() {\n    let url = SEN_BASE_URL;\n    url += '/2.0/oauth/authorize?response_type=code&service_entity=' + SERVICE_ENTITY;\n    url += '&returnAuthCode=true&state=' + STATE;\n    url += '&redirect_uri=' + REDIRECT_URL;\n    url += '&client_id=' + CLIENT_ID + '&scope=' + PSN_SCOPE;\n    return url;\n  }\n\n\n  login(): Observable<LoginResult> {\n\n    this._processedCallback = false;\n    this._pending = true;\n\n    this._pendingResults = new Subject<LoginResult>();\n    let url = this._url;\n    console.log(url);\n    let win = window.open(url, 'PSNLogin', 'height=200,width=300');\n\n    /*win.addEventListener('beforeunload', (event) => {\n     if (!this._processedCallback && this._pending) {\n\n\n     alert('User exited from popup');\n     }\n     });*/\n    return asObservable(this._pendingResults, true);\n  }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/login-strategies/psn-strategy.ts\n **/","import {IdentityStrategy, PSNIdentityStrategy} from './index';\nimport {PSNIdentityStrategyImpl} from './psn-strategy';\nimport {provide} from '@angular/core';\n/**\n * Created by Keyston on 5/17/2016.\n */\n\n\nexport const LOGIN_STRATEGY_PROVIDERS: any[] = [\n  provide(PSNIdentityStrategy, {useClass: PSNIdentityStrategyImpl})\n\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/login-strategies/strategy.ts\n **/","import {Injectable} from '@angular/core';\nimport {AttributesService} from './attributes.service';\nimport {\n  ItemType, GearAttribute, AttributeType, WeaponAttribute, DivisionAttribute\n}\n  from '../common/models/common';\nimport {\n  ModSlotType, GEAR_MOD_SLOT_TYPES, WEAPON_MOD_SLOT_TYPES, WeaponModType, ModSlotKind\n}\n  from '../components/modslots/modslots.model';\nimport {asObservable} from '../common/utils';\nimport * as _ from 'lodash/index';\nimport {Observable} from 'rxjs/Observable';\nimport {isWeaponType} from './item.service';\nimport {Http} from '@angular/http';\nimport {BehaviorSubject} from 'rxjs/Rx';\n/**\n * Created by Keyston on 4/10/2016.\n */\n\n\nexport class ModSlotAttributeSet {\n  primary: DivisionAttribute[];\n  secondary: DivisionAttribute[];\n}\n\nexport interface WeaponModItem {\n  id: number;\n  name: string;\n  inheritAttribute?: number;\n\n}\nexport interface WeaponModItems {\n  muzzle: WeaponModItem[];\n  underbarrel: WeaponModItem[];\n  optics: WeaponModItems[];\n  magazine: WeaponModItem[];\n}\n\n@Injectable()\nexport class ModSlotService {\n\n  private _weaponModItems: BehaviorSubject<WeaponModItems>\n    = new BehaviorSubject<WeaponModItems>(void 0);\n\n  private _basePath = 'app/assets/json/';\n\n  static hasNative(gearType: ItemType): boolean {\n    switch (gearType) {\n      case ItemType.Mask:\n      case ItemType.BackPack:\n        return true;\n      default:\n        return false;\n    }\n\n  }\n\n  // TODO: allow to pass rarity and score to restrict more\n  static canHaveExtra(gearType: ItemType): number {\n    switch (gearType) {\n      case ItemType.Mask:\n      case ItemType.KneePads:\n      case ItemType.Holster:\n        return 2;\n\n      case ItemType.BodyArmor:\n        return 3;\n      default:\n        return 0;\n    }\n\n  }\n\n  constructor(private _attributeService: AttributesService, private _http: Http) {\n\n    this._loadWeaponMods();\n\n  }\n\n  _loadWeaponMods() {\n    let url = this._basePath + 'weapon-mods.json';\n    this._http.get(url)\n      .map(res => <WeaponModItems>res.json())\n      .subscribe(\n        items => this._weaponModItems.next(items),\n        error => console.log('Error loading', url, error),\n        () => console.log('Finished loading', url)\n      );\n  }\n\n  getTypes(itemType: ItemType) {\n    return isWeaponType(itemType) ? WEAPON_MOD_SLOT_TYPES : GEAR_MOD_SLOT_TYPES;\n  }\n\n  weaponModItemsFor(slotType: ModSlotType): Observable<WeaponModItem[]> {\n    return asObservable(this._weaponModItems, true).map(items => {\n      return items[slotType.identifier];\n    });\n  }\n\n\n  getAttributeSetFor(slotType: ModSlotType): Observable<ModSlotAttributeSet> {\n\n\n    return slotType.belongsToWeapon\n      ? this.getWeaponAttributeSetFor(slotType)\n      : this.getGearAttributeSetFor(slotType);\n\n\n  }\n\n  getWeaponAttributeSetFor(slotType: ModSlotType): Observable<ModSlotAttributeSet> {\n    return this._attributeService\n      .weaponAttributes.map((attrs: WeaponAttribute[]) => {\n        let found = _.filter(attrs, {slots: [slotType.identifier]});\n        return {\n          primary: found,\n          secondary: found\n        };\n      });\n\n  }\n\n\n  getGearAttributeSetFor(slotType: ModSlotType): Observable<ModSlotAttributeSet> {\n    return asObservable(this._attributeService\n      .gearAttributes.map((attrs: GearAttribute[]) => {\n        let primary, secondary;\n        if (slotType.isPerformance) {\n\n          primary = secondary = _.filter(attrs,\n            (attr) => attr.mod && attr.type === AttributeType.SKILL);\n\n\n        } else {\n\n          primary = [slotType\n            .resolveMainAttribute(\n              _.filter(attrs, {mod: true, type: AttributeType.MAIN}))\n          ];\n          secondary = _.filter(attrs,\n            (attr) => attr.mod &&\n            attr.type !== AttributeType.MAIN\n            && attr.type !== AttributeType.SKILL);\n\n        }\n\n\n        return {\n          primary: primary,\n          secondary: secondary\n        };\n      })).first((x, idx, _) => !!x);\n  }\n\n  getTypesForWeapon(weaponFamily: string) {\n\n  }\n\n  imageFor(modSlotType: ModSlotType) {\n    return `app/assets/images/inventory/mods/${modSlotType.identifier}.png`;\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/services/modslots.service.ts\n **/","/*\n * Providers provided by Angular\n */\nimport {bootstrap} from '@angular/platform-browser-dynamic';\nimport {DIRECTIVES, PIPES, PROVIDERS} from './platform/browser';\nimport {ENV_PROVIDERS} from './platform/environment';\nimport {App, APP_PROVIDERS, APP_DIRECTIVES} from './app';\nimport {AUTH_PROVIDERS} from './app/services/auth.service';\n/*\n * Platform and Environment\n * our providers/directives/pipes\n */\n\n/*\n * App Component\n * our top level component that holds all of our components\n */\n\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nexport function main(initialHmrState?: any): Promise<any> {\n\n  return bootstrap(App, [\n    ...PROVIDERS,\n    ...ENV_PROVIDERS,\n    ...DIRECTIVES,\n    ...PIPES,\n    ...APP_PROVIDERS,\n    ...APP_DIRECTIVES,\n    ...AUTH_PROVIDERS\n\n  ])\n    .catch(err => console.error(err));\n\n}\n\n\n/*\n * Vendors\n * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n * You can also import them in vendors to ensure that they are bundled in one file\n * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n */\n\n\n/*\n * Hot Module Reload\n * experimental version by @gdi2290\n */\nif ('development' === ENV && HMR === true) {\n  // activate hot module reload\n  let ngHmr = require('angular2-hmr');\n  ngHmr.hotModuleReplacement(main, module);\n} else {\n  // bootstrap when documetn is ready\n  document.addEventListener('DOMContentLoaded', () => main());\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.browser.ts\n **/","/*\n * These are globally available directives in any template\n */\n\nimport {PLATFORM_DIRECTIVES} from '@angular/core';\nimport {ROUTER_DIRECTIVES} from '@angular/router-deprecated';\n\n// Angular 2 Router\n\n// Angular 2 Material 2\n// TODO(gdi2290): replace with @angular2-material/all\n//import {MATERIAL_DIRECTIVES} from './angular2-material2';\n\n// application_directives: directives that are global through out the application\nexport const APPLICATION_DIRECTIVES = [\n  ...ROUTER_DIRECTIVES,\n  //...MATERIAL_DIRECTIVES\n];\n\nexport const DIRECTIVES = [\n  {provide: PLATFORM_DIRECTIVES, multi: true, useValue: APPLICATION_DIRECTIVES }\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/platform/browser/directives.ts\n **/","export * from './directives';\nexport * from './pipes';\nexport * from './providers';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/platform/browser/index.ts\n **/","/*\n * These are globally available pipes in any template\n */\n\nimport {PLATFORM_PIPES} from \"@angular/core\";\n\n// application_pipes: pipes that are global through out the application\nexport const APPLICATION_PIPES = [\n\n];\n\nexport const PIPES = [\n  {provide: PLATFORM_PIPES, multi: true, useValue: APPLICATION_PIPES }\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/platform/browser/pipes.ts\n **/","/*\n * These are globally available services in any component or any other service\n */\n\n\nimport {FORM_PROVIDERS, LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport {HTTP_PROVIDERS} from '@angular/http';\nimport {ROUTER_PROVIDERS} from '@angular/router-deprecated';\n\n// Angular 2\n\n// Angular 2 Http\n// Angular 2 Router\n\n// Angular 2 Material\n// TODO(gdi2290): replace with @angular2-material/all\n//import {MATERIAL_PROVIDERS} from './angular2-material2';\n\n/*\n * Application Providers/Directives/Pipes\n * providers/directives/pipes that only live in our browser environment\n */\nexport const APPLICATION_PROVIDERS = [\n  ...FORM_PROVIDERS,\n  ...HTTP_PROVIDERS,\n  //...MATERIAL_PROVIDERS,\n  ...ROUTER_PROVIDERS,\n  {provide: LocationStrategy, useClass: HashLocationStrategy }\n];\n\nexport const PROVIDERS = [\n  ...APPLICATION_PROVIDERS\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/platform/browser/providers.ts\n **/","// Angular 2\nimport {enableProdMode} from \"@angular/core\";\n\n// Environment Providers\nlet PROVIDERS = [];\n\nif ('production' === ENV) {\n  // Production\n  enableProdMode();\n\n  PROVIDERS = [\n    ...PROVIDERS\n  ];\n\n} else {\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS\n  ];\n\n}\n\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/platform/environment.ts\n **/"],"sourceRoot":""}